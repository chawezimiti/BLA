11/(0.98^0.1)
11/(0.04^0.1)
0.04/18
0.002^0.1
11/0.537
0.04*0.01
11(0.04^0.0004)
11/(0.04^0.0004)
plot(5,18)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("blm")
startValues("logistic",8)
0.54/18
26/(0.03^0.1)
x<-v$x
y<-v$y
points(x,y, col="red")
# Define the Schmidt function
mitcherlich <- function(x, a, b, c) {
#y <- a + b * (1 - exp(-x/c))^2
y <- a - b *c^x
return(y)
}
# Objective function to minimize - sum of squared differences between observed and predicted values
objective <- function(params, x, y) {
a <- params[1]
b <- params[2]
c <- params[3]
predicted <- mitcherlich (x, a, b, c)
error <- sum((y - predicted)^2)
return(error)
}
# Initial parameter values
initial_params <- c(18,36, 0.031)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(3.0,7.0,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(3.0,7.0,0.01),ypred, col="red")
0.07/18
26/(0.004^0.1)
26/0.004
0.004^0.01
0.004^0.000001
0.004^0.3
26/0.19
26/0.04
0.54/18
0.98^0
0.98^0.1
26/0.03
26/0.04
0.07/18
plot(0.5,26)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
0.1/18
22/0.006
22/0.1
x<-v$x
y<-v$y
points(x,y, col="red")
# Define the Schmidt function
mitcherlich <- function(x, a, b, c) {
#y <- a + b * (1 - exp(-x/c))^2
y <- a - b *c^x
return(y)
}
# Objective function to minimize - sum of squared differences between observed and predicted values
objective <- function(params, x, y) {
a <- params[1]
b <- params[2]
c <- params[3]
predicted <- mitcherlich (x, a, b, c)
error <- sum((y - predicted)^2)
return(error)
}
# Initial parameter values
initial_params <- c(26,220, 0.1)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
plot(0.2,5)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
1.52/18
5+0.95
5.95/0.08
5.95/1.52
# Initial parameter values
initial_params <- c(5,74, 0.08)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(5,3.9, 1.52)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(5,3.9, -1.52)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
plot(0.2,5)
lines(seq(0.0,0.3,0.01),ypred, col="red")
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
7.5/0.86
# Initial parameter values
initial_params <- c(5,8, 0.86)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
0.86/5
7.5/0.172
7.5/0.172^0.01
7.5/0.172^0.1
0.86/5
7.5/0.86
7.5/.4
plot(0.2,21)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
24/1.26
1.26/21
# Initial parameter values
initial_params <- c(21,19, 0.06)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
24/0.06
plot(0.2,0.5)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
(0.5-0.08)/0.19
# Initial parameter values
initial_params <- c(0.5,2.2, 0.19)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.5,2.2, 0.3)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.5,20, 0.3)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.6,20, 0.3)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
0.19/0.5
# Initial parameter values
initial_params <- c(0.5,2.50, 0.4)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.5,250, 0.4)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.5,150, 0.4)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.45,150, 0.4)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
# Initial parameter values
initial_params <- c(0.49,150, 0.4)
# Initial parameter values
initial_params <- c(0.49,2.2, 0.4)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
0.23/0.5
startValues("blm")
0.515/0.19
x<-v$x
y<-v$y
plot(0.2,0.5)
points(x,y, col="red")
# Initial parameter values
initial_params <- c(0.5,2.7, 0.46)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,0.3,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,0.3,0.01),ypred, col="red")
plot(0.2,0.5, xlim=c(0,2), ylim=c(0,1))
lines(seq(0.0,0.3,0.01),ypred, col="red")
ypred<-mitcherlich(seq(0.0,1,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,1,0.01),ypred, col="red")
noquote("y = \u03B2\u2081 + \u03B2\u2080 (1-exp(-x/\u03B2\u2082))")
\u03B2\u2082x
"y = \u03B2\u2081 + \u03B2\u2082x + \u03B2\u2083x\u00B2"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082\u00Bx"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082\u00B2"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082\u00B3"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082\u00Bx"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082^x"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082x"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082\u00Bx"
"y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082x"
Equation<-noquote("y = \u03B2\u2080 + \u03B2\u2081*\u03B2\u2082^x")
Equation
plot(0.5,10)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
0.46/10
30/0.46
# Initial parameter values
initial_params <- c(10,65, 0.05)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-mitcherlich(seq(0.0,1,0.01), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.0,1,0.01),ypred, col="red")
30/0.05
"y = min(\u03B2\u2081 + \u03B2\u2082*x, \u03B2\u2080, \u03B2\u2083 + \u03B2\u2084*x)\n\n"
"y = min(\u03B2\u2081 + \u03B2\u2082*x, \u03B2\u2080, \u03B2\u2083 + \u03B2\u2084*x)"
abs(-1)
abs(min(c(-1,-0.5)))
min(abs(-0.1,-1))
abs(c(-0.1,-1))
min(abs(c(-0.1,-1)))
plot(10,10)
6/4
6-(1.5*6)
12-15
"\u03B2\u2081"
devtools::load_all(".")
startValues("mit",8)
devtools::load_all(".")
plot(0.5,10)
points(x,y, col="red")
lines(seq(0.0,1,0.01),ypred, col="red")
startValues("mit",8)
estimated_params
devtools::load_all(".")
plot(0.5,10)
points(x,y, col="red")
lines(seq(0.0,1,0.01),ypred, col="red")
startValues("mit",8)
df<-data.frame(x=c(1,2,3,4,5), y=c(1,3,5,3,2))
plot(df)
df$x[which(df$y==max(df$y)),]
df$x
df$x[which(df$y==max(df$y))]
df<-data.frame(x=c(1,2,3,4,5,6), y=c(1,3,5,5,3,2))
plot(df)
df$x[which(df$y==max(df$y))]
mean(df$x[which(df$y==max(df$y))])
mean(3)
devtools::load_all(".")
devtools::load_all(".")
startValues("schmidt",8)
plot(0.500,18)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
# Define the Schmidt function
schmidt <- function(x, a, b, c) {
y <- a + b * (x - c)^2
return(y)
}
# Objective function to minimize - sum of squared differences between observed and predicted values
objective <- function(params, x, y) {
a <- params[1]
b <- params[2]
c <- params[3]
predicted <- schmidt(x, a, b, c)
error <- sum((y - predicted)^2)
return(error)
}
# Initial parameter values
initial_params <- c(19,0, 0.55)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred)
startValues("blm")
startValues("logistic",8)
4/18
18.5+6
24.5/0.22
plot(0.500,18)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("blm")
startValues("logistic",8)
0.72/20
77/0.036
77/0.72
# Initial parameter values
initial_params <- c(20,2138, 0.5)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred)
startValues("blm")
50/0.036
50/0.72
schmidt(0, estimated_params[1],estimated_params[2], estimated_params[3])
2/0.036
38/20
77/1.9
# Initial parameter values
initial_params <- c(20,2138, 0.5)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred)
# Initial parameter values
initial_params <- c(20,0, 0.5)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred)
lines(seq(0.300,0.700,0.010),ypred, col="red")
devtools::load_all(".")
startValues("schmidt",8)
# Initial parameter values
initial_params <- c(20,-205, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred, col="blue")
plot(0.500,36)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
startValues("schmidt",8)
# Initial parameter values
initial_params <- c(36,-10, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred, col="blue")
# Initial parameter values
initial_params <- c(36,0, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
# Initial parameter values
initial_params <- c(36,5, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred, col="blue")
# Initial parameter values
initial_params <- c(36,1, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred, col="blue")
# Initial parameter values
initial_params <- c(36,-1, 0.45)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.300,0.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.300,0.700,0.010),ypred, col="blue")
plot(0.800,4)
v<-locator(8)
plot(1,4)
v<-locator(8)
x<-v$x
y<-v$y
points(x,y, col="red")
# Initial parameter values
initial_params <- c(4.6,1, 0.55)
# Optimize the objective function
result <- optim(par = initial_params, fn = objective, x = x, y = y)
# Estimated parameters
estimated_params <- result$par
estimated_params
ypred<-schmidt(seq(0.600,1.700,0.010), estimated_params[1],estimated_params[2], estimated_params[3])
lines(seq(0.600,1.700,0.010),ypred, col="blue")
startValues("schmidt",8)
estimated_params
#usethis::use_readme_rmd() # creates a readme file
devtools::build_readme()
