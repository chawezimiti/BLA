sd(x)
sd(y)
cor(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh = c(0.3,0.4,0.5)
ble_profile(data,start=start,model = "blm", sigh = sigh)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7,0.8)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7,0.8,0.9,1)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.95)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh = c(0.3,0.4,0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
x<-log(SoilP$P)
y<-SoilP$yield
data<-data.frame(x,y)
start<-c(4,3,13.6, 35, -5,3,9,0.50,1.9,0.05)
sigh = c(0.4,0.6,0.7)
ble_profile(data,start=start,model = "trapezium", sigh = sigh)
cbvn(data,start=start,model = "trapezium", sigh = 0.7)
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
mean(x)
mean(y)
sd(x)
sd(y)
cor(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
cbvn(data,start=start,model = "blm", sigh = 0.9)
cbvn(data,start=start,model = "blm", sigh = 0.5)
x<-log(SoilP$P)
y<-SoilP$yield
data<-data.frame(x,y)
plot(data)
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
cbvn(data,start=start,model = "blm", sigh = 0.5)
cbvn(data,start=start,model = "blm", sigh = 0.8)
cbvn(data,start=start,model = "blm", sigh = 0.8,
xlab=expression("mm ha"^-1))
cbvn(data,start=start,model = "blm", sigh = 0.8,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1))
cbvn(data,start=start,model = "blm", sigh = 0.8,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1))
cbvn(data,start=start,model = "blm", sigh = 0.8,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16)
cbvn(data,start=start,model = "blm", sigh = 0.8,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
cbvn(data,start=start,model = "blm", sigh = 0.6,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh <- c(0.3,0.4,0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
cbvn(data,start=start,model = "blm", sigh = 0.7,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
cbvn(data,start=start,model = "blm", sigh = 0.6,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
expl_boundary(x,y,10,1000)
expl_boundary(x,y,10,100)
expl_boundary(x,y,10,100)
expl_boundary(x,y,10,300)
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh <- c(0.3,0.4,0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.4,0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
beef<-as.data.table(x=x,y=y)
head(beef)
beef<-as.data.table(data.frame(x=x,y=y))
head(beef)
devtools::load_all(".")
x<-soil$P
y<-soil$yield
x<-log(x)
df<-data.frame(x,y)
library(aplpack)
df<-data.frame(x,y)
bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = T)
dat<-rbind(bag$pxy.bag,bag$pxy.outer)
x<-dat[,1]
y<-dat[,2]
start<-c(4,3,13.6)
model<-blqr(x,y,start=start,model = "lp", xmax = 4.2, tau=0.99)
start<-c(4,3,13.6, 35, -5)
model<-blqr(x,y,start=start,model = "trapezium", tau=0.99)
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh <- c(0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
# using a subset of the data
x<-log(SoilP$P)
y<-SoilP$yield
data<-data.frame(x,y)
data<-data[which(data$y>6),]
x<-data$x
y<-data$y
plot(x,y)
start<-c(4,3,13.6, 35, -5)
model<-blqr(x,y,start=start,model = "trapezium", tau=0.99)
model<-blqr(x,y,start=start,model = "trapezium", tau=0.99)
devtools::check_win_devel()
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
plot(data)
start<-c(0.5,0.02,5)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(0.5,0.02,4)
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(0.5,0.02,4.5)
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(0.5,0.02,5)
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(0.5,0.02,4.5)
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(0.5,0.02,5)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
devtools::check_win_devel()
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
start<-c(0.5,0.02,5)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
start<-c(0.5,0.02,4.5)
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
start<-c(0.5,0.02,5)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
devtools::check_win_devel()
x<-log(SoilP$P)
y<-SoilP$yield
data<-data.frame(x,y)
start<-c(4,3,13.6, 35, -5,3,9,0.50,1.9,0.05)
cbvn(data,start=start,model = "trapezium", sigh = 0.7,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(4,3,13.6,3,9,0.50,1.9,0.05)
cbvn(data,start=start,model = "lp", sigh = 0.7,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
cbvn(data,start=start,model = "lp", sigh = 0.7,
xlab=expression("Phosphorus/ln(mg L"^-1*")"),
ylab=expression("Yield/ t ha"^-1), pch=16,
col="grey")
start<-c(4,3,13.6)
start<-c(4,3,13.6)
blqr(x,y, start=start,model = "lp", tau=0.99,
start<-c(4,3,13.6)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
blqr(x,y, start=start,model = "lp", tau=0.95,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
start<-c(4,3,13.6)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
x<-log(SoilP$P)
y<-SoilP$yield
start<-c(4,3,13.6)
blqr(x,y, start=start,model = "lp", tau=0.99,
xlab=expression("ET mm ha"^-1),
ylab=expression("Wheat yield/ ton ha"^-1),
pch=16, col="grey")
devtools::check_win_devel()
devtools::check_win_devel()
devtools::load_all(".")
x<-soil$P
y<-soil$yield
x<-log(x)
df<-data.frame(x,y)
bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = T)
library(aplpack)
bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = T)
dat<-rbind(bag$pxy.bag,bag$pxy.outer)
x<-dat[,1]
y<-dat[,2]
plot(x,y, pch=16)
data<-data.frame(x,y) #
blbin(x,y,bins=c(1.6,4.74,0.314),start=start,model = "explore", tau=0.99)
start<-c(4,3,13.6)
bins<-c(1.6,4.74,0.314)
model<-blbin(x,y,bins=bins,start=start,model = "lp", xmax = 4.2, tau=0.99)
bins<-c(1.6,4.74,0.314,0.1)
model<-blbin(x,y,bins=bins,start=start,model = "lp", xmax = 4.2, tau=0.99)
bins<-c(1.6,4.74,0.314,0.05)
model<-blbin(x,y,bins=bins,start=start,model = "lp", xmax = 4.2, tau=0.99)
blbin(x,y,bins=c(1.6,4.74,0.314,0.05),start=start,model = "explore", tau=0.99)
blbin(x,y,bins=c(1.6,4.74,0.314,0.005),start=start,model = "explore", tau=0.99)
bins<-c(1.6,4.74,0.314)
model<-blbin(x,y,bins=bins,start=start,model = "lp", xmax = 4.2, tau=0.99)
start<-c(35,0.018,14)
model<-blbin(x,y,bins=bins,start=start,model = "mit", xmax = 4.2, tau=0.99)
points(x,predictBL(model, x), pch=16, col="blue")
start<-c(158,0.09,13.5)
model<-blqr(x,y,start=start,model = "mit", xmax = 4, tau=0.99)
start<-c(35,0.018,14)
model<-blbin(x,y,bins=bins,start=start,model = "mit", xmax = 4.2, tau=0.99)
model
start<-c(158.1,0.1,13.3)
model<-blqr(x,y,start=start,model = "mit", tau=0.99)
model
start<-c(0.1,158,13.3)
model<-blqr(x,y,start=start,model = "mit", xmax = 4, tau=0.99)
model
devtools::check_win_devel()
#usethis::use_pkgdown()
pkgdown::build_site() # to build the site
devtools::submit_cran()
x<-evapotranspiration$`ET(mm)`
devtools::load_all(".")
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
expl_boundary(x,y,10,100) # recommendation is to set simulations to greater than 1000
suppressMessages(expl_boundary(x,y,10,100) )
devtools::load_all(".")
expl_boundary(x,y,10,100) # recommendation is to set simulations to greater than 1000
devtools::load_all(".")
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh <- c(0.5,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
devtools::load_all(".")
xmin<-c(1,2,2,NA,2)
na.drop(xmin)
devtools::load_all(".")
na.drop(xmin)
suppressMessages(na.drop(xmin))
plot(x,y)
startValues(model="lp")
devtools::load_all(".")
startValues(model="lp")
startValues(model="blm")
startValues(model="blm")
suppressMessages(startValues(model="blm"))
layout()
beef<- function(x){
plot_layout<-rbind(c(1,1,2),c(1,1,3))
layout(plot_layout)
hist(x)
boxplot(x)
hist(x)
}
beef(rnorm(100,2,1))
beef(rnorm(100,2,1))
hist(rnorm(100,2,1))
par(mfrow=c(1,1))
hist(rnorm(100,2,1))
beef(c("a","b"))
hist(rnorm(100,2,1))
hist(rnorm(100,2,1))
beef<- function(x){
### Setting the graphic space---------------------------------------------------------
old_par <- par(no.readonly = TRUE) # Save the current graphical parameters
on.exit(par(old_par))# Ensure the original graphical parameters are restored on exit
par(mfrow=c(1,2))
##------------------------------------------------------------------------------------
plot_layout<-rbind(c(1,1,2),c(1,1,3))
layout(plot_layout)
hist(x)
boxplot(x)
hist(x)
}
beef(rnorm(100,2,1))
hist(rnorm(100,2,1))
par(mfrow=c(1,1))
hist(rnorm(100,2,1))
beef(c("a","b"))
hist(rnorm(100,2,1))
getOption("scipen")
# Load necessary library
library(tools)
# Read the DESCRIPTION file
desc <- read.dcf("DESCRIPTION")
# Extract the Description field
description_field <- desc[,"Description"]
# Check for leading or trailing spaces
has_spaces <- grepl("^\\s|\\s$", description_field)
has_spaces
if (has_spaces) {
cat("The Description field has leading or trailing spaces.\n")
} else {
cat("The Description field is clean.\n")
}
# Check for multiple spaces within the description
if (grepl("\\s{2,}", description_field)) {
cat("The Description field contains multiple spaces in a row.\n")
} else {
cat("The Description field does not contain multiple spaces in a row.\n")
}
# Function to wrap text at a specified width
wrap_text <- function(text, width = 90) {
paste(strwrap(text, width = width), collapse = "\n ")
}
# Read the DESCRIPTION file
desc <- read.dcf("DESCRIPTION")
# Extract and wrap the Description field
description_field <- desc[,"Description"]
wrapped_description <- wrap_text(description_field)
# Update the DESCRIPTION file with the wrapped Description field
desc[,"Description"] <- wrapped_description
# Write the updated DESCRIPTION file back
write.dcf(desc, "DESCRIPTION", width = 80) #
# Write the updated DESCRIPTION file back
write.dcf(desc, "DESCRIPTION", width = 80) #
# Function to wrap text at a specified width
wrap_text <- function(text, width = 90) {
paste(strwrap(text, width = width), collapse = "\n ")
}
# Read the DESCRIPTION file
desc <- read.dcf("DESCRIPTION")
# Extract and wrap the Description field
description_field <- desc[,"Description"]
wrapped_description <- wrap_text(description_field)
# Update the DESCRIPTION file with the wrapped Description field
desc[,"Description"] <- wrapped_description
# Write the updated DESCRIPTION file back
write.dcf(desc, "DESCRIPTION", width = 80) #
######################
# usethis::use_package("MASS")
# usethis::use_package("mvtnorm")
# usethis::use_import_from("aplpack", "bagplot")
#
usethis::use_tidy_description() # puts the description in an acceptable form
######################
# usethis::use_package("MASS")
# usethis::use_package("mvtnorm")
# usethis::use_import_from("aplpack", "bagplot")
#
usethis::use_tidy_description() # puts the description in an acceptable form
#usethis::use_pkgdown()
pkgdown::build_site() # to build the site
#usethis::use_pkgdown()
pkgdown::build_site() # to build the site
devtools::check_win_devel()
######################
# usethis::use_package("MASS")
# usethis::use_package("mvtnorm")
# usethis::use_import_from("aplpack", "bagplot")
#
usethis::use_tidy_description() # puts the description in an acceptable form
######################
# usethis::use_package("MASS")
# usethis::use_package("mvtnorm")
# usethis::use_import_from("aplpack", "bagplot")
#
usethis::use_tidy_description() # puts the description in an acceptable form
devtools::load_all(".")
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
expl_boundary(x,y,10,10) # recommendation is to set simulations to greater than 1000
suppressMessages(expl_boundary(x,y,10,10) )
devtools::load_all(".")
expl_boundary(x,y,10,10) # recommendation is to set simulations to greater than 1000
expl_boundary(x,y,10,1000) # recommendation is to set simulations to greater than 1000
plot(x,y)
startValues(model="blm")
suppressMessages(startValues(model="blm"))
devtools::check_win_devel()
devtools::check_win_devel()
start<-c(0.5,0.02, mean(x), mean(y), sd(x), sd(y), cor(x,y))
start
devtools::load_all(".")
data<-data.frame(x,y)
start<-c(0.5,0.02, mean(x), mean(y), sd(x), sd(y), cor(x,y))
cbvn(data, start=start, model = "blm")
cbvn(data, start=start, model = "blm", sigh=0.6)
cbvn(data, start=start, model = "blm", sigh=0.5)
cbvn(data, start=start, model = "blm", sigh=0.4)
cbvn(data, start=start, model = "blm", sigh=0.55)
cbvn(data, start=start, model = "blm", sigh=0.6)
cbvn(data, start=start, model = "blm", sigh=0.5)
cbvn(data, start=start, model = "blm", sigh=0.51)
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1))
x<-evapotranspiration$`ET(mm)`
y<-evapotranspiration$`yield(t/ha)`
data<-data.frame(x,y)
start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)
sigh <- c(0.5,0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.5,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
sigh <- c(0.6,0.7,0.8,0.9)
ble_profile(data,start=start,model = "blm", sigh = sigh)
cbvn(data, start=start, model = "blm", sigh=0.9,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1))
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1))
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1), line_smooth = 100)
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1),
line_smooth = 100)
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1),
line_smooth = 1000)
cbvn(data, start=start, model = "blm", sigh=0.51,
xlab=expression("ET/ mm ha"^-1),
ylab=expression("Yield/ ton ha"^-1),
line_smooth = 100)
devtools::check_win_devel()
mean(x)
mean(y)
sd(x)
sd(y)
cor(x,y)
summastat("x")
plot(x,y)
usethis::use_version('patch')
usethis::use_version('patch')
devtools::submit_cran()
usethis::use_github_release()
usethis::use_dev_version()
