[{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Boundary Line Analysis","text":"biological response, y, observed function single factor interest, x, uncontrolled environment .e. influence factors controlled, scatter observations observed due many sources variation. , example, x along factors contributes additive way variation y bivariate normal distribution may expected. However, complex effects possible. example, data set large enough contain wide range combinations conditions, x factors influence y accordance non-linear process characterized law minimum, law optimum (see Miti et al, 2024a), data points observed favourable conditions response y fall upper edges data cloud, maximum possible response y given value x. data points fall maximum response result limiting effect factors controlled . Webb (1972) suggested methodology can used describe relationship data points upper edges data sets likely relationship y x factors limiting. referred relationship boundary line. initial boundary line method Webb (1972) involved selection data points upper edges data cloud visually. boundary line model fitted selected data points describe relationship. Currently, many procedures fitting boundary line model dataset developed improve procedure statistical heuristic. include binning, BOLIDES, quantile regression, makowski quantile regression censored bivariate normal methods. Similarly, data exploratory methods developed provide evidence boundary existence dataset therefore, justifies use boundary line analysis data set (Milne et al. 2006). Colleagues Webb (1972), provided initial data boundary line analysis first applied, convinced data realized boundary, hence need testing data sets presence boundary. boundary exists data set, expected distribution points upper edges data cloud clustered randomly distributed response can go beyond observed boundary. Evidence distribution provides grounds proceeding boundary line analysis, Miti et al. (2024b) describe method package provides evaluate evidence. noted powerful testing alternative bivariate normal distribution can done fitting boundary line model cbvn() function. BLA package provides group functions carryout boundary line analysis data set R software. includes functions explore data, test evidence boundary data set, fit boundary line post-hoc analysis fitting boundary line.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"load-the-bla-package","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Load the BLA package","title":"Boundary Line Analysis","text":"BLA package installed, first step load R session using library() command. package aplpack also loaded use outlier detection function bagplot().","code":"library(BLA) library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"data","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Data","title":"Boundary Line Analysis","text":"BLA package contains data set called soil consisting soil pH, phosphorus wheat yield measurements farms UK. use data set illustrate functions BLA package. view first six lines data, run code :","code":"head(soil) #>      yield   pH  P #> 1  9.55787 6.66 10 #> 2  8.88999 6.92  9 #> 3  8.38731 6.83 10 #> 4  9.19583 6.34  9 #> 5  9.83057 6.74  9 #> 6 11.88140 6.54 12"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"exploratory-analysis","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Exploratory analysis","title":"Boundary Line Analysis","text":"exploratory analysis important initial step boundary line analysis. step serves show data distributed using various indices also check outliers data set. variable dataset skewed, especially independent variable, transformation may required can assumed normal distribution. boundary line analysis sensitive outlying values, must identified removed required. boundary line model may expect see non-normal variation response variable, case P, possibly increased density upper bound rest data points must appear plausibly drawn normal distribution. Exploratory analysis, particularly using plots, robust statistics octile skewness, provides basis assess plausibility underlying normal variable, perhaps censoring effect whether transformation needed, well form model can fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"normality-test","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Normality test","title":"Boundary Line Analysis","text":"assess distribution data, summastat() function provides different summary statistics graphical representation variable distribution. Let us set variables P wheat yield data set x y respectively applying summastat() functions   results, wheat yield (y) variables can considered normally distributed soil P (x) skewed. variable assumed normal distribution, indices skewness -1 1 Octile skewness -0.2 0.2. graphical representation distribution given well. soil P can log transformed check summary statistics plot  results, variable log soil P can assumed normal distribution.","code":"x<-soil$P y<-soil$yield summastat(x) #>        Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.966     22         16         32 207.0301 14.38854 1.840588 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429   5.7639           43  summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD  Skewness #> [1,] 9.254274 9.36436    8.20355    10.3944 3.454814 1.858713 -0.482355 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05802283 1.294174            7 summastat(log(x)) #>        Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.1264 3.091042   2.772589   3.465736 0.2557263 0.5056939 0.1295244 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05404542            0  x<-log(x) # transforms soil P to log"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"outlier-detection-and-removal","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Outlier detection and removal","title":"Boundary Line Analysis","text":"Outliers identified using bagplot method (Rousseeuw et al., 1999). bag plot multivariate equivalent box plot. utilise bagplop() function aplpack package produce bagplots.bagplot three main components. depth median represent center data cloud. equivalent median univariate box-plot Bag contains 50% data points. equivalent inter-quartile range univariate box-plot. Loop contains points outside bag outliers Outliers values outside loop variables x y now extracted results bag plot outliers removed","code":"vals_ur<-matrix(NA,length(x),2) #Create a matrix with x and y as required by the bag plot function vals_ur[,1]<-x  vals_ur[,2]<-y  bag<-bagplot(vals_ur, ylim=c(0,20), show.whiskers =F,create.plot = TRUE) # run the bagplot function legend(\"topright\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),         pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"),        cex=0.7)  vals<-rbind(bag$pxy.bag,bag$pxy.outer) # to remove outliers, select points in the bag and loop only x<-vals[,1] y<-vals[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"test-for-presence-of-boundary-in-dataset","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Test for presence of boundary in dataset","title":"Boundary Line Analysis","text":"function exp_boundary() can used evaluate evidence observations clustered near upper boundary data set, testing unbounded bivariate normal distribution null hypothesis. standard deviation (sd) Euclidean distance boundary points centre data set used measure density points upper edges data. smaller sd value, denser distribution. function uses convex hull select points upper boundary. default selecting first 10 consecutive convex hulls (shells=10). convex hulls splits two sections, right left sections, evidence boundary existence sections checked determining probability observed density points upper edges data bivariate normal null hypothesis. detail provided Miti et al. 2024b. reject null hypothesis p< 0.05.  p-values left right sections less 0.05. results indicate evidence upper boundary left right sections scatter. suggests justification fitting boundary data. graphical representation scatter plot boundary points also given well density histograms showing observed standard deviation given 10000 simulated standard deviations normal unbounded data .","code":"bound_test<-expl_boundary(x,y,shells = 10, simulations = 100,                            pch=16, col=\"grey\") # bound_test #>   Index Section    value     Mean p_value #> 1    sd    Left 1.045711 1.134728    0.03 #> 2    sd   Right 1.115379 1.200326    0.02"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"fitting-boundary-line-using-different-methods","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Fitting boundary line using different methods","title":"Boundary Line Analysis","text":"exploratory tests indicated data provides evidence upper boundary, outliers variables, x y, appear normally distributed. therefore, proceed fit boundary line model data set. several methods can used fit boundary line data set can classified heuristic (Bolides, Binning & quantile regression) statistical methods (censored bivariate normal). Miti et al. (2024a) give detail methods.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"bolides-algorithm","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Bolides algorithm","title":"Boundary Line Analysis","text":"method fit boundary line following boundary line determination technique proposed Schnug et al. (1995). fit boundary line using BOLIDES algorithm , bolides() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. “blm” linear model. xmax argument describes maximum value independent variable beyond relation x y longer theoretically feasible. arguments relate plot parameters plot() function. boundary fitting methods require initial starting values parameters proposed model. initial starting values optimized find parameters proposed model optim() function base R. get start starting values, bolides() function run argument model=\"explore\". allows us view selected boundary points using boundary line determination technique.  plot, can seen “trapezium” model appropriate data set. function startValues() can used determine initial start values. information startValues() function see ?startValues(). scatter plot y x active plot window R, run function startValues(\"trapezium\"), use mouse click plot five boundary points follow trapezium model order increasing x values. proposed start values produced. Note can done models well. arguments set, function can run  results show optimized parameters plot fitted model. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x. Say want predict maximum possible yield response soil P values 4.5, 7.4, 12.2, 20.1 54.5 mg/kg. Remember model fitted values log soil P therefore, values must first log transformed prediction made. can use function predictBL() purpose. information function, see ?predictBL() .","code":"?bolides bolides(x,y,model = \"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 ?startValues() startValues(\"trapezium\") # then select the five points at the edge of the dataset that make up the trapezium model in order of increasing x values. start<-c(4,3,14,104,-22) # start values is a vector of five consists of intercept, slope, plateau yield, intercept2 and slope2.   model1<-bolides(x,y, start = start,model = \"trapezium\",                 xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  ylab=expression(\"Yield/ t ha\"^-1), pch=16,                  col=\"grey\", bp_col=\"grey\") model1 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>      Estimate #> β₁   4.765511 #> β₂   3.456652 #> β₀  13.573119 #> β₃ 108.346207 #> β₄ -21.263562 #>  #> $RMS #> [1] 0.2174186 P<-c(4.5, 7.4, 12.2, 20.1, 54.5) P_log<-log(P)  Max_Response<-predictBL(model1, P_log) # the argument inputs are the boundary line model and the independent values (in this case P_log)  Max_Response #> [1]  9.964583 11.683930 13.412104 13.573119 13.573119"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"binning-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Binning method","title":"Boundary Line Analysis","text":"binning methodology involves splitting data several sections x-axis selecting boundary point section based set criteria (mostly 95$^{\\rm th}$ 99$^{\\rm th}$ percentile) (Shatar McBratney, 2004). fit boundary line using binning method, blbin() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. model=\"blm\" linear model. bins argument describes size bins vector length 3 containing minimum maximum independent variable values, size bins used data respectively. assume 99$^{\\rm th}$ percentile (tau=0.99) boundary. initial start start values can determined previously shown previous section  plot, can seen “trapezium” model appropriate data set. values start can now obtained function can now run.  results show optimized parameters plot. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blbin bins<-c(1.61,4.74,0.313)   blbin(x,y, bins,model = \"explore\", tau=0.99, pch=16, col=\"grey\") #>        x               y         #>  Min.   :1.792   Min.   :10.71   #>  1st Qu.:2.487   1st Qu.:11.98   #>  Median :3.162   Median :12.83   #>  Mean   :3.175   Mean   :12.55   #>  3rd Qu.:3.862   3rd Qu.:13.34   #>  Max.   :4.591   Max.   :13.37 startValues(\"trapezium\") start<-c(4.75, 3.23, 13.3, 24.87,-2.95 )  model2<-blbin(x,y, bins,start = start,model = \"trapezium\",                tau=0.99,                ylab=expression(\"t ha\"^-1),                xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                pch=16, col=\"grey\", bp_col=\"grey\") model2 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁+ β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  4.595981 #> β₂  3.409921 #> β₀ 13.342115 #> β₃ 21.883246 #> β₄ -2.262389 #>  #> $RMS #> [1] 0.01027899"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"quantile-regression-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Quantile regression method","title":"Boundary Line Analysis","text":"method fits boundary line using principle quantile regression (Cade Noon, 2003). fit boundary line using quantile regression method, blqr() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. “blm” linear model. argument tau describes quantile value described boundary. assume 99$^{\\rm th}$ quantile (tau=0.99) value boundary. arbitrary assumption, reason treat method heuristic. initial start start values can determined previously shown previous section. however, blqr() function explore option hence startValues() function used just plot x y directly according suggested model structure upper edge data. trapezium model used data. startvalues can now used blqr() function.  results show optimized parameters plot. quantile regression method produce measures uncertainty parameters, BLA report conditional arbitrary choice tau. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blqr plot(x,y)  startValues(\"trapezium\") start<-c(4,3,13.5,31,-4.5)  model3<-blqr(x,y, start = start, model = \"trapezium\",              xlab=expression(\"Phosphorus/ mg L\"^-1),               ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),              pch=16,tau=0.99, col=\"grey\") # may take a few seconds to ran model3 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  7.559968 #> β₂  2.142848 #> β₀ 13.363650 #> β₃ 30.667717 #> β₄ -4.192797 #>  #> $RSS #> [1] 252.7349"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"censored-bivariate-normal-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Censored bivariate normal model","title":"Boundary Line Analysis","text":"fit boundary line using Censored bivariate normal model method, see vignette(\"Censored_bivariate_normal_model\").","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"using-your-own-defined-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Using your own defined model","title":"Boundary Line Analysis","text":"illustrated methods fitting boundary line -built models. include linear, linear plateau, mitscherlich, schmidt, logistic, logistic model proposed Nelder (1961), inverse logistic, double logistic, quadratic trapezium models. However, cases one wants fit another model part built models. following steps illustrate fit custom model. Though illustrated using bolides() function, also applies blbin(), blqr() cbvn() functions. Assuming initial data exploratory step done, first step check structure boundary points using argument model=\"explore\" bolides() function.  Lets say want fit model y=β0−β1(x−β2)2 y=\\beta_0 - \\beta_1(x-\\beta_2)^2 model written form R function parameters always written alphabetical order , b c three parameter function, , b,c d four parameter function . next step suggest initial start start values. sensible values else function converge. arranges alphabetical order start=c(,b,c). Replace , b c numeric values choice. arguments bolides() function can now added. case, argument model set “”. arguments equation now set custom function (equation=custom_function)  parameters models shown results. prediction boundary response values value x can done previously shown using predictBL() function.","code":"bolides(x,y,model=\"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 custom_function<-function(x,a,b,c){   y<- a - b*(x-c)^2 } start<-c(13.5,3,3.3)    model4<-bolides(x,y, start = start,model = \"other\",                 equation=custom_function,                 xlab=expression(\"Phosphorus/mg L\"^-1),                  ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  pch=16, ylim=c(3.8,14.5), col=\"grey\",bp_col=\"grey\") model4 #> $Model #> [1] \"other\" #>  #> $Equation #> function (x, a, b, c)  #> { #>     y <- a - b * (x - c)^2 #> } #> <bytecode: 0x558027193828> #>  #> $Parameters #>    Estimate #> a 14.498417 #> b  2.175998 #> c  3.128628 #>  #> $RMS #> [1] 0.5166668"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"closing-remarks","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Closing remarks","title":"Boundary Line Analysis","text":"boundary line fitting methods illustrated use optimization function determine parameters proposed models. remove risk local optimum parameters, advised models ran several starting values results smallest error can selected. method produces error value output. residue mean square (RMS) blbin() bolides() blqr() residue sum squares (RSS). cbvn(), use likelihood value.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Boundary Line Analysis","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. https://doi.org/10.1890/1540-9295(2003)001[0412:AGITQR]2.0.CO;2 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794 Miti, C., Milne, ., Giller, K., & Lark, R. (2024). concepts quantification yield gap using boundary lines. review. Field Crops Research, 311. https://doi.org/10.1016/j.fcr.2024.109365. Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. https://doi.org/10.2307/2527498 Rousseeuw, P. J., Ruts, ., & Tukey, J. W. (1999). bagplot: bivariate boxplot. American Statistician, 53, 382–387. https://doi.org/10.1080/00031305.1999.10474494 Shatar, T. M., & McBratney, . B. (2004). Boundary-line analysis field-scale yield response soil properties. Journal Agricultural Science, 142 , 553-560. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Use of censored bivariate normal model function for yield gap analysis","text":"censored bivariate normal model (Lark Milne, 2016) statistical method fit boundary line data. fits boundary line using maximum likelihood approach censored bivariate distribution. removes subjectivity associated boundary line fitting methods ( bolides, Binning quantile regression) selecting boundary points boundary line fitted specifying arbitrary quantile model. also gives evidence presence boundary data set bivariate normal null distribution. method previously used fit boundary lines data nitrous oxide emission function soil moisture (Lark Milne, 2016) , wheat yield function nutrient concentration (Lark et al. 2020). R package, BLA, contains exploratory boundary fitting functions can used process fitting boundary line data using censored bivariate normal model. vignette gives step step process fitting boundary line subsequent post-hoc analysis. demonstration, data set soil used boundary line analysis carried soil P pH.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"load-the-bla-package","dir":"Articles","previous_headings":"","what":"Load the BLA package","title":"Use of censored bivariate normal model function for yield gap analysis","text":"Load BLA package using library() function. addition, aplpack package also loaded. aplpack package contains bagplot() function used identify outliers data set.","code":"library(BLA) library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"yield-gap-analysis-using-boundary-lines","dir":"Articles","previous_headings":"","what":"Yield gap analysis using boundary lines","title":"Use of censored bivariate normal model function for yield gap analysis","text":"data going used called soilwhich part BLA package. contains measures wheat yield farms different parts UK associated soil properties pH phosphorus. process yield gap analysis involves two step include (1) fitting boundary line (2) determining limiting factor. first fit boundary line soil P pH limiting factor determined.","code":"data(\"soil\")"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"data-exploration","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil P boundary line fitting","what":"Data exploration","title":"Use of censored bivariate normal model function for yield gap analysis","text":"Exploratory analysis essential initial step fitting boundary line data. step ensures assumptions censored bivariate normal model met. Three exploratory procedures performed data include (1) Assessing plausibility normality variables, (2) Removal outliers, (3) Testing evidence boundary data. 1. Assessing normality independent dependent variable Boundary line model fitting using cbvn() requires independent (x) dependent (y) variables normally distributed albeit censoring variable y. summastat() function gives summary statistics distribution variable. octile skewness robust measure skew, expect absolute value less 0.2 normally distributed variable. also assess plots data, bearing mind dependent variable may subject censoring large values target model.    2. Removal outliers Boundary line analysis sensitive outlying values hence required identified removed. can done using bagplot() function aplpack package. bag plot, bivariate box plot, four main components, (1) depth median (equivalent median box plot) represents centre data set, (2) bag contains 50% data points (eqiuavalent interquartile range), (3) ‘fence’ separates probable outliers, (4) loop contains points outside bag outliers. 3. Testing data presence boundary boundary exists data set, expected clustering observations upper edges data cloud compared bivariate normally distributed data data points upper edges sparse small probability density . boundary can assumed data set evidence clustering upper edges. expl_boundary() function, based convex hull, can used access presence boundary (Miti et al, 2024). function checks probability observed clustering came bivariate normal distribution (p-value). results, probability (p-value) points close data came bivariate normally distributed data less 5%. Therefore, evidence bounding effects data right left sections data. Note , plot, data split right left sections get information clustering nature points.","code":"x<-soil$P y<-soil$yield  #Distribution of the x variable  summastat(x) #>        Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.966     22         16         32 207.0301 14.38854 1.840588 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429   5.7639           43  summastat(log(x)) #>        Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.1264 3.091042   2.772589   3.465736 0.2557263 0.5056939 0.1295244 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05404542            0  x<-log(x) # since x required a transformation to assume it is from a normal distribution.  #Distribution of the y variable  summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD  Skewness #> [1,] 9.254274 9.36436    8.20355    10.3944 3.454814 1.858713 -0.482355 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05802283 1.294174            7 # Create a dataframe containing x and y  df<-data.frame(x,y)  # Input the dataframe into the bagplot() function  bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = FALSE)  # Combine data points from \"bag\" and within the loop i.e. exclude the outliers  dat<-rbind(bag$pxy.bag,bag$pxy.outer)  # Output is a matrix, we can pull out x and y variables for next stage   x<-dat[,1]  y<-dat[,2] expl_boundary(x,y) # may take a few minutes to complete"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"fitting-the-boundary-line-to-data","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil P boundary line fitting","what":"Fitting the boundary line to data","title":"Use of censored bivariate normal model function for yield gap analysis","text":"exploratory tests indicated data provide evidence boundary, outliers identified removed, variables x y normally distributed. therefore proceed fit boundary line model data set using censored bivariate normal model. function cbvn() fits boundary line data. information arguments function, check Argument values function cbvn() need set . Firstly, create data-frame containing x y, called data. Secondly, cbvn() requires initial starting values, start, parameters boundary line (censor) bivariate normal distribution. Starting values boundary line depend model one wishes fit data (see options ?cbvn) . case, shall fit linear+plateau model (lp) hence parameters plateau value intercept slope linear component. boundary line start values can obtained using function startValues(). information startValues() function run code ?startValues. scatter plot y x active plot window R, run function start.values(\"lp\"), click plot, point expect lowest largest response linear model boundary. Note starting values models can determined changing model name “lp” desired models (see ?startValues help file). Next, determine parameters bivariate normal distribution include means x y variables, standard deviation x y variables, correlation x y. Another important argument standard deviation measurement error, sigh, response variable y. cases might estimated observations analytical duplicates, experiments determine measurement error variables crop yield (e.g. Kosmowski et al. 2021). However, cases available, can estimated using different options. One option estimation use variogram location data samples available. case, nugget variance unexplained short distance variations can taken estimate measurement error. possible, profiling procedure can done. done fitting proposed model using varied number sigh values keeping rest model parameters constant. log-likelihood values model sigh determined value maximizes likelihood can selected log-likelihood profile. can implemented using ble_profile() function. information function run possible sigh values can set 0.5, 0.7 0.8 can check likelihood profile. likelihood profile, sigh maximizes likelihood around 0.65. can use value sigh. Now arguments required cbvn() function set, boundary line can fitted  boundary line fitted parameters together corresponding standard error values obtained. However, one question needs addressed proceed, boundary line ideal data? fitting BL model data, cbvn() also fits bivariate normal model boundary calculates AIC value. output, AIC value BL model lower bivariate normal model. Therefore, BL model appropriate. parameters boundary line can now used predict boundary yield given value P. function predictBL() BLA package can used . information function, see need predict largest expected yield point given soil P. replace missing values mean value P. can proceed next variable pH using procedure.","code":"?cbvn data<-data.frame(x,y) #This is an input dataframe containing the variables plot(x,y)  startValues(\"lp\") mean(x)  #> [1] 3.125969 mean(y)  #> [1] 9.28862 sd(x)  #> [1] 0.5005755 sd(y)  #> [1] 1.728996 cor(x,y) #> [1] 0.0346758  #The parameters of the boundary line and the data can be combined in a #vector start in the order  #start<-c(intercept, slope, max response, mean(x), mean(y), sd(x), sd(y), cor(x,y)) ?ble_profile sigh=c(0.5,0.7,0.8) ble_profile(data,start,sigh,model = \"lp\") # may take a few minutes to run for large datasets start<-c(4,3,13.6,3,9,0.50,1.9,0.05)  model1<-cbvn(data,start=start,sigh=0.7,model = \"lp\", xlab=expression(\"P /log ppm\"), ylab=expression(\"Yield /t ha\"^{-1}), pch=16, col=\"grey\") model1 #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>          Estimate Standard error #> β₁     4.06696830    1.062543187 #> β₂     3.33394003    0.483101081 #> β₀    13.11509466    0.162435745 #> mux    3.12596804    0.006451141 #> muy    9.29877801    0.022677786 #> sdx    0.50053541    0.004550540 #> sdy    1.60137534    0.018125877 #> rcorr  0.03013859    0.014294338 #>  #> $AIC #>              #> mvn 32429.55 #> BL  32399.25 ?predictBL xp<-log(soil$P) # let xp be the P content in our dataset xp[which(is.na(xp)==T)]<-mean(xp,na.rm=T) P<-predictBL(model1,xp)"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"data-exploration-1","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil pH boundary line fitting","what":"Data exploration","title":"Use of censored bivariate normal model function for yield gap analysis","text":"1. Testing normality independent dependent variable  2. Removal outliers 3. Testing data presence boundary already done using P boundary existence confirmed","code":"x<-soil$pH y<-soil$yield  # Distribution of the x variable  summastat(x) #>          Mean Median Quartile.1 Quartile.3  Variance        SD   Skewness #> [1,] 7.566487   7.74       7.12        8.1 0.4339926 0.6587811 -0.7964527 #>      Octile skewness    Kurtosis No. outliers #> [1,]      -0.3594771 -0.07929512            0 # Create a dataframe of x and y which is an input into the bagplot() function  df<-data.frame(x,y)   # Input the dataframe into the bagplot() function.  bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = FALSE)  # Combine data points from \"bag\" and within the loop  dat<-rbind(bag$pxy.bag,bag$pxy.outer)  # Output is a matrix, we can pull out x and y variables for next stage   x<-dat[,1]  y<-dat[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"fitting-the-boundary-line-to-data-1","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil pH boundary line fitting","what":"Fitting the boundary line to data","title":"Use of censored bivariate normal model function for yield gap analysis","text":"exploratory tests, indicated data provides evidence boundary existence, outliers identified removed, variables x y normally distributed. therefore, proceed fit boundary line model data set using censored bivariate normal model. function cbvn() fits boundary line data. determine argument values function cbvn() . Firstly, create data-frame containing x y, called data. Secondly, cbvn() requires initial starting values, start, parameters boundary line (censor) bivariate normal distribution. case, shall fit linear+Plateau model (lp) hence parameters plateau value intercept slope linear component. scatter plot y x active plot window R, run function start.values(\"lp\"), click plot, point expect lowest largest response linear model boundary. Note starting values models can determined changing model name “lp” desired models (see ?startValues help file) Next, determine parameters bivariate normal distribution include means x y variables, standard deviation x y variables, correlation x y. standard deviation measurement error, sigh already determine 0.7. Now arguments required cbvn() function set, boundary line can fitted  boundary line fitted parameters together corresponding standard error values obtained. output, AIC value BL model lower bivariate normal model. Therefore, BL model appropriate. parameters boundary line can now used predict boundary yield given value pH using function predictBL(). need predict largest expected yield farm given soil pH. replace missing values mean value pH.","code":"data<-data.frame(x,y) #This is an input dataframe containing the variables plot(x,y)  startValues(\"lp\") mean(x)  #> [1] 7.569203 mean(y)  #> [1] 9.277917 sd(x)  #> [1] 0.656315 sd(y)  #> [1] 1.755941 cor(x,y) #> [1] 0.1169399  #The parameters of the boundary line and the data can be combined in a #vector start in the order  #start<-c(intercept, slope, max response, mean(x), mean(y), sd(x), sd(y), cor(x,y))  start<-c(-9,3, 13.5,7.5,9,0.68,2.3,0.12) model2<-cbvn(data,start=start,sigh=0.7,model = \"lp\", xlab=expression(\"pH\"), ylab=expression(\"Yield /t ha\"^{-1}), pch=16, col=\"grey\") model2 #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>         Estimate Standard error #> β₁    -3.9496784    0.625843951 #> β₂     2.5933540    0.107681571 #> β₀    13.2048773    0.173877733 #> mux    7.5692058    0.008439500 #> muy    9.2839579    0.022826649 #> sdx    0.6562763    0.005967654 #> sdy    1.6239692    0.018077098 #> rcorr  0.1233113    0.014184125 #>  #> $AIC #>              #> mvn 35962.04 #> BL  35946.16 xpH<-soil$pH # let xpH be the P content in our dataset xpH[which(is.na(xpH)==T)]<-mean(xpH,na.rm=T) pH<-predictBL(model2,xpH)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"determination-of-most-limiting-factor","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines","what":"Determination of most limiting factor","title":"Use of censored bivariate normal model function for yield gap analysis","text":"boundary line analysis used determine limiting factor many yield gap analysis studies. according von Liebig (1840) law minimum $$ y={\\rm min}(f_1(x_1),f_2(x_2),...,f_n(x_n)) $$ BLA package, function limfactor() can used determine limiting factor point. information function, see two soil properties dataset, limiting factor data point determined can check proportion cases soil properties limiting  two factors evaluated, yield gap cause unidentified. many factors affecting yield consider case. can also plot predicted yield limiting factor actual yield.  dashed blue line represents attainable yield particular setting. 1:1 describes situations actual yield equal predicted yield limiting factor. yield gap point equivalent vertical distance point 1:1 line. points 1:1 line considered zero yield gap position line due measurement error.","code":"?limfactor Limiting_factor<-limfactor(P,pH) # This produces a list of length 2 containg a vector limiting factors at each pont and the maximum predicted response in the dataset.  Limiting_factors<-Limiting_factor[[1]] Lim_factors<-Limiting_factors$Lim_factor  barplot(prop.table(table(Lim_factors))*100,         ylab = \"Percentage (%)\",         xlab = \"Soil property\",         col = \"grey\",         ylim=c(0,90))  axis(side = 1, at = seq(0, 4, by = 1), labels = FALSE, lwd = 1, col.ticks = \"white\")   axis(side = 2, lwd = 1) plot(Limiting_factors$Rs, soil$yield,      xlab=\"Predicted yield (ton/ha)\",      ylab=\"Actual yield (ton/ha)\", pch=16, col=\"grey\")  abline(h=Limiting_factor[[2]], col=\"blue\", lty=5, lwd=1) lines(c(min(Limiting_factors$Rs),max(Limiting_factors$Rs)),  c(min(Limiting_factors$Rs),max(Limiting_factors$Rs)),  col=\"red\", lwd=2)  legend(\"bottomleft\",legend = c(\"Att yield\", \"1:1 line\"),        lty=c(5,1), col=c(\"blue\", \"red\"), lwd=c(1, 2), cex = 0.8)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"concluding-remarks","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines","what":"Concluding remarks","title":"Use of censored bivariate normal model function for yield gap analysis","text":"censored bivariate normal model used carry yield gap analysis. advantage using method boundary line fitting methods based statistical principles removes subjectivity associated selection bin sizes quantile consider boundary done binning methodology quantile regression. Furthermore, uncertainty around boundary line can also determined.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Use of censored bivariate normal model function for yield gap analysis","text":"Kosmowski, F., Chamberlin, J., Ayalew, H., Sida, T., Abay, K., & Craufurd, P. (2021). accurate yield estimates crop cuts? evidence small-holder maize farms ethiopia. Food Policy, 102 , 102122. https://doi.org/10.1016/j.foodpol.2021.102122 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets.European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. https://doi.org/10.1111/ejss.12318 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to boundary line analysis","text":"biological response, y, observed function single factor interest, x, uncontrolled environment .e. influence factors controlled, scatter observations observed due many sources variation. , example, x along factors contributes additive way variation y bivariate normal distribution may expected. However, complex effects possible. example, data set large enough contain wide range combinations conditions, x factors influence y accordance non-linear process characterized law minimum, law optimum (see Miti et al, 2024a), data points observed favourable conditions response y fall upper edges data cloud, maximum possible response y given value x. data points fall maximum response result limiting effect factors controlled . Webb (1972) suggested methodology can used describe relationship data points upper edges data sets likely relationship y x factors limiting. referred relationship boundary line. initial boundary line method Webb (1972) involved selection data points upper edges data cloud visually. boundary line model fitted selected data points describe relationship. Currently, many procedures fitting boundary line model dataset developed improve procedure statistical heuristic. include binning, BOLIDES, quantile regression, makowski quantile regression censored bivariate normal methods. Similarly, data exploratory methods developed provide evidence boundary existence dataset therefore, justifies use boundary line analysis data set (Milne et al. 2006). Colleagues Webb (1972), provided initial data boundary line analysis first applied, convinced data realized boundary, hence need testing data sets presence boundary. boundary exists data set, expected distribution points upper edges data cloud clustered randomly distributed response can go beyond observed boundary. Evidence distribution provides grounds proceeding boundary line analysis, Miti et al. (2024b) describe method package provides evaluate evidence. noted powerful testing alternative bivariate normal distribution can done fitting boundary line model cbvn() function. BLA package provides group functions carryout boundary line analysis data set R software. includes functions explore data, test evidence boundary data set, fit boundary line post-hoc analysis fitting boundary line.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"load-the-bla-package","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Load the BLA package","title":"Introduction to boundary line analysis","text":"BLA package installed, first step load R session using library() command. package aplpack also loaded use outlier detection function bagplot().","code":"library(BLA) library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"data","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Data","title":"Introduction to boundary line analysis","text":"BLA package contains data set called soil consisting soil pH, phosphorus wheat yield measurements farms UK. use data set illustrate functions BLA package. view first six lines data, run code :","code":"head(soil) #>      yield   pH  P #> 1  9.55787 6.66 10 #> 2  8.88999 6.92  9 #> 3  8.38731 6.83 10 #> 4  9.19583 6.34  9 #> 5  9.83057 6.74  9 #> 6 11.88140 6.54 12"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"exploratory-analysis","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Exploratory analysis","title":"Introduction to boundary line analysis","text":"exploratory analysis important initial step boundary line analysis. step serves show data distributed using various indices also check outliers data set. variable dataset skewed, especially independent variable, transformation may required can assumed normal distribution. boundary line analysis sensitive outlying values, must identified removed required. boundary line model may expect see non-normal variation response variable, case P, possibly increased density upper bound rest data points must appear plausibly drawn normal distribution. Exploratory analysis, particularly using plots, robust statistics octile skewness, provides basis assess plausibility underlying normal variable, perhaps censoring effect whether transformation needed, well form model can fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"normality-test","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Normality test","title":"Introduction to boundary line analysis","text":"assess distribution data, summastat() function provides different summary statistics graphical representation variable distribution. Let us set variables P wheat yield data set x y respectively applying summastat() functions   results, wheat yield (y) variables can considered normally distributed soil P (x) skewed. variable assumed normal distribution, indices skewness -1 1 Octile skewness -0.2 0.2. graphical representation distribution given well. soil P can log transformed check summary statistics plot  results, variable log soil P can assumed normal distribution.","code":"x<-soil$P y<-soil$yield summastat(x) #>        Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.966     22         16         32 207.0301 14.38854 1.840588 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429   5.7639           43  summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD  Skewness #> [1,] 9.254274 9.36436    8.20355    10.3944 3.454814 1.858713 -0.482355 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05802283 1.294174            7 summastat(log(x)) #>        Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.1264 3.091042   2.772589   3.465736 0.2557263 0.5056939 0.1295244 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05404542            0  x<-log(x) # transforms soil P to log"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"outlier-detection-and-removal","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Outlier detection and removal","title":"Introduction to boundary line analysis","text":"Outliers identified using bagplot method (Rousseeuw et al., 1999). bag plot multivariate equivalent box plot. utilise bagplop() function aplpack package produce bagplots.bagplot three main components. depth median represent center data cloud. equivalent median univariate box-plot Bag contains 50% data points. equivalent inter-quartile range univariate box-plot. Loop contains points outside bag outliers Outliers values outside loop variables x y now extracted results bag plot outliers removed","code":"vals_ur<-matrix(NA,length(x),2) #Create a matrix with x and y as required by the bag plot function vals_ur[,1]<-x  vals_ur[,2]<-y  bag<-bagplot(vals_ur, ylim=c(0,20), show.whiskers =F,create.plot = TRUE) # run the bagplot function legend(\"topright\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),         pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"),        cex=0.7)  vals<-rbind(bag$pxy.bag,bag$pxy.outer) # to remove outliers, select points in the bag and loop only x<-vals[,1] y<-vals[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"test-for-presence-of-boundary-in-dataset","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Test for presence of boundary in dataset","title":"Introduction to boundary line analysis","text":"function exp_boundary() can used evaluate evidence observations clustered near upper boundary data set, testing unbounded bivariate normal distribution null hypothesis. standard deviation (sd) Euclidean distance boundary points centre data set used measure density points upper edges data. smaller sd value, denser distribution. function uses convex hull select points upper boundary. default selecting first 10 consecutive convex hulls (shells=10). convex hulls splits two sections, right left sections, evidence boundary existence sections checked determining probability observed density points upper edges data bivariate normal null hypothesis. detail provided Miti et al. 2024b. reject null hypothesis p< 0.05.  p-values left right sections less 0.05. results indicate evidence upper boundary left right sections scatter. suggests justification fitting boundary data. graphical representation scatter plot boundary points also given well density histograms showing observed standard deviation given 10000 simulated standard deviations normal unbounded data .","code":"bound_test<-expl_boundary(x,y,shells = 10, simulations = 100,                            pch=16, col=\"grey\") # bound_test #>   Index Section    value     Mean p_value #> 1    sd    Left 1.045711 1.134728    0.03 #> 2    sd   Right 1.115379 1.200326    0.02"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"fitting-boundary-line-using-different-methods","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Fitting boundary line using different methods","title":"Introduction to boundary line analysis","text":"exploratory tests indicated data provides evidence upper boundary, outliers variables, x y, appear normally distributed. therefore, proceed fit boundary line model data set. several methods can used fit boundary line data set can classified heuristic (Bolides, Binning & quantile regression) statistical methods (censored bivariate normal). Miti et al. (2024a) give detail methods.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"bolides-algorithm","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Bolides algorithm","title":"Introduction to boundary line analysis","text":"method fit boundary line following boundary line determination technique proposed Schnug et al. (1995). fit boundary line using BOLIDES algorithm , bolides() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. “blm” linear model. xmax argument describes maximum value independent variable beyond relation x y longer theoretically feasible. arguments relate plot parameters plot() function. boundary fitting methods require initial starting values parameters proposed model. initial starting values optimized find parameters proposed model optim() function base R. get start starting values, bolides() function run argument model=\"explore\". allows us view selected boundary points using boundary line determination technique.  plot, can seen “trapezium” model appropriate data set. function startValues() can used determine initial start values. information startValues() function see ?startValues(). scatter plot y x active plot window R, run function startValues(\"trapezium\"), use mouse click plot five boundary points follow trapezium model order increasing x values. proposed start values produced. Note can done models well. arguments set, function can run  results show optimized parameters plot fitted model. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x. Say want predict maximum possible yield response soil P values 4.5, 7.4, 12.2, 20.1 54.5 mg/kg. Remember model fitted values log soil P therefore, values must first log transformed prediction made. can use function predictBL() purpose. information function, see ?predictBL() .","code":"?bolides bolides(x,y,model = \"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 ?startValues() startValues(\"trapezium\") # then select the five points at the edge of the dataset that make up the trapezium model in order of increasing x values. start<-c(4,3,14,104,-22) # start values is a vector of five consists of intercept, slope, plateau yield, intercept2 and slope2.   model1<-bolides(x,y, start = start,model = \"trapezium\",                 xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  ylab=expression(\"Yield/ t ha\"^-1), pch=16,                  col=\"grey\", bp_col=\"grey\") model1 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>      Estimate #> β₁   4.765511 #> β₂   3.456652 #> β₀  13.573119 #> β₃ 108.346207 #> β₄ -21.263562 #>  #> $RMS #> [1] 0.2174186 P<-c(4.5, 7.4, 12.2, 20.1, 54.5) P_log<-log(P)  Max_Response<-predictBL(model1, P_log) # the argument inputs are the boundary line model and the independent values (in this case P_log)  Max_Response #> [1]  9.964583 11.683930 13.412104 13.573119 13.573119"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"binning-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Binning method","title":"Introduction to boundary line analysis","text":"binning methodology involves splitting data several sections x-axis selecting boundary point section based set criteria (mostly 95$^{\\rm th}$ 99$^{\\rm th}$ percentile) (Shatar McBratney, 2004). fit boundary line using binning method, blbin() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. model=\"blm\" linear model. bins argument describes size bins vector length 3 containing minimum maximum independent variable values, size bins used data respectively. assume 99$^{\\rm th}$ percentile (tau=0.99) boundary. initial start start values can determined previously shown previous section  plot, can seen “trapezium” model appropriate data set. values start can now obtained function can now run.  results show optimized parameters plot. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blbin bins<-c(1.61,4.74,0.313)   blbin(x,y, bins,model = \"explore\", tau=0.99, pch=16, col=\"grey\") #>        x               y         #>  Min.   :1.792   Min.   :10.71   #>  1st Qu.:2.487   1st Qu.:11.98   #>  Median :3.162   Median :12.83   #>  Mean   :3.175   Mean   :12.55   #>  3rd Qu.:3.862   3rd Qu.:13.34   #>  Max.   :4.591   Max.   :13.37 startValues(\"trapezium\") start<-c(4.75, 3.23, 13.3, 24.87,-2.95 )  model2<-blbin(x,y, bins,start = start,model = \"trapezium\",                tau=0.99,                ylab=expression(\"t ha\"^-1),                xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                pch=16, col=\"grey\", bp_col=\"grey\") model2 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁+ β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  4.595981 #> β₂  3.409921 #> β₀ 13.342115 #> β₃ 21.883246 #> β₄ -2.262389 #>  #> $RMS #> [1] 0.01027899"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"quantile-regression-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Quantile regression method","title":"Introduction to boundary line analysis","text":"method fits boundary line using principle quantile regression (Cade Noon, 2003). fit boundary line using quantile regression method, blqr() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively start vector starting values . model argument used specify model boundary line e.g. “blm” linear model. argument tau describes quantile value described boundary. assume 99$^{\\rm th}$ quantile (tau=0.99) value boundary. arbitrary assumption, reason treat method heuristic. initial start start values can determined previously shown previous section. however, blqr() function explore option hence startValues() function used just plot x y directly according suggested model structure upper edge data. trapezium model used data. startvalues can now used blqr() function.  results show optimized parameters plot. quantile regression method produce measures uncertainty parameters, BLA report conditional arbitrary choice tau. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blqr plot(x,y)  startValues(\"trapezium\") start<-c(4,3,13.5,31,-4.5)  model3<-blqr(x,y, start = start, model = \"trapezium\",              xlab=expression(\"Phosphorus/ mg L\"^-1),               ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),              pch=16,tau=0.99, col=\"grey\") # may take a few seconds to ran model3 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  7.559968 #> β₂  2.142848 #> β₀ 13.363650 #> β₃ 30.667717 #> β₄ -4.192797 #>  #> $RSS #> [1] 252.7349"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"censored-bivariate-normal-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Censored bivariate normal model","title":"Introduction to boundary line analysis","text":"fit boundary line using Censored bivariate normal model method, see vignette(\"Censored_bivariate_normal_model\").","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"using-your-own-defined-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Using your own defined model","title":"Introduction to boundary line analysis","text":"illustrated methods fitting boundary line -built models. include linear, linear plateau, mitscherlich, schmidt, logistic, logistic model proposed Nelder (1961), inverse logistic, double logistic, quadratic trapezium models. However, cases one wants fit another model part built models. following steps illustrate fit custom model. Though illustrated using bolides() function, also applies blbin(), blqr() cbvn() functions. Assuming initial data exploratory step done, first step check structure boundary points using argument model=\"explore\" bolides() function.  Lets say want fit model y=β0−β1(x−β2)2 y=\\beta_0 - \\beta_1(x-\\beta_2)^2 model written form R function parameters always written alphabetical order , b c three parameter function, , b,c d four parameter function . next step suggest initial start start values. sensible values else function converge. arranges alphabetical order start=c(,b,c). Replace , b c numeric values choice. arguments bolides() function can now added. case, argument model set “”. arguments equation now set custom function (equation=custom_function)  parameters models shown results. prediction boundary response values value x can done previously shown using predictBL() function.","code":"bolides(x,y,model=\"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 custom_function<-function(x,a,b,c){   y<- a - b*(x-c)^2 } start<-c(13.5,3,3.3)    model4<-bolides(x,y, start = start,model = \"other\",                 equation=custom_function,                 xlab=expression(\"Phosphorus/mg L\"^-1),                  ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  pch=16, ylim=c(3.8,14.5), col=\"grey\",bp_col=\"grey\") model4 #> $Model #> [1] \"other\" #>  #> $Equation #> function (x, a, b, c)  #> { #>     y <- a - b * (x - c)^2 #> } #> <bytecode: 0x55ba67ba7ab8> #>  #> $Parameters #>    Estimate #> a 14.498417 #> b  2.175998 #> c  3.128628 #>  #> $RMS #> [1] 0.5166668"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"closing-remarks","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Closing remarks","title":"Introduction to boundary line analysis","text":"boundary line fitting methods illustrated use optimization function determine parameters proposed models. remove risk local optimum parameters, advised models ran several starting values results smallest error can selected. method produces error value output. residue mean square (RMS) blbin() bolides() blqr() residue sum squares (RSS). cbvn(), use likelihood value.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to boundary line analysis","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. https://doi.org/10.1890/1540-9295(2003)001[0412:AGITQR]2.0.CO;2 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794 Miti, C., Milne, ., Giller, K., & Lark, R. (2024). concepts quantification yield gap using boundary lines. review. Field Crops Research, 311. https://doi.org/10.1016/j.fcr.2024.109365. Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. https://doi.org/10.2307/2527498 Rousseeuw, P. J., Ruts, ., & Tukey, J. W. (1999). bagplot: bivariate boxplot. American Statistician, 53, 382–387. https://doi.org/10.1080/00031305.1999.10474494 Shatar, T. M., & McBratney, . B. (2004). Boundary-line analysis field-scale yield response soil properties. Journal Agricultural Science, 142 , 553-560. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chawezi Miti. Maintainer, author, copyright holder. Richard M Lark. Author. Alice E Milne. Author. Ken E Giller. Author. Victor O Sadras. Contributor. University Nottingham/Rothamsted Research. Funder.","code":""},{"path":"https://chawezimiti.github.io/BLA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Miti C, Lark R, Milne , Giller K (2024). BLA: Boundary Line Analysis. R package version 1.0.1.9000, https://chawezimiti.github.io/BLA/.","code":"@Manual{,   title = {BLA: Boundary Line Analysis},   author = {Chawezi Miti and Richard M Lark and Alice E Milne and Ken E Giller},   year = {2024},   note = {R package version 1.0.1.9000},   url = {https://chawezimiti.github.io/BLA/}, }"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Boundary Line Analysis","text":"BLA R package provides set tools fit boundary line models data set proposed Webb (1972). includes suite methods introduced since original manually-drawn boundary lines proposed. include methods based binning independent variable, BOLIDES algorithm Schug et al. (1995), quantile regression statistically robust censored bivariate normal model Milne et al. (2006). also provides data exploration methods check outliers provide initial evidence limiting boundary data sets initial steps boundary line analysis. includes functions determine suitable starting values boundary line parameters estimation numerical optimization procedures. Learn vignette(\"Introduction_to_BLA\").","code":""},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"how-can-i-install-the-package","dir":"","previous_headings":"","what":"How can I install the package?","title":"Boundary Line Analysis","text":"Install current version package CRAN.","code":"install.packages(\"BLA\")"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"what-can-i-use-the-bla-package-for","dir":"","previous_headings":"","what":"What can I use the BLA package for?","title":"Boundary Line Analysis","text":"classical situation BLA used model relationship response variable biological system (e.g. yield crop) variable potentially limiting response (e.g. soil P concentration). approach suitable large data sets surveys .e. cases multiple potential limiting factors occur controlled experimentally. example crop yield soil P concentration, one can determine largest expected yield given soil P concentration value, also called boundary pH value. various methods fit boundary model BLA package, encoded functions blbin(), bolides(), blqr() cbvn(). Additionally, BLA provides function initial data exploratory post-hoc analysis. example uses censored bivariate normal model, cbvn(), function fit boundary line:","code":""},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"load-the-package","dir":"","previous_headings":"What can I use the BLA package for?","what":"Load the package","title":"Boundary Line Analysis","text":"addition BLA, aplpack package loaded provides bagplot() function outlier detection.","code":"library(BLA) library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"exploratory-analysis","dir":"","previous_headings":"What can I use the BLA package for?","what":"Exploratory analysis","title":"Boundary Line Analysis","text":"three important exploratory steps required prior fitting boundary line models using cbvn(). include (1) checking distribution potential limiting response variables access fulfill assumption normality, (2) detection outliers, (3) determination evidence boundary existence dataset. Testing normality function summastat() can used purpose. Starting soil P concentration:  plots summary statistics, x variable can assumed normal distribution hence requires transformation fulfill assumption normality. can taking natural log x.  Normality can now assumed transformation. Next, check variable yield.  plots summary statistics, variable y can assumed normal distribution. Outlier identification removal done using bagplot() function aplpack package. input matrix hence assign x y variables matrix data_ur. Evidence boundary presence done using function expl_boundary()  p-values left right sections less 0.05, indicating evidence boundary existence. justifies fitting boundary line model dataset.","code":"x <- soil$P  summastat(x) #>         Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.9647     22         16         32 207.0066 14.38772 1.840844 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429 5.765138           43 summastat(log(x)) #>          Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.126361 3.091042   2.772589   3.465736 0.2556936 0.5056615 0.1297406 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05372586            0 y <- soil$yield  summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD   Skewness #> [1,] 9.254813 9.36468   8.203703   10.39477 3.456026 1.859039 -0.4819805 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05793291 1.292635            7 nobs<-length(soil$P)    data_ur<-matrix(NA,nobs,2)#  create a matrix: bagplot inputs data as a matrix   data_ur[,1]<-log(soil$P)    data_ur[,2]<-soil$yield    bag<-bagplot(data_ur,create.plot = F ) # bagplot identifies outliers    data<-rbind(bag$pxy.bag,bag$pxy.outer) # new excludes bivariate outliers x <- data[,1]   y <- data[,2]    expl_boundary(x,y,10,1000) #> Note: This function might take longer to execute when running a large number of simulations. #>     Index Section    value #> 1      sd    Left 1.045711 #> 2      sd   Right 1.115379 #> 3 Mean sd    Left 1.132397 #> 4 Mean sd   Right 1.201709 #> 5 p_value    Left 0.037000 #> 6 p_value   Right 0.041000"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"boundary-model-fitting","dir":"","previous_headings":"What can I use the BLA package for?","what":"Boundary model fitting","title":"Boundary Line Analysis","text":"Based structure data upper edge, trapezium model can fitted. Take note model choice biologically plausible can fitted. example can use cbvn() function fit boundary line. arguments include (1) dataframe,data, containing x y variables, (2) vector initial start values optimization includes parameters boundary model distribution (.e. mean(x), mean(y), sd(x), sd(y) cor(x,y)), (3) measurement error value, sigh, response variable. rest inputs related plot features function plot() base R. start values preferred model can determined using startValues() function. Set argument model desired model e.g. model=\"trapezium\", run function click plot y x, points make structure model upper edges data scatter. Using obtained values model, create vector start values.  output gives name model fitted “trapezium” case, equation form, parameters (first 5 rows Parameters) corresponding standard errors, AIC values boundary model, BL, corresponding multivariate normal model, mvn. Since AIC BL smaller mvn, boundary line model appropriate.","code":"plot(data)  startValues(\"trapezium\") data<-data.frame(x,y)  start<-c(4,3,13.6, 35,-5,3,9,0.50,1.9,0.05) # initial start values for optimization  model <- cbvn(data, start = start, model = \"trapezium\", sigh=0.7,                   xlab = expression(\"Soil P\"), ylab = expression(\"Yield/ t ha\"^-1),                   pch = 16, plot = TRUE, col = \"grey40\", cex = 0.6) model #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>          Estimate Standard error #> β₁     4.29795522    1.035391840 #> β₂     3.23397375    0.460850826 #> β₀    13.15187257    0.206656034 #> β₃    33.17267393    1.693458789 #> β₄    -5.22857503    0.393758941 #> mux    3.12597270    0.006451086 #> muy    9.30482617    0.022879293 #> sdx    0.50053107    0.004561474 #> sdy    1.60754420    0.018448808 #> rcorr  0.04150832    0.014806076 #>  #> $AIC #>              #> mvn 32429.55 #> BL  32391.07"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"predicting-boundary-yield-and-critical-soil-p-value","dir":"","previous_headings":"What can I use the BLA package for?","what":"Predicting boundary yield and critical soil P value","title":"Boundary Line Analysis","text":"boundary yield given soil P concentration data point can predicted using function predictBL() : critical P value point beyond yield increase expected. can calculate model parameters follows: boundary line post-hoc analysis procedures can conducted. information, See vignette(\"Censored_bivariate_normal_model\") vignette(\"Introduction_to_BLA\").","code":"P_values <- log(soil$P) P_values[is.na(x)] <- mean(x, na.rm = TRUE) # replace missing values with mean pH predicted_yield <- predictBL(model, P_values)   head(predicted_yield) # predicted yield for the first six farms #> [1] 11.74445 11.40372 11.74445 11.40372 11.40372 12.33408 intercept <- model$Parameters[1] slope <- model$Parameters[2] plateau <- model$Parameters[3]  critical_P <- (plateau - intercept) / slope  print(exp(critical_P))# results are in mg/l #> [1] 15.45268"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Boundary Line Analysis","text":"Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/AP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate perimeter and area of data scatter — AP","title":"Calculate perimeter and area of data scatter — AP","text":"function determines perimeter area around boundary points","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/AP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate perimeter and area of data scatter — AP","text":"","code":"AP(dat)"},{"path":"https://chawezimiti.github.io/BLA/reference/AP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate perimeter and area of data scatter — AP","text":"dat dataframe two columns.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/AP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate perimeter and area of data scatter — AP","text":"area perimeter covered bivariate data points, selected   boundary points","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/AP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate perimeter and area of data scatter — AP","text":"","code":"x<-data.frame(x=evapotranspiration$`ET(mm)`,y=evapotranspiration$`yield(t/ha)`) AP(x) #> $Perimeter #> [1] 2758.392 #>  #> $Area #> [1] 858.116 #>  #> $Polygon #>            x     y selection #> 418  108.619 0.800       max #> 538  114.000 1.070       max #> 533  116.000 1.640       max #> 154  120.000 0.960       max #> 155  123.750 0.990       max #> 430  127.445 1.500       max #> 421  129.827 1.400       max #> 422  132.095 1.000       max #> 535  133.000 1.450       max #> 383  135.703 1.000       max #> 451  137.150 1.900       max #> 523  139.000 0.960       max #> 382  139.074 1.100       max #> 98   139.474 0.530       max #> 534  141.000 2.090       max #> 169  142.857 1.000       max #> 536  144.000 1.660       max #> 387  144.678 0.800       max #> 522  146.000 1.250       max #> 532  150.000 0.440       max #> 537  151.000 1.590       max #> 360  152.000 0.740       max #> 230  153.000 1.390       max #> 605  153.828 2.103       max #> 521  155.000 1.330       max #> 23   158.156 2.230       max #> 168  158.333 0.950       max #> 232  159.000 1.520       max #> 134  160.000 0.320       max #> 431  162.437 1.400       max #> 231  164.000 1.680       max #> 20   164.773 1.450       max #> 99   166.071 0.930       max #> 149  166.667 0.500       max #> 77   167.000 1.554       max #> 417  171.065 1.200       max #> 484  173.000 2.600       max #> 419  174.062 1.000       max #> 171  174.286 1.220       max #> 531  175.000 0.870       max #> 86   175.472 0.930       max #> 440  176.100 0.800       max #> 170  177.500 1.420       max #> 21   177.698 2.470       max #> 514  178.000 2.010       max #> 388  179.462 1.100       max #> 79   180.000 1.887       max #> 433  180.170 1.300       max #> 87   181.046 2.770       max #> 452  181.190 2.100       max #> 648  182.858 2.342       max #> 76   183.000 2.832       max #> 403  184.232 1.100       max #> 439  184.810 1.300       max #> 496  185.000 0.600       max #> 143  185.714 1.300       max #> 450  185.720 1.900       max #> 602  185.796 2.333       max #> 530  186.000 0.940       max #> 96   186.567 1.250       max #> 142  186.667 1.120       max #> 487  188.000 2.840       max #> 399  188.440 1.900       max #> 336  189.000 1.660       max #> 447  190.390 1.600       max #> 162  190.833 2.290       max #> 163  191.000 1.910       max #> 157  191.667 1.150       max #> 435  192.310 1.800       max #> 424  192.752 1.600       max #> 410  194.031 1.600       max #> 488  195.000 3.210       max #> 436  195.660 2.300       max #> 30   195.683 2.720       max #> 444  195.700 2.600       max #> 513  196.000 2.070       max #> 233  197.000 0.170       max #> 147  197.500 0.790       max #> 242  199.000 0.180       max #> 658  199.591 3.348       max #> 486  200.000 3.070       max #> 414  201.173 1.000       max #> 574  201.344 2.028       max #> 29   201.408 2.860       max #> 278  202.000 0.890       max #> 136  202.500 0.810       max #> 611  202.923 1.794       max #> 512  203.000 2.450       max #> 541  204.000 3.300       max #> 591  204.174 3.201       max #> 603  204.835 3.169       max #> 148  205.000 0.410       max #> 606  205.466 1.728       max #> 494  206.000 1.900       max #> 607  206.334 1.851       max #> 74   207.000 2.823       max #> 397  207.195 1.900       max #> 22   207.937 2.620       max #> 428  209.027 2.100       max #> 401  209.551 2.000       max #> 380  210.000 1.050       max #> 511  211.000 1.730       max #> 449  211.390 2.200       max #> 659  211.544 3.522       max #> 590  212.128 3.580       max #> 576  212.946 2.532       max #> 10   213.000 1.750       max #> 442  213.970 2.600       max #> 539  214.000 1.950       max #> 655  214.563 3.119       max #> 572  214.733 2.035       max #> 71   215.000 3.233       max #> 94   215.152 0.710       max #> 75   216.000 3.062       max #> 643  216.162 1.441       max #> 434  216.250 3.300       max #> 589  216.316 2.881       max #> 146  216.667 0.650       max #> 650  217.229 1.375       max #> 404  218.055 2.000       max #> 646  218.428 1.304       max #> 579  218.624 2.025       max #> 578  218.788 2.810       max #> 385  218.847 2.900       max #> 97   218.947 2.080       max #> 448  219.900 1.600       max #> 78   220.000 2.750       max #> 313  220.218 1.170       max #> 28   220.339 2.600       max #> 689  220.688 3.772       max #> 652  221.026 3.072       max #> 654  221.239 2.946       max #> 651  221.884 2.107       max #> 420  222.062 1.800       max #> 292  222.862 1.433       max #> 540  223.000 3.840       max #> 588  223.029 2.537       max #> 437  223.380 3.400       max #> 642  223.715 2.169       max #> 656  223.777 4.694       max #> 580  223.794 1.813       max #> 649  223.954 1.836       max #> 432  225.087 0.000       max #> 690  225.965 4.564       max #> 331  226.000 1.500       max #> 575  226.040 2.307       max #> 660  226.430 2.585       max #> 446  226.760 1.500       max #> 443  226.990 2.900       max #> 529  227.000 2.020       max #> 95   227.027 0.840       max #> 577  228.264 2.224       max #> 423  228.401 0.800       max #> 653  228.449 2.947       max #> 600  228.925 2.202       max #> 345  229.000 1.340       max #> 166  229.167 2.750       max #> 586  229.303 2.364       max #> 627  229.636 2.963       max #> 509  230.000 1.960       max #> 93   230.435 1.060       max #> 384  231.986 1.300       max #> 682  232.768 4.013       max #> 675  232.798 3.707       max #> 502  233.000 1.550       max #> 657  233.059 3.092       max #> 585  233.474 3.139       max #> 616  233.607 2.647       max #> 526  234.000 2.560       max #> 408  234.004 1.600       max #> 151  235.000 0.470       max #> 393  235.533 1.400       max #> 594  235.606 2.543       max #> 167  235.833 2.830       max #> 510  236.000 2.320       max #> 587  236.408 3.656       max #> 583  236.518 3.012       max #> 504  237.000 2.680       max #> 508  238.000 2.310       max #> 409  239.055 1.900       max #> 438  239.620 3.800       max #> 411  239.684 1.300       max #> 492  240.000 2.130       max #> 644  240.173 2.181       max #> 619  240.594 2.778       max #> 416  240.735 1.900       max #> 622  240.809 3.895       max #> 269  241.000 1.090       max #> 527  242.000 2.250       max #> 406  242.430 3.200       max #> 197  243.000 2.760       max #> 453  243.310 2.400       max #> 679  243.530 2.929       max #> 396  243.874 1.200       max #> 528  244.000 2.340       max #> 372  245.000 1.550       max #> 663  245.713 3.502       max #> 599  245.947 2.001       max #> 525  246.000 2.810       max #> 402  246.302 2.100       max #> 464  247.000 1.060       max #> 548  247.045 3.779       max #> 582  247.713 2.403       max #> 645  247.799 1.699       max #> 601  249.135 2.050       max #> 390  249.330 1.400       max #> 427  249.968 4.700       max #> 506  250.000 2.680       max #> 598  250.231 2.056       max #> 407  250.274 2.100       max #> 604  250.559 2.391       max #> 301  250.952 3.289       max #> 610  251.011 1.597       max #> 322  251.229 1.829       max #> 687  251.300 5.614       max #> 405  251.548 2.200       max #> 542  251.704 2.858       max #> 584  252.197 3.468       max #> 386  252.373 0.800       max #> 85   253.571 2.130       max #> 429  253.921 1.900       max #> 324  254.000 2.065       max #> 31   254.783 2.930       max #> 546  254.939 3.129       max #> 73   255.000 3.537       max #> 547  255.216 2.709       max #> 381  255.546 0.600       max #> 49   256.000 2.350       max #> 323  256.532 2.044       max #> 673  256.611 3.486       max #> 621  256.744 2.832       max #> 628  256.956 3.134       max #> 612  257.721 2.540       max #> 683  257.969 4.970       max #> 235  258.000 1.260       max #> 688  258.123 3.421       max #> 641  258.874 2.122       max #> 551  258.962 3.307       max #> 474  260.000 2.160       max #> 678  260.076 3.670       max #> 389  260.487 1.700       max #> 620  260.686 3.135       max #> 595  260.873 1.880       max #> 638  261.681 2.327       max #> 490  262.000 2.400       max #> 608  262.445 1.914       max #> 195  263.000 2.400       max #> 640  263.021 2.690       max #> 680  263.293 2.631       max #> 305  263.398 2.219       max #> 544  263.581 2.763       max #> 441  263.650 1.500       max #> 573  263.937 2.229       max #> 681  264.057 2.953       max #> 549  264.751 3.030       max #> 596  264.824 2.474       max #> 613  265.293 2.045       max #> 173  266.000 3.990       max #> 391  266.355 2.000       max #> 571  266.594 3.581       max #> 593  266.631 2.777       max #> 623  266.741 3.999       max #> 9    267.000 2.493       max #> 332  268.000 1.340       max #> 196  269.000 2.820       max #> 545  269.122 2.667       max #> 550  269.607 3.110       max #> 691  269.746 4.755       max #> 413  270.302 2.100       max #> 445  270.420 1.300       max #> 92   270.833 0.650       max #> 34   271.000 1.130       max #> 592  271.708 2.358       max #> 614  271.716 2.614       max #> 635  273.153 1.636       max #> 553  273.266 4.717       max #> 617  273.375 2.779       max #> 294  274.311 3.086       max #> 618  274.652 2.461       max #> 192  275.000 3.090       max #> 172  275.714 3.860       max #> 477  276.000 2.370       max #> 543  276.871 3.973       max #> 479  277.000 3.360       max #> 609  277.125 2.450       max #> 41   278.000 2.510       max #> 661  278.293 2.771       max #> 684  278.486 4.609       max #> 415  279.160 1.400       max #> 639  280.221 3.069       max #> 581  280.543 2.015       max #> 303  280.924 2.596       max #> 33   281.000 2.580       max #> 552  281.270 4.458       max #> 668  281.378 2.891       max #> 297  281.432 2.367       max #> 561  281.540 4.470       max #> 193  282.000 3.440       max #> 293  282.015 2.603       max #> 564  282.554 4.694       max #> 632  282.924 3.963       max #> 359  283.000 1.320       max #> 676  283.209 2.598       max #> 637  283.742 1.795       max #> 45   284.000 2.270       max #> 677  284.446 3.721       max #> 287  284.555 1.824       max #> 478  285.000 2.240       max #> 554  285.943 4.852       max #> 295  286.415 2.804       max #> 320  286.738 3.416       max #> 672  287.051 1.776       max #> 319  287.341 3.188       max #> 597  287.354 2.220       max #> 296  287.660 2.914       max #> 298  287.782 4.008       max #> 425  287.973 3.400       max #> 153  288.182 3.170       max #> 566  288.525 4.203       max #> 631  288.744 3.174       max #> 476  289.000 2.500       max #> 615  289.048 2.980       max #> 647  289.700 3.131       max #> 309  289.814 3.436       max #> 140  290.000 1.160       max #> 626  290.345 2.555       max #> 563  290.752 3.794       max #> 630  290.987 3.315       max #> 194  291.000 3.380       max #> 398  291.135 1.900       max #> 519  292.000 3.510       max #> 152  292.500 2.340       max #> 565  292.992 6.065       max #> 517  293.000 3.390       max #> 556  293.307 4.791       max #> 671  293.922 3.010       max #> 315  294.386 3.517       max #> 568  294.759 4.291       max #> 187  295.000 2.350       max #> 666  295.141 3.264       max #> 189  296.000 3.290       max #> 636  296.106 2.111       max #> 280  297.000 1.270       max #> 314  297.434 2.145       max #> 674  297.950 3.272       max #> 256  298.000 2.460       max #> 299  299.212 2.818       max #> 318  299.287 2.044       max #> 203  300.000 2.570       max #> 562  300.810 4.551       max #> 665  300.940 3.077       max #> 670  300.953 2.663       max #> 288  300.987 2.134       max #> 100  301.000 1.830       max #> 685  301.220 5.806       max #> 141  301.667 1.810       max #> 629  302.059 2.991       max #> 392  302.245 2.000       max #> 321  302.249 3.665       max #> 633  302.636 2.397       max #> 498  303.000 3.200       max #> 686  303.518 5.644       max #> 338  304.000 3.240       max #> 570  304.164 4.360       max #> 569  304.555 5.234       max #> 555  304.888 5.372       max #> 481  305.000 3.580       max #> 624  305.258 3.634       max #> 634  305.991 1.919       max #> 362  306.000 3.190       max #> 559  306.502 4.519       max #> 244  307.000 1.190       max #> 662  307.093 3.242       max #> 60   309.000 2.700       max #> 145  310.000 4.960       max #> 316  310.184 1.782       max #> 104  311.000 1.759       max #> 557  311.579 5.070       max #> 395  311.892 1.600       max #> 190  312.000 3.380       max #> 667  312.140 2.589       max #> 412  312.950 2.100       max #> 483  313.000 3.680       max #> 371  314.000 2.080       max #> 274  315.000 2.510       max #> 317  315.347 1.970       max #> 133  316.000 3.224       max #> 132  317.000 3.660       max #> 184  320.000 3.320       max #> 567  320.944 4.746       max #> 265  322.000 1.930       max #> 497  323.000 3.270       max #> 426  323.353 2.100       max #> 333  325.000 4.120       max #> 368  326.000 2.550       max #> 165  326.875 5.230       max #> 337  327.000 2.750       max #> 290  327.894 2.833       max #> 473  328.000 4.690       max #> 91   328.261 3.020       max #> 201  329.000 2.090       max #> 90   329.412 2.800       max #> 300  329.946 2.872       max #> 131  330.000 1.618       max #> 289  330.713 2.692       max #> 164  330.769 4.300       max #> 178  331.000 3.380       max #> 394  331.809 2.200       max #> 126  333.000 1.966       max #> 669  333.161 2.959       max #> 291  333.844 2.397       max #> 175  334.000 3.390       max #> 179  335.000 4.030       max #> 664  335.316 3.321       max #> 81   336.000 2.822       max #> 469  338.000 3.670       max #> 176  339.000 3.700       max #> 181  340.000 3.450       max #> 174  341.000 3.640       max #> 182  342.000 3.390       max #> 204  343.000 1.460       max #> 144  343.333 2.060       max #> 558  343.679 4.513       max #> 177  344.000 3.440       max #> 625  344.806 4.338       max #> 467  346.000 1.940       max #> 180  347.000 3.440       max #> 334  348.000 3.390       max #> 302  348.488 3.087       max #> 264  350.000 1.260       max #> 459  351.000 3.010       max #> 470  352.000 4.760       max #> 312  352.044 3.289       max #> 161  352.222 3.170       max #> 109  354.000 2.433       max #> 234  355.000 1.420       max #> 307  355.854 3.638       max #> 350  356.000 1.700       max #> 158  356.250 2.850       max #> 82   357.000 3.249       max #> 108  358.000 2.225       max #> 112  359.000 1.853       max #> 12   361.000 1.603       max #> 88   361.053 3.430       max #> 458  362.000 3.890       max #> 243  363.000 1.750       max #> 16   364.474 2.770       max #> 111  365.000 3.317       max #> 114  366.000 2.656       max #> 223  367.000 1.990       max #> 228  368.000 0.380       max #> 200  369.000 2.160       max #> 400  369.658 2.300       max #> 367  370.000 4.440       max #> 465  371.000 2.650       max #> 560  371.925 5.589       max #> 277  372.000 1.540       max #> 275  373.000 1.600       max #> 89   374.194 3.480       max #> 463  375.000 3.500       max #> 304  375.412 3.833       max #> 5    376.000 3.100       max #> 222  377.000 2.110       max #> 466  379.000 2.420       max #> 186  380.000 5.600       max #> 214  381.000 2.070       max #> 327  381.984 2.609       max #> 268  382.000 1.620       max #> 18   384.536 3.730       max #> 123  385.000 1.589       max #> 471  386.000 3.870       max #> 352  387.000 2.740       max #> 462  388.000 3.380       max #> 25   389.744 4.560       max #> 1    390.000 3.270       max #> 472  391.000 4.100       max #> 17   391.176 3.990       max #> 325  391.537 2.374       max #> 121  392.000 1.373       max #> 270  393.000 2.250       max #> 364  395.000 2.600       max #> 185  396.000 5.400       max #> 32   398.000 2.030       max #> 326  398.684 2.502       max #> 13   399.000 2.542       max #> 369  400.000 3.760       max #> 24   400.952 4.210       max #> 15   401.000 3.976       max #> 261  402.000 2.180       max #> 36   404.000 2.050       max #> 26   404.040 4.000       max #> 257  406.000 1.090       max #> 215  407.000 2.270       max #> 35   408.000 4.360       max #> 19   409.524 4.300       max #> 308  409.956 2.656       max #> 273  410.000 1.130       max #> 461  411.000 3.630       max #> 240  412.000 1.130       max #> 455  414.000 5.030       max #> 47   415.000 2.970       max #> 306  416.052 2.986       max #> 27   416.667 4.250       max #> 354  418.000 1.540       max #> 40   422.000 2.260       max #> 311  422.656 3.194       max #> 279  424.000 1.840       max #> 456  429.000 5.010       max #> 310  429.768 3.571       max #> 39   430.000 3.860       max #> 7    431.000 3.600       max #> 43   432.000 3.420       max #> 460  435.000 3.720       max #> 116  437.000 1.623       max #> 117  438.000 1.676       max #> 255  439.000 1.020       max #> 347  441.000 3.780       max #> 266  442.000 1.950       max #> 378  444.000 3.550       max #> 2    445.000 5.390       max #> 224  450.000 0.800       max #> 346  456.000 2.310       max #> 236  458.000 1.170       max #> 119  461.000 1.988       max #> 249  462.000 1.840       max #> 343  465.000 4.970       max #> 342  470.000 2.990       max #> 3    471.000 3.040       max #> 349  489.000 2.330       max #> 245  490.000 1.510       max #> 348  503.000 1.430       max #> 272  517.000 1.980       max #> 258  520.000 1.980       max #> 210  521.000 3.430       max #> 212  522.000 3.800       max #> 213  524.000 3.610       max #> 276  525.000 2.160       max #> 267  531.000 2.200       max #> 209  536.000 3.260       max #> 285  540.000 2.180       max #> 263  543.000 1.960       max #> 211  549.000 3.480       max #> 254  552.000 2.200       max #> 281  581.000 1.870       max #> 2811 581.000 1.870       min #> 2541 552.000 2.200       min #> 2111 549.000 3.480       min #> 2631 543.000 1.960       min #> 2851 540.000 2.180       min #> 2091 536.000 3.260       min #> 2671 531.000 2.200       min #> 2761 525.000 2.160       min #> 2131 524.000 3.610       min #> 2121 522.000 3.800       min #> 2101 521.000 3.430       min #> 2581 520.000 1.980       min #> 2721 517.000 1.980       min #> 3481 503.000 1.430       min #> 2451 490.000 1.510       min #> 3491 489.000 2.330       min #> 37   471.000 3.040       min #> 3421 470.000 2.990       min #> 3431 465.000 4.970       min #> 2491 462.000 1.840       min #> 1191 461.000 1.988       min #> 2361 458.000 1.170       min #> 3461 456.000 2.310       min #> 2241 450.000 0.800       min #> 220  445.000 5.390       min #> 118  444.000 1.886       min #> 2661 442.000 1.950       min #> 3471 441.000 3.780       min #> 2551 439.000 1.020       min #> 1171 438.000 1.676       min #> 1161 437.000 1.623       min #> 373  435.000 2.520       min #> 4310 432.000 3.420       min #> 710  431.000 3.600       min #> 3910 430.000 3.860       min #> 3101 429.768 3.571       min #> 4561 429.000 5.010       min #> 56   424.000 1.540       min #> 3111 422.656 3.194       min #> 374  422.000 2.020       min #> 3541 418.000 1.540       min #> 2710 416.667 4.250       min #> 3061 416.052 2.986       min #> 351  415.000 1.380       min #> 4    414.000 3.100       min #> 2401 412.000 1.130       min #> 51   411.000 3.140       min #> 2731 410.000 1.130       min #> 3081 409.956 2.656       min #> 191  409.524 4.300       min #> 225  408.000 0.730       min #> 2151 407.000 2.270       min #> 2571 406.000 1.090       min #> 2610 404.040 4.000       min #> 365  404.000 2.050       min #> 44   402.000 1.880       min #> 55   401.000 2.800       min #> 2410 400.952 4.210       min #> 226  400.000 0.840       min #> 138  399.000 2.542       min #> 3261 398.684 2.502       min #> 252  398.000 1.610       min #> 375  396.000 1.280       min #> 358  395.000 2.340       min #> 218  393.000 1.480       min #> 1211 392.000 1.373       min #> 3251 391.537 2.374       min #> 1710 391.176 3.990       min #> 282  391.000 1.260       min #> 11   390.000 3.270       min #> 2510 389.744 4.560       min #> 340  388.000 2.860       min #> 120  387.000 1.155       min #> 4711 386.000 3.870       min #> 1231 385.000 1.589       min #> 1810 384.536 3.730       min #> 2681 382.000 1.620       min #> 3271 381.984 2.609       min #> 217  381.000 1.510       min #> 221  380.000 2.190       min #> 4661 379.000 2.420       min #> 344  377.000 1.560       min #> 284  376.000 2.060       min #> 3041 375.412 3.833       min #> 286  375.000 1.570       min #> 891  374.194 3.480       min #> 2751 373.000 1.600       min #> 2771 372.000 1.540       min #> 5601 371.925 5.589       min #> 4651 371.000 2.650       min #> 259  370.000 1.580       min #> 4001 369.658 2.300       min #> 2001 369.000 2.160       min #> 2281 368.000 0.380       min #> 2231 367.000 1.990       min #> 208  366.000 1.850       min #> 237  365.000 1.210       min #> 1610 364.474 2.770       min #> 246  363.000 1.240       min #> 115  362.000 2.791       min #> 881  361.053 3.430       min #> 227  361.000 0.280       min #> 1121 359.000 1.853       min #> 1081 358.000 2.225       min #> 377  357.000 2.050       min #> 1581 356.250 2.850       min #> 250  356.000 1.310       min #> 3071 355.854 3.638       min #> 2341 355.000 1.420       min #> 1091 354.000 2.433       min #> 1611 352.222 3.170       min #> 3121 352.044 3.289       min #> 339  352.000 2.190       min #> 219  351.000 1.910       min #> 2641 350.000 1.260       min #> 3021 348.488 3.087       min #> 356  348.000 2.760       min #> 1801 347.000 3.440       min #> 4671 346.000 1.940       min #> 6251 344.806 4.338       min #> 1771 344.000 3.440       min #> 5581 343.679 4.513       min #> 1441 343.333 2.060       min #> 2041 343.000 1.460       min #> 1821 342.000 3.390       min #> 468  341.000 2.330       min #> 207  340.000 1.850       min #> 183  339.000 3.440       min #> 4691 338.000 3.670       min #> 125  336.000 1.750       min #> 6641 335.316 3.321       min #> 128  335.000 1.167       min #> 370  334.000 2.860       min #> 2911 333.844 2.397       min #> 6691 333.161 2.959       min #> 124  333.000 1.488       min #> 3941 331.809 2.200       min #> 206  331.000 1.470       min #> 1641 330.769 4.300       min #> 2891 330.713 2.692       min #> 1311 330.000 1.618       min #> 3001 329.946 2.872       min #> 901  329.412 2.800       min #> 130  329.000 1.520       min #> 911  328.261 3.020       min #> 62   328.000 2.700       min #> 2901 327.894 2.833       min #> 129  327.000 1.376       min #> 1651 326.875 5.230       min #> 3681 326.000 2.550       min #> 3331 325.000 4.120       min #> 4261 323.353 2.100       min #> 4971 323.000 3.270       min #> 2651 322.000 1.930       min #> 5671 320.944 4.746       min #> 159  320.000 1.920       min #> 241  317.000 1.170       min #> 1331 316.000 3.224       min #> 3171 315.347 1.970       min #> 199  315.000 1.990       min #> 3711 314.000 2.080       min #> 363  313.000 2.330       min #> 4121 312.950 2.100       min #> 6671 312.140 2.589       min #> 106  312.000 1.992       min #> 3951 311.892 1.600       min #> 5571 311.579 5.070       min #> 1041 311.000 1.759       min #> 3161 310.184 1.782       min #> 107  310.000 1.944       min #> 238  309.000 1.980       min #> 6621 307.093 3.242       min #> 2441 307.000 1.190       min #> 5591 306.502 4.519       min #> 105  306.000 1.993       min #> 6341 305.991 1.919       min #> 6241 305.258 3.634       min #> 4811 305.000 3.580       min #> 5551 304.888 5.372       min #> 5691 304.555 5.234       min #> 5701 304.164 4.360       min #> 188  304.000 3.110       min #> 6861 303.518 5.644       min #> 4981 303.000 3.200       min #> 6331 302.636 2.397       min #> 3211 302.249 3.665       min #> 3921 302.245 2.000       min #> 6291 302.059 2.991       min #> 1411 301.667 1.810       min #> 6851 301.220 5.806       min #> 271  301.000 1.250       min #> 2881 300.987 2.134       min #> 6701 300.953 2.663       min #> 6651 300.940 3.077       min #> 5621 300.810 4.551       min #> 2031 300.000 2.570       min #> 3181 299.287 2.044       min #> 2991 299.212 2.818       min #> 2561 298.000 2.460       min #> 6741 297.950 3.272       min #> 3141 297.434 2.145       min #> 2801 297.000 1.270       min #> 6361 296.106 2.111       min #> 64   296.000 2.400       min #> 6661 295.141 3.264       min #> 379  295.000 1.590       min #> 5681 294.759 4.291       min #> 3151 294.386 3.517       min #> 6711 293.922 3.010       min #> 5561 293.307 4.791       min #> 247  293.000 1.850       min #> 5651 292.992 6.065       min #> 1521 292.500 2.340       min #> 50   292.000 0.740       min #> 3981 291.135 1.900       min #> 69   291.000 1.700       min #> 6301 290.987 3.315       min #> 5631 290.752 3.794       min #> 6261 290.345 2.555       min #> 1401 290.000 1.160       min #> 3091 289.814 3.436       min #> 6471 289.700 3.131       min #> 6151 289.048 2.980       min #> 54   289.000 0.990       min #> 6311 288.744 3.174       min #> 5661 288.525 4.203       min #> 1531 288.182 3.170       min #> 4251 287.973 3.400       min #> 2981 287.782 4.008       min #> 2961 287.660 2.914       min #> 5971 287.354 2.220       min #> 3191 287.341 3.188       min #> 6721 287.051 1.776       min #> 3201 286.738 3.416       min #> 2951 286.415 2.804       min #> 5541 285.943 4.852       min #> 59   285.000 1.500       min #> 2871 284.555 1.824       min #> 6771 284.446 3.721       min #> 70   284.000 1.700       min #> 6371 283.742 1.795       min #> 6761 283.209 2.598       min #> 3591 283.000 1.320       min #> 6321 282.924 3.963       min #> 5641 282.554 4.694       min #> 2931 282.015 2.603       min #> 239  282.000 0.000       min #> 5611 281.540 4.470       min #> 2971 281.432 2.367       min #> 6681 281.378 2.891       min #> 5521 281.270 4.458       min #> 46   281.000 0.800       min #> 3031 280.924 2.596       min #> 5811 280.543 2.015       min #> 6391 280.221 3.069       min #> 4151 279.160 1.400       min #> 6841 278.486 4.609       min #> 6611 278.293 2.771       min #> 335  278.000 0.960       min #> 6091 277.125 2.450       min #> 38   277.000 0.950       min #> 5431 276.871 3.973       min #> 42   276.000 0.810       min #> 1721 275.714 3.860       min #> 58   275.000 0.890       min #> 6181 274.652 2.461       min #> 2941 274.311 3.086       min #> 6171 273.375 2.779       min #> 5531 273.266 4.717       min #> 6351 273.153 1.636       min #> 6141 271.716 2.614       min #> 5921 271.708 2.358       min #> 341  271.000 1.130       min #> 921  270.833 0.650       min #> 4451 270.420 1.300       min #> 4131 270.302 2.100       min #> 6911 269.746 4.755       min #> 5501 269.607 3.110       min #> 5451 269.122 2.667       min #> 68   269.000 1.600       min #> 3321 268.000 1.340       min #> 910  267.000 2.493       min #> 6231 266.741 3.999       min #> 5931 266.631 2.777       min #> 5711 266.594 3.581       min #> 3911 266.355 2.000       min #> 57   266.000 2.430       min #> 6131 265.293 2.045       min #> 5961 264.824 2.474       min #> 5491 264.751 3.030       min #> 6811 264.057 2.953       min #> 5731 263.937 2.229       min #> 4411 263.650 1.500       min #> 5441 263.581 2.763       min #> 3051 263.398 2.219       min #> 6801 263.293 2.631       min #> 6401 263.021 2.690       min #> 1951 263.000 2.400       min #> 6081 262.445 1.914       min #> 4901 262.000 2.400       min #> 6381 261.681 2.327       min #> 5951 260.873 1.880       min #> 6201 260.686 3.135       min #> 3891 260.487 1.700       min #> 6781 260.076 3.670       min #> 501  260.000 1.950       min #> 5511 258.962 3.307       min #> 6411 258.874 2.122       min #> 6881 258.123 3.421       min #> 2351 258.000 1.260       min #> 6831 257.969 4.970       min #> 6121 257.721 2.540       min #> 6281 256.956 3.134       min #> 6211 256.744 2.832       min #> 6731 256.611 3.486       min #> 3231 256.532 2.044       min #> 84   256.000 1.638       min #> 3811 255.546 0.600       min #> 5471 255.216 2.709       min #> 493  255.000 2.270       min #> 5461 254.939 3.129       min #> 3110 254.783 2.930       min #> 3241 254.000 2.065       min #> 4291 253.921 1.900       min #> 851  253.571 2.130       min #> 3861 252.373 0.800       min #> 5841 252.197 3.468       min #> 5421 251.704 2.858       min #> 4051 251.548 2.200       min #> 6871 251.300 5.614       min #> 3221 251.229 1.829       min #> 6101 251.011 1.597       min #> 3011 250.952 3.289       min #> 6041 250.559 2.391       min #> 4071 250.274 2.100       min #> 5981 250.231 2.056       min #> 5061 250.000 2.680       min #> 4271 249.968 4.700       min #> 3901 249.330 1.400       min #> 6011 249.135 2.050       min #> 6451 247.799 1.699       min #> 5821 247.713 2.403       min #> 5481 247.045 3.779       min #> 355  247.000 0.830       min #> 4021 246.302 2.100       min #> 253  246.000 1.290       min #> 5991 245.947 2.001       min #> 6631 245.713 3.502       min #> 3721 245.000 1.550       min #> 329  244.000 1.420       min #> 3961 243.874 1.200       min #> 6791 243.530 2.929       min #> 4531 243.310 2.400       min #> 507  243.000 2.570       min #> 4061 242.430 3.200       min #> 248  242.000 0.480       min #> 2691 241.000 1.090       min #> 6221 240.809 3.895       min #> 4161 240.735 1.900       min #> 6191 240.594 2.778       min #> 6441 240.173 2.181       min #> 4921 240.000 2.130       min #> 4111 239.684 1.300       min #> 4381 239.620 3.800       min #> 4091 239.055 1.900       min #> 5081 238.000 2.310       min #> 5041 237.000 2.680       min #> 5831 236.518 3.012       min #> 5871 236.408 3.656       min #> 5101 236.000 2.320       min #> 1671 235.833 2.830       min #> 5941 235.606 2.543       min #> 3931 235.533 1.400       min #> 1511 235.000 0.470       min #> 4081 234.004 1.600       min #> 251  234.000 1.010       min #> 6161 233.607 2.647       min #> 5851 233.474 3.139       min #> 6571 233.059 3.092       min #> 5021 233.000 1.550       min #> 6751 232.798 3.707       min #> 6821 232.768 4.013       min #> 3841 231.986 1.300       min #> 931  230.435 1.060       min #> 137  230.000 0.690       min #> 6271 229.636 2.963       min #> 5861 229.303 2.364       min #> 1661 229.167 2.750       min #> 3451 229.000 1.340       min #> 6001 228.925 2.202       min #> 6531 228.449 2.947       min #> 4231 228.401 0.800       min #> 5771 228.264 2.224       min #> 951  227.027 0.840       min #> 5291 227.000 2.020       min #> 4431 226.990 2.900       min #> 4461 226.760 1.500       min #> 6601 226.430 2.585       min #> 5751 226.040 2.307       min #> 260  226.000 1.080       min #> 6901 225.965 4.564       min #> 4321 225.087 0.000       min #> 6491 223.954 1.836       min #> 5801 223.794 1.813       min #> 6561 223.777 4.694       min #> 6421 223.715 2.169       min #> 4371 223.380 3.400       min #> 5881 223.029 2.537       min #> 5401 223.000 3.840       min #> 2921 222.862 1.433       min #> 4201 222.062 1.800       min #> 6511 221.884 2.107       min #> 6541 221.239 2.946       min #> 6521 221.026 3.072       min #> 6891 220.688 3.772       min #> 283  220.339 2.600       min #> 3131 220.218 1.170       min #> 361  220.000 0.790       min #> 4481 219.900 1.600       min #> 971  218.947 2.080       min #> 3851 218.847 2.900       min #> 5781 218.788 2.810       min #> 5791 218.624 2.025       min #> 6461 218.428 1.304       min #> 4041 218.055 2.000       min #> 6501 217.229 1.375       min #> 1461 216.667 0.650       min #> 5891 216.316 2.881       min #> 4341 216.250 3.300       min #> 6431 216.162 1.441       min #> 751  216.000 3.062       min #> 941  215.152 0.710       min #> 524  215.000 2.080       min #> 5721 214.733 2.035       min #> 6551 214.563 3.119       min #> 5391 214.000 1.950       min #> 4421 213.970 2.600       min #> 505  213.000 1.710       min #> 5761 212.946 2.532       min #> 5901 212.128 3.580       min #> 6591 211.544 3.522       min #> 4491 211.390 2.200       min #> 5111 211.000 1.730       min #> 150  210.000 0.630       min #> 4011 209.551 2.000       min #> 4281 209.027 2.100       min #> 2210 207.937 2.620       min #> 3971 207.195 1.900       min #> 741  207.000 2.823       min #> 6071 206.334 1.851       min #> 4941 206.000 1.900       min #> 6061 205.466 1.728       min #> 1481 205.000 0.410       min #> 6031 204.835 3.169       min #> 5911 204.174 3.201       min #> 5411 204.000 3.300       min #> 328  203.000 0.810       min #> 6111 202.923 1.794       min #> 1361 202.500 0.810       min #> 2781 202.000 0.890       min #> 2910 201.408 2.860       min #> 5741 201.344 2.028       min #> 4141 201.173 1.000       min #> 262  200.000 1.240       min #> 6581 199.591 3.348       min #> 2421 199.000 0.180       min #> 1471 197.500 0.790       min #> 2331 197.000 0.170       min #> 5131 196.000 2.070       min #> 4441 195.700 2.600       min #> 3010 195.683 2.720       min #> 4361 195.660 2.300       min #> 4881 195.000 3.210       min #> 4101 194.031 1.600       min #> 4241 192.752 1.600       min #> 4351 192.310 1.800       min #> 1571 191.667 1.150       min #> 72   191.000 1.646       min #> 1621 190.833 2.290       min #> 4471 190.390 1.600       min #> 80   189.000 1.114       min #> 3991 188.440 1.900       min #> 4871 188.000 2.840       min #> 1421 186.667 1.120       min #> 961  186.567 1.250       min #> 5301 186.000 0.940       min #> 6021 185.796 2.333       min #> 4501 185.720 1.900       min #> 1431 185.714 1.300       min #> 4961 185.000 0.600       min #> 4391 184.810 1.300       min #> 4031 184.232 1.100       min #> 761  183.000 2.832       min #> 6481 182.858 2.342       min #> 4521 181.190 2.100       min #> 871  181.046 2.770       min #> 4331 180.170 1.300       min #> 330  180.000 0.900       min #> 3881 179.462 1.100       min #> 5141 178.000 2.010       min #> 216  177.698 2.470       min #> 1701 177.500 1.420       min #> 4401 176.100 0.800       min #> 861  175.472 0.930       min #> 5311 175.000 0.870       min #> 1711 174.286 1.220       min #> 4191 174.062 1.000       min #> 4841 173.000 2.600       min #> 4171 171.065 1.200       min #> 771  167.000 1.554       min #> 1491 166.667 0.500       min #> 991  166.071 0.930       min #> 202  164.773 1.450       min #> 2311 164.000 1.680       min #> 4311 162.437 1.400       min #> 1341 160.000 0.320       min #> 229  159.000 1.490       min #> 1681 158.333 0.950       min #> 2310 158.156 2.230       min #> 135  155.000 0.310       min #> 6051 153.828 2.103       min #> 2301 153.000 1.390       min #> 3601 152.000 0.740       min #> 357  151.000 0.380       min #> 5321 150.000 0.440       min #> 5221 146.000 1.250       min #> 3871 144.678 0.800       min #> 5361 144.000 1.660       min #> 1691 142.857 1.000       min #> 5341 141.000 2.090       min #> 981  139.474 0.530       min #> 3821 139.074 1.100       min #> 5231 139.000 0.960       min #> 4511 137.150 1.900       min #> 3831 135.703 1.000       min #> 5351 133.000 1.450       min #> 4221 132.095 1.000       min #> 4211 129.827 1.400       min #> 4301 127.445 1.500       min #> 1551 123.750 0.990       min #> 1541 120.000 0.960       min #> 5331 116.000 1.640       min #> 5381 114.000 1.070       min #> 4181 108.619 0.800       min #>"},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BLA: Boundary Line Analysis — BLA-package","title":"BLA: Boundary Line Analysis — BLA-package","text":"Fits boundary line models datasets proposed Webb (1972) doi:10.1080/00221589.1972.11514472  makes statistical inferences parameters. Provides additional tools testing datasets evidence boundary presence selecting initial starting values model optimization prior fitting boundary line models. also includes tools conducting post-hoc analyses predicting boundary values identifying limiting factor (Miti, Milne, Giller, Lark (2024) doi:10.1016/j.fcr.2024.109365 ). ensures comprehensive analysis datasets exhibit upper boundary structures.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BLA: Boundary Line Analysis — BLA-package","text":"Lark, R. M., & Milne, . E. (2016). Boundary line analysis   effect water filled pore space nitrous oxide emission   cores arable soil. European Journal Soil Science, 67 ,   148-159. Milne, . E., Ferguson, R. B., & Lark, R. M. (2006). Estimating   boundary line model biological response maximum likelihood.   Annals Applied Biology, 149, 223–234. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line   determination technique (BOLIDES). P. C. Robert, R. H. Rust, &   W. E. Larson (Eds.), site specific management agricultural   systems (p. 899-908). Wiley Online Library. Webb, R. . (1972). Use boundary line analysis biological   data. Journal Horticultural Science, 47, 309-319.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BLA: Boundary Line Analysis — BLA-package","text":"Maintainer: Chawezi Miti chawezi.miti@nottingham.ac.uk (ORCID) [copyright holder] Authors: Richard M Lark (ORCID) Alice E Milne (ORCID) Ken E Giller (ORCID) contributors: Victor O Sadras [contributor] University Nottingham/Rothamsted Research [funder]","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary line determination technique — bolides","title":"Boundary line determination technique — bolides","text":"function selects upper bounding points scatter plot x y based boundary line determination technique proposed Schnug et al. (1995). model fitted resulting boundary points least squares method. done using optimization procedure hence requires starting values model parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary line determination technique — bolides","text":"","code":"bolides(x,y,model=\"explore\", equation=NULL, start, optim.method=\"Nelder-Mead\",         xmin=min(bound$x), xmax=max(bound$x), plot=TRUE,bp_col=\"red\", bp_pch=16,         bl_col=\"red\" ,lwd=1,line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boundary line determination technique — bolides","text":"x numeric vector values independent variable. y numeric vector values response variable. model Selects functional form boundary line. includes \"explore\" default, \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. \"explore\" used check position boundary points correct model can applied. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. start numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticND\" model proposed Nelder (1961), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). bp_col Selects color boundary points. bp_pch Point character pch plot() function. controls shape boundary points plot (bp_pch = 16 default). bl_col Colour boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boundary line determination technique — bolides","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, residue mean square boundary points. Additionally,   graphical representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boundary line determination technique — bolides","text":"inbuilt models available bolides() function. \"explore\" option argument model generates plot showing ocation boundary points selected binning procedure. helps identify model type suitable fit boundary line. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticND\")  (Nelder (1961))  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter  one, \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 - \\beta_1*\\beta_2^x$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function bolides() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (residue mean square) can taken representation global optimum. common errors encountered due poor start values function evaluated initial parameters initial value 'vmmin' finite","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boundary line determination technique — bolides","text":"Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. Phillips, B.F. & Campbell, N.. 1968. new method fitting von Bertelanffy growth curve using data whelk. Dicathais, Growth 32: 317–329. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (BOLIDES). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boundary line determination technique — bolides","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boundary line determination technique — bolides","text":"","code":"x<-log(SoilP$P) y<-SoilP$yield start<-c(4,3,13.6,35,-5)  bolides(x,y,start=start,model = \"trapezium\",         xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),         ylab=expression(\"Yield/ t ha\"^-1), pch=16,         col=\"grey\", bp_col=\"grey\")  #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>      Estimate #> β₁   4.853076 #> β₂   3.410976 #> β₀  13.796772 #> β₃  58.721169 #> β₄ -10.656856 #>  #> $RMS #> [1] 0.2334075 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/SoilP.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil Phosphorus data — SoilP","title":"Soil Phosphorus data — SoilP","text":"data set subset data set assembled AgSpace Agriculture Ltd soil survey conducted farms various management units across England.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/SoilP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil Phosphorus data — SoilP","text":"","code":"SoilP"},{"path":"https://chawezimiti.github.io/BLA/reference/SoilP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil Phosphorus data — SoilP","text":"data.frame 6020 rows 2 columns: yield Wheat yield (ton/ha) measured P Phosphorus (mg/l)","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/SoilP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil Phosphorus data — SoilP","text":"","code":"data(SoilP)"},{"path":"https://chawezimiti.github.io/BLA/reference/SoilpH.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil pH data — SoilpH","title":"Soil pH data — SoilpH","text":"data set subset data set assembled AgSpace Agriculture Ltd soil survey conducted farms various management units across England.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/SoilpH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil pH data — SoilpH","text":"","code":"SoilpH"},{"path":"https://chawezimiti.github.io/BLA/reference/SoilpH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil pH data — SoilpH","text":"data.frame 6047 rows 2 columns: yield Wheat yield (ton/ha) measured pH pH measurement","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/SoilpH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil pH data — SoilpH","text":"","code":"data(SoilpH)"},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":null,"dir":"Reference","previous_headings":"","what":"Binning method for determining the boundary line model — blbin","title":"Binning method for determining the boundary line model — blbin","text":"function fits boundary model upper bounds scatter plot x y based binning method. data first divided equal sized sections x-axis boundary point section selected based set criteria (e.g. 0.90, 0.95 0.99 percentile y among criteria). model fitted resulting boundary points least squares method. done using optimization procedure hence requires starting guess parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binning method for determining the boundary line model — blbin","text":"","code":"blbin(x,y,bins, model=\"explore\", equation=NULL, start, tau=0.95,       optim.method=\"Nelder-Mead\", xmin=min(bound$x), xmax=max(bound$x),plot=TRUE,       bp_col=\"red\", bp_pch=16, bl_col=\"red\", lwd=1,line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binning method for determining the boundary line model — blbin","text":"x numeric vector values independent variable. y numeric vector values response variable. bins numeric vector length 3 4 determines size sections. first second values give range data binned third fourth values give width bins step size respectively. three values provided, step size assumed equal bin width. model Selects functional form boundary line. includes \"explore\" default, \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. \"explore\" used check position boundary points bin correct model can applied. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. start numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticND\" model proposed Nelder (1961), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. tau percentile value (0-1) represents boundary point within bin (default tau = 0.95). optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). bp_col Selects color boundary points. bp_pch Point character pch plot() function. controls shape boundary points plot (bp_pch = 16 default). bl_col Colour boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binning method for determining the boundary line model — blbin","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, residue mean square boundary points. Additionally,   graphical representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binning method for determining the boundary line model — blbin","text":"inbuilt models available blbin() function. \"explore\" option argument model generates plot showing location boundary points selected binning procedure. helps identify model type suitable fit boundary line. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticND\")  (Nelder (2009))  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 - \\beta_1*\\beta_2^x$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function blbin() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (residue mean square) can taken representation global optimum. common errors encountered due poor start values function evaluated initial parameters initial value 'vmmin' finite","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binning method for determining the boundary line model — blbin","text":"Casanova, D., Goudriaan, J., Bouma, J., & Epema, G. (1999). Yield gap analysis relation soil properties direct-seeded flooded rice. Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. Phillips, B.F. & Campbell, N.. 1968. new method fitting von Bertelanffy growth curve using data whelk. Dicathais, Growth 32: 317–329. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agro-ecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binning method for determining the boundary line model — blbin","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binning method for determining the boundary line model — blbin","text":"","code":"x<-log(SoilP$P) y<-SoilP$yield start<-c(4,3,13.6, 35, -5) bins<-c(1.6,4.74,0.314)  blbin(x,y, bins=bins, start=start,model = \"trapezium\", tau=0.99,        xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),        ylab=expression(\"Yield/ t ha\"^-1), pch=16,        col=\"grey\", bp_col=\"grey\")  #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁+ β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  5.039876 #> β₂  3.217493 #> β₀ 13.240113 #> β₃ 26.566339 #> β₄ -3.307790 #>  #> $RMS #> [1] 0.02161631 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood profile for various measurement error values — ble_profile","title":"Likelihood profile for various measurement error values — ble_profile","text":"Estimates standard deviation measurement error (sign) response variable, input cbvn() function, measured value available (Lark & Milne, 2016). sigh fixed set values turn, remaining parameters estimated conditional sigh maximum likelihood. maximized likelihoods sequence values constitutes likelihood profile. value sigh profile maximized selected.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood profile for various measurement error values — ble_profile","text":"","code":"ble_profile(data, sigh, model=\"lp\", equation=NULL,  start, UpLo=\"U\",              optim.method=\"BFGS\", plot=TRUE)"},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood profile for various measurement error values — ble_profile","text":"data dataframe two numeric columns, independent (x) dependent (y) variables respectively. sigh vector suggested standard deviations measurement error values. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. start numeric vector initial starting values optimization   fitting boundary model. length arrangement depend   suggested model: \"blm\" model, vector length 7 arranged   intercept, slope, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. \"lp\" model, vector length 8 arranged   intercept, slope, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"mit\" model, vector length 8 arranged   intercept, shape parameter, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"logistic\", \"inv-logistic\" \"logisticND\"   models, vector length 8 arranged scaling parameter, shape parameter,   maximum plateau value, mean x, mean y,   standard deviation x, standard deviation y   correlation x y. \"double-logistic\" model, vector length 11   arranged scaling parameter, shape parameter, maximum response, maximum response,   scaling parameter two, shape parameter two, mean x, mean y,   standard deviation x, standard deviation y correlation   x y. \"trapezium\" model, vector length 10 arranged   intercept one, slope one, maximum response, intercept two, slope two,   mean x, mean y, standard deviation x,   standard deviation y correlation x y. \"qd\" model, vector length 8 arranged   constant, linear coefficient, quadratic coefficient,mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"schmidt\" model, vector length 8 arranged   scaling parameter, shape parameter (x-value maximum response ),   maximum response, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. UpLo Selects type boundary. \"U\" fits upper boundary \"L\" fits lower boundary. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". plot TRUE, plot part output. FALSE, plot part output (default TRUE).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood profile for various measurement error values — ble_profile","text":"list length 2 containing suggested standard deviations   measurement error values corresponding log-likelihood values.   additionally, likelihood profile plot (log-likelihood standard   deviation measurement error) produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood profile for various measurement error values — ble_profile","text":"inbuilt models available cbvn() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticND\")  (Nelder (1961))  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 - \\beta_1*\\beta_2^x$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . function ble_profile() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results largest likelihood can taken representation global optimum. common errors encountered due poor start values function evaluated initial parameters initial value 'vmmin' finite","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood profile for various measurement error values — ble_profile","text":"Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood profile for various measurement error values — ble_profile","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood profile for various measurement error values — ble_profile","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` data<-data.frame(x,y) start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287) sigh <- c(0.6,0.7,0.8,0.9)  ble_profile(data,start=start,model = \"blm\", sigh = sigh)  #> $`log-likelihood` #> [1] -5015.588 -5011.836 -5009.193 -5008.254 #>  #> $Merror #> [1] 0.6 0.7 0.8 0.9 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary line model determination using quantile regression — blqr","title":"Boundary line model determination using quantile regression — blqr","text":"function fits boundary model upper bounds scatter plot x y estimating conditional quantile (0-1) response variable, y, across values predictor variables, x. achieved using optimization procedure hence requires starting guess parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary line model determination using quantile regression — blqr","text":"","code":"blqr(x,y,model, equation=NULL,start,tau=0.95,optim.method=\"Nelder-Mead\",      xmin=min(bound$x),xmax=max(bound$x), plot=TRUE,line_col=\"red\",lwd=1,      line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boundary line model determination using quantile regression — blqr","text":"x numeric vector values independent variable. y numeric vector values response variable. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model.custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. start numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticND\" model proposed Nelder (1961), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. tau quantile value (0- 1) represents boundary (default tau = 0.95). optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). line_col Selects color boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boundary line model determination using quantile regression — blqr","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, weighted residue sum square. Additionally, graphical   representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boundary line model determination using quantile regression — blqr","text":"inbuilt models available blqr() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticND\")  (Nelder (1961))  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter  one, \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 - \\beta_1*\\beta_2^x$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function blbin() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (weighted residue sum square) can taken representation global  optimum. common errors encountered due poor start values function evaluated initial parameters initial value 'vmmin' finite","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boundary line model determination using quantile regression — blqr","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. Phillips, B.F. & Campbell, N.. 1968. new method fitting von Bertelanffy growth curve using data whelk. Dicathais, Growth 32: 317–329. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boundary line model determination using quantile regression — blqr","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boundary line model determination using quantile regression — blqr","text":"","code":"x<-log(SoilP$P) y<-SoilP$yield start<-c(4,3,13.6)  blqr(x,y, start=start,model = \"lp\", tau=0.99,       xlab=expression(\"ET mm ha\"^-1),       ylab=expression(\"Wheat yield/ ton ha\"^-1),       pch=16, col=\"grey\")  #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>     Estimate #> β₁  6.523497 #> β₂  2.605818 #> β₀ 13.345196 #>  #> $RSS #> [1] 253.8857 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting boundary line using censored bivariate normal model — cbvn","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"function fits response model upper limits  scatter plot x y determine efficient response y function x (given measurement error y) based censored distribution (Milne et al., 2016). location censor data cloud determined based maximum likelihood approach. done using optimization procedure hence requires starting guess parameters proposed model. compares results uncensored normal bivariate distribution access appropriateness censored model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"","code":"cbvn(data,model=\"lp\", equation=NULL, start, sigh, UpLo=\"U\", optim.method=\"BFGS\",       Hessian=FALSE, plot=TRUE, line_smooth=1000, lwd=2, l_col=\"red\",...)"},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"data dataframe two numeric columns, independent (x) dependent (y) variables respectively. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. start numeric vector initial starting values optimization   fitting boundary model. length arrangement depend   suggested model: \"blm\" model, vector length 7 arranged   intercept, slope, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. \"lp\" model, vector length 8 arranged   intercept, slope, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"mit\" model, vector length 8 arranged   intercept, shape parameter, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"logistic\", \"inv-logistic\" \"logisticND\"   models, vector length 8 arranged scaling parameter, shape parameter,   maximum plateau value, mean x, mean y,   standard deviation x, standard deviation y   correlation x y. \"double-logistic\" model, vector length 11   arranged scaling parameter, shape parameter, maximum response, maximum response,   scaling parameter two, shape parameter two, mean x, mean y,   standard deviation x, standard deviation y correlation   x y. \"trapezium\" model, vector length 10 arranged   intercept one, slope one, maximum response, intercept two, slope two,   mean x, mean y, standard deviation x,   standard deviation y correlation x y. \"qd\" model, vector length 8 arranged   constant, linear coefficient, quadratic coefficient,mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"schmidt\" model, vector length 8 arranged   scaling parameter, shape parameter (x-value maximum response ),   maximum response, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. sigh Standard deviation measurement error. UpLo Selects type boundary. \"U\" fits upper boundary \"L\" fits lower boundary. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". Hessian True, hessian matrix part output (default FALSE`). plot TRUE, plot part output. FALSE, plot part output (default TRUE). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. lwd Determines thickness boundary line plot (default 1). l_col Selects color boundary line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"list length 5 consisting fitted model, equation form,   parameters boundary line, AIC (boundary line model null model)   hessian matrix.  Additionally, graphical representation boundary   line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"inbuilt models available cbvn() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticND\")  (Nelder (1961))  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 - \\beta_1*\\beta_2^x$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . function cbvn() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest likelihood (AIC) can taken representation global optimum. common errors encountered due poor start values function evaluated initial parameters initial value 'vmmin' finite","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"Nelder, J.. 1961. fitting generalization logistic curve. Biometrics 17: 89–110. Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. Milne, . E., Ferguson, R. B., & Lark, R. M. (2006). Estimating boundary line model biological response maximum likelihood.Annals Applied Biology, 149, 223–234. Phillips, B.F. & Campbell, N.. 1968. new method fitting von Bertelanffy growth curve using data whelk. Dicathais, Growth 32: 317–329. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"Chawezi Miti chawezi.miti@nottingham.ac.uk Richard Murray Lark murray.lark@nottingham.ac.uk","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` data<-data.frame(x,y) start<-c(0.5,0.02,289.6,2.4,83.7,1.07,0.287)  cbvn(data, start=start, model = \"blm\", sigh=0.51,         xlab=expression(\"ET/ mm ha\"^-1),         ylab=expression(\"Yield/ ton ha\"^-1),         pch=16, col=\"grey\", line_smooth = 100)  #> $Model #> [1] \"blm\" #>  #> $Equation #> [1] y = β₁ + β₂x #>  #> $Parameters #>           Estimate Standard error #> β₁     -2.49443314    0.327798345 #> β₂      0.02650941    0.001883713 #> mux   289.62771965    3.183447542 #> muy     2.48256627    0.045217145 #> sdx    83.68289740    2.252784160 #> sdy     0.95202526    0.034996376 #> rcorr   0.20972313    0.052543229 #>  #> $AIC #>              #> mvn 10092.78 #> BL  10053.09 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":null,"dir":"Reference","previous_headings":"","what":"Evapotranspiration data — evapotranspiration","title":"Evapotranspiration data — evapotranspiration","text":"dataset compiled Sadras & Angus (2006) comprises measures wheat yield estimated evapotranspiration (ET) sites China, Mediterranean regions Europe, North America, Australia. details dataset refer Sadras & Angus (2006).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evapotranspiration data — evapotranspiration","text":"","code":"evapotranspiration"},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evapotranspiration data — evapotranspiration","text":"data.frame 691 rows 3 columns: Region Location measurement ET (mm) Evapotranspiration measurement(mm) measured Yield (t/ha) Wheat yield (ton/ha) measured","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Evapotranspiration data — evapotranspiration","text":"Sadras, V. O., & Angus, J. F. (2006). Benchmarking water-use efficiency rainfed wheat dry environments. Australian Journal Agricultural Research, 57 , 847-856.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evapotranspiration data — evapotranspiration","text":"data set used illustration purposes package used form publication without permission owners.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evapotranspiration data — evapotranspiration","text":"","code":"data(evapotranspiration)"},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing evidence of boundary existence in dataset — expl_boundary","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"function determines probability bounding effects scatter plot x y based clustering points upper edge scatter plot (Miti et al.2024). tests hypothesis larger clustering upper bounds scatter plot null bivariate normal distribution bounding effect (random scatter upper edges). returns probability (p-value) observed clustering given realization unbounded bivariate normal distribution.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"","code":"expl_boundary(   x,   y,   shells = 10,   simulations = 1000,   method = \"sd-enclidean\",   plot = TRUE,   ... )"},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"x numeric vector values independent variable. y numeric vector values response variable. shells numeric value indicating number boundary peels (default 10). simulations number simulations null bivariate normally distributed data sets used test hypothesis (default 1000). method describes measure boundary points compaction. methods include \"sd-enclidean\" euclidean distance standard deviation boundary point center data, \"Area\" perimeter around boundary points \"Perimeter\" area covering boundary points. plot TRUE, plot part output. FALSE, plot part output (default TRUE). ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"dataframe containing measures peel compaction left right   sections data corresponding probability values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"recommended outlying observations, identified bagplot() function aplpack package removed data. also implemented simulation step expl_boundary() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"Eddy, W. F. (1982). Convex hull peeling, COMPSTAT 1982-Part : Proceedings Computational Statistics, 42-47. Physica-Verlag, Vienna. Miti. c., Milne. . E., Giller. K. E. Lark. R. M (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture 219 (2024) 108794.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` expl_boundary(x,y,10,100) # recommendation is to set simulations to greater than 1000  #>   Index Section    value     Mean p_value #> 1    sd    Left 52.26857 62.38809    0.02 #> 2    sd   Right 83.15138 55.67064    1.00"},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":null,"dir":"Reference","previous_headings":"","what":"kurtosis — kurt","title":"kurtosis — kurt","text":"function calculate estimate coefficient kurtosis set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kurtosis — kurt","text":"","code":"kurt(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kurtosis — kurt","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kurtosis — kurt","text":"reduced coefficient kurtosis.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"kurtosis — kurt","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kurtosis — kurt","text":"","code":"x<-evapotranspiration$`ET(mm)` kurt(x) #> [1] 0.2089355"},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Determination of the most limiting factor to biological response — limfactor","title":"Determination of the most limiting factor to biological response — limfactor","text":"function determines limiting factor based von Liebig law minimum given results predicted boundary line values different factors interest. Boundary lines various factors fitted factor predicts minimum response particular point considered limiting factor (Casanova et al. 1995).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determination of the most limiting factor to biological response — limfactor","text":"","code":"limfactor(...)"},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determination of the most limiting factor to biological response — limfactor","text":"... vectors predicted values boundary line models factor evaluated.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determination of the most limiting factor to biological response — limfactor","text":"dataframe consisting limiting factor minimum   predicted response","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determination of the most limiting factor to biological response — limfactor","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determination of the most limiting factor to biological response — limfactor","text":"","code":"N<-rnorm(10,50,5)#assuming these are predicted responses using the fitted BL for N,P,K K<-rnorm(10,50,4) P<-rnorm(10,50,6)  limfactor(N,K,P) #> [[1]] #>          Rs Lim_factor #> 1  44.03066          N #> 2  40.35505          P #> 3  47.54424          N #> 4  43.17123          P #> 5  52.32804          N #> 6  40.58889          P #> 7  51.31115          K #> 8  44.55312          N #> 9  38.41584          P #> 10 49.88670          N #>  #> [[2]] #> [1] 65.69477 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NA values — na.drop","title":"Remove NA values — na.drop","text":"Removes missing values dataset.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NA values — na.drop","text":"","code":"na.drop(xin)"},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NA values — na.drop","text":"xin numeric vector.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NA values — na.drop","text":"vector without missing values","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove NA values — na.drop","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NA values — na.drop","text":"","code":"x<-evapotranspiration$`ET(mm)` na.drop(x) #>   [1] 390.000 445.000 471.000 414.000 376.000 414.000 431.000 401.000 267.000 #>  [10] 213.000 220.000 361.000 399.000 401.000 401.000 364.474 391.176 384.536 #>  [19] 409.524 164.773 177.698 207.937 158.156 400.952 389.744 404.040 416.667 #>  [28] 220.339 201.408 195.683 254.783 398.000 281.000 271.000 408.000 404.000 #>  [37] 256.000 277.000 430.000 422.000 278.000 276.000 432.000 402.000 284.000 #>  [46] 281.000 415.000 396.000 256.000 292.000 411.000 424.000 291.000 289.000 #>  [55] 401.000 424.000 266.000 275.000 285.000 309.000 309.000 328.000 278.000 #>  [64] 296.000 291.000 292.000 246.000 269.000 291.000 284.000 215.000 191.000 #>  [73] 255.000 207.000 216.000 183.000 167.000 220.000 180.000 189.000 336.000 #>  [82] 357.000 246.000 256.000 253.571 175.472 181.046 361.053 374.194 329.412 #>  [91] 328.261 270.833 230.435 215.152 227.027 186.567 218.947 139.474 166.071 #> [100] 301.000 306.000 309.000 309.000 311.000 306.000 312.000 310.000 358.000 #> [109] 354.000 352.000 365.000 359.000 357.000 366.000 362.000 437.000 438.000 #> [118] 444.000 461.000 387.000 392.000 391.000 385.000 333.000 336.000 333.000 #> [127] 331.000 335.000 327.000 329.000 330.000 317.000 316.000 160.000 155.000 #> [136] 202.500 230.000 370.000 335.000 290.000 301.667 186.667 185.714 343.333 #> [145] 310.000 216.667 197.500 205.000 166.667 210.000 235.000 292.500 288.182 #> [154] 120.000 123.750 186.667 191.667 356.250 320.000 331.000 352.222 190.833 #> [163] 191.000 330.769 326.875 229.167 235.833 158.333 142.857 177.500 174.286 #> [172] 275.714 266.000 341.000 334.000 339.000 344.000 331.000 335.000 347.000 #> [181] 340.000 342.000 339.000 320.000 396.000 380.000 295.000 304.000 296.000 #> [190] 312.000 269.000 275.000 282.000 291.000 263.000 269.000 243.000 266.000 #> [199] 315.000 369.000 329.000 310.000 300.000 343.000 289.000 331.000 340.000 #> [208] 366.000 536.000 521.000 549.000 522.000 524.000 381.000 407.000 375.000 #> [217] 381.000 393.000 351.000 376.000 380.000 377.000 367.000 450.000 408.000 #> [226] 400.000 361.000 368.000 159.000 153.000 164.000 159.000 197.000 355.000 #> [235] 258.000 458.000 365.000 309.000 282.000 412.000 317.000 199.000 363.000 #> [244] 307.000 490.000 363.000 293.000 242.000 462.000 356.000 234.000 398.000 #> [253] 246.000 552.000 439.000 298.000 406.000 520.000 370.000 226.000 402.000 #> [262] 200.000 543.000 350.000 322.000 442.000 531.000 382.000 241.000 393.000 #> [271] 301.000 517.000 410.000 315.000 373.000 525.000 372.000 202.000 424.000 #> [280] 297.000 581.000 391.000 317.000 376.000 540.000 375.000 284.555 300.987 #> [289] 330.713 327.894 333.844 222.862 282.015 274.311 286.415 287.660 281.432 #> [298] 287.782 299.212 329.946 250.952 348.488 280.924 375.412 263.398 416.052 #> [307] 355.854 409.956 289.814 429.768 422.656 352.044 220.218 297.434 294.386 #> [316] 310.184 315.347 299.287 287.341 286.738 302.249 251.229 256.532 254.000 #> [325] 391.537 398.684 381.984 203.000 244.000 180.000 226.000 268.000 325.000 #> [334] 348.000 278.000 189.000 327.000 304.000 352.000 388.000 375.000 470.000 #> [343] 465.000 377.000 229.000 456.000 441.000 503.000 489.000 356.000 415.000 #> [352] 387.000 402.000 418.000 247.000 348.000 151.000 395.000 283.000 152.000 #> [361] 220.000 306.000 313.000 395.000 220.000 289.000 370.000 326.000 400.000 #> [370] 334.000 314.000 245.000 435.000 422.000 396.000 340.000 357.000 444.000 #> [379] 295.000 210.000 255.546 139.074 135.703 231.986 218.847 252.373 144.678 #> [388] 179.462 260.487 249.330 266.355 302.245 235.533 331.809 311.892 243.874 #> [397] 207.195 291.135 188.440 369.658 209.551 246.302 184.232 218.055 251.548 #> [406] 242.430 250.274 234.004 239.055 194.031 239.684 312.950 270.302 201.173 #> [415] 279.160 240.735 171.065 108.619 174.062 222.062 129.827 132.095 228.401 #> [424] 192.752 287.973 323.353 249.968 209.027 253.921 127.445 162.437 225.087 #> [433] 180.170 216.250 192.310 195.660 223.380 239.620 184.810 176.100 263.650 #> [442] 213.970 226.990 195.700 270.420 226.760 190.390 219.900 211.390 185.720 #> [451] 137.150 181.190 243.310 334.000 414.000 429.000 408.000 362.000 351.000 #> [460] 435.000 411.000 388.000 375.000 247.000 371.000 379.000 346.000 341.000 #> [469] 338.000 352.000 386.000 391.000 328.000 260.000 277.000 289.000 276.000 #> [478] 285.000 277.000 317.000 305.000 293.000 313.000 173.000 215.000 200.000 #> [487] 188.000 195.000 213.000 262.000 242.000 240.000 255.000 206.000 203.000 #> [496] 185.000 323.000 303.000 296.000 256.000 260.000 233.000 242.000 237.000 #> [505] 213.000 250.000 243.000 238.000 230.000 236.000 211.000 203.000 196.000 #> [514] 178.000 281.000 310.000 293.000 269.000 292.000 255.000 155.000 146.000 #> [523] 139.000 215.000 246.000 234.000 242.000 244.000 227.000 186.000 175.000 #> [532] 150.000 116.000 141.000 133.000 144.000 151.000 114.000 214.000 223.000 #> [541] 204.000 251.704 276.871 263.581 269.122 254.939 255.216 247.045 264.751 #> [550] 269.607 258.962 281.270 273.266 285.943 304.888 293.307 311.579 343.679 #> [559] 306.502 371.925 281.540 300.810 290.752 282.554 292.992 288.525 320.944 #> [568] 294.759 304.555 304.164 266.594 214.733 263.937 201.344 226.040 212.946 #> [577] 228.264 218.788 218.624 223.794 280.543 247.713 236.518 252.197 233.474 #> [586] 229.303 236.408 223.029 216.316 212.128 204.174 271.708 266.631 235.606 #> [595] 260.873 264.824 287.354 250.231 245.947 228.925 249.135 185.796 204.835 #> [604] 250.559 153.828 205.466 206.334 262.445 277.125 251.011 202.923 257.721 #> [613] 265.293 271.716 289.048 233.607 273.375 274.652 240.594 260.686 256.744 #> [622] 240.809 266.741 305.258 344.806 290.345 229.636 256.956 302.059 290.987 #> [631] 288.744 282.924 302.636 305.991 273.153 296.106 283.742 261.681 280.221 #> [640] 263.021 258.874 223.715 216.162 240.173 247.799 218.428 289.700 182.858 #> [649] 223.954 217.229 221.884 221.026 228.449 221.239 214.563 223.777 233.059 #> [658] 199.591 211.544 226.430 278.293 307.093 245.713 335.316 300.940 295.141 #> [667] 312.140 281.378 333.161 300.953 293.922 287.051 256.611 297.950 232.798 #> [676] 283.209 284.446 260.076 243.530 263.293 264.057 232.768 257.969 278.486 #> [685] 301.220 303.518 251.300 258.123 220.688 225.965 269.746"},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":null,"dir":"Reference","previous_headings":"","what":"Octile Skewness — ocskew","title":"Octile Skewness — ocskew","text":"function calculate estimate octile skewness set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Octile Skewness — ocskew","text":"","code":"ocskew(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Octile Skewness — ocskew","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Octile Skewness — ocskew","text":"octile skewness.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Octile Skewness — ocskew","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Octile Skewness — ocskew","text":"","code":"x<-evapotranspiration$`ET(mm)` ocskew(x) #>     87.5%  #> 0.1520965"},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict boundary response — predictBL","title":"Predict boundary response — predictBL","text":"function predicts efficient response level factor, x, given parameters fitted boundary line.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict boundary response — predictBL","text":"","code":"predictBL(object, x)"},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict boundary response — predictBL","text":"object output form list boundary line fitting using blqr(), blbin(), bolides() cbvn() functions. x numeric vector values factor response predicted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict boundary response — predictBL","text":"vector predicted value response.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict boundary response — predictBL","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict boundary response — predictBL","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` z<-bolides(x,y, start = c(0.5,0.02), model= \"blm\", xmax = 350)   Results<-predictBL(z,x)  head(Results) # prediction for first 6 lines #> [1]  8.392391  9.833827 10.515234  9.021382  8.025480  9.021382"},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print class cm — print.cm","title":"Print class cm — print.cm","text":"S3 print function Prints first 4 elements cm class objects.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print class cm — print.cm","text":"","code":"# S3 method for class 'cm' print(x, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print class cm — print.cm","text":"x Print object. ... parameters associated print() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print class cm — print.cm","text":"object containing first four items.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print class cm — print.cm","text":"","code":"numbers<- 1:10 class(numbers)<-\"cm\" numbers #> [1] 1 2 3 4"},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print class wm — print.wm","title":"Print class wm — print.wm","text":"S3 print function Prints first 4 elements wm class objects.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print class wm — print.wm","text":"","code":"# S3 method for class 'wm' print(x, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print class wm — print.wm","text":"x Print object. ... parameters associated print() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print class wm — print.wm","text":"object containing first four items.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print class wm — print.wm","text":"","code":"numbers<- 1:10 class(numbers)<-\"wm\" numbers #> [1] 1 2 3 4"},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":null,"dir":"Reference","previous_headings":"","what":"Hessian matrix — seHessian","title":"Hessian matrix — seHessian","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hessian matrix — seHessian","text":"","code":"seHessian(a, hessian = FALSE, silent = FALSE)"},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hessian matrix — seHessian","text":"hessian matrix. hessian `True`, hessian matrix used. silent Condition matrix.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hessian matrix — seHessian","text":"standard error hessian matrix","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hessian matrix — seHessian","text":"","code":"hessian<-matrix(c(37.45965, 83.0686,83.06863,188.92427),2,2)  seHessian(hessian) # calculates the standard error #> [1] 1.0341811 0.4605052"},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":null,"dir":"Reference","previous_headings":"","what":"Skewness — skew","title":"Skewness — skew","text":"Function calculate estimate coefficient skewness set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skewness — skew","text":"","code":"skew(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skewness — skew","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skewness — skew","text":"coefficient skewness.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Skewness — skew","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skewness — skew","text":"","code":"x<-evapotranspiration$`ET(mm)` skew(x) #> [1] 0.5380429"},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil survey data — soil","title":"Soil survey data — soil","text":"data set subset data set assembled AgSpace Agriculture Ltd soil survey conducted farms various management units across England. survey included measurements wheat yield well various soil parameters. particular dataset contains soil properties pH  phosphorus (P).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil survey data — soil","text":"","code":"soil"},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil survey data — soil","text":"data.frame 6110 rows 3 columns: yield Wheat yield (ton/ha) measured pH pH measurement P soil p (mg/kg)","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil survey data — soil","text":"data set used illustration purposes package used form publication without permission owners.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil survey data — soil","text":"","code":"data(soil)"},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Starting values for optimization functions — startValues","title":"Starting values for optimization functions — startValues","text":"functions helps determine initial values selected boundary line model using functions blbin(), blqr(), bolides(), cbvn() ble_profile() determine model parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starting values for optimization functions — startValues","text":"","code":"startValues(model = \"explore\", p = NULL, digits = 2, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Starting values for optimization functions — startValues","text":"model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticND\" logistic model proposed Nelder (1961), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model, \"trapezium\" trapezium model \"explore\" function use exploration. default \"explore\". p number selected points used obtain start values logistic mitcherlich schmidt models. NULL models. digits Number decimal points logistic type models (default 2). ... Additional graphical parameters. Applies logistic, mitcherlich schmidt models control text plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Starting values for optimization functions — startValues","text":"list containing parameters suggested model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Starting values for optimization functions — startValues","text":"function uses locator() function. model selected, points make boundary points selected using mouse click plots.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Starting values for optimization functions — startValues","text":"Fekedulegn, D., Mac Siurtain, M.P., & Colbert, J.J. 1999. Parameter estimation nonlinear growth models forestry. Silva Fennica 33(4): 327–336. Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Starting values for optimization functions — startValues","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Starting values for optimization functions — startValues","text":"","code":"startValues(model=\"explore\") #> y = f(P₁,P₂|x) #>  #> $Param1 #> P₁  #>  0  #>  #> $Param2 #> P₂  #>  0  #>"},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics — summastat","title":"Summary statistics — summastat","text":"function calculate summary statistics set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics — summastat","text":"","code":"summastat(x, sigf, varname, plot = TRUE)"},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics — summastat","text":"x vector numeric values. sigf number significant figures report (optional). varname name variable (optional), character quotes e.g. \"Clay content\". used variable called x plots. plot TRUE, plot part output. FALSE, plot part output (default TRUE).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics — summastat","text":"matrix containing mean value, median value,   first third quartiles, sample variance, sample standard deviation,   coefficient skewness, octile skewness, coefficient kurtosis   number probable outliers data set. histogram boxplot   QQ plot variable x plot=TRUE.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary statistics — summastat","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics — summastat","text":"","code":"x<-evapotranspiration$`ET(mm)` summastat(x,2)  #>      Mean Median Quartile.1 Quartile.3 Variance SD Skewness Octile skewness #> [1,]  290    280        230        340     7000 84     0.54            0.15 #>      Kurtosis No. outliers #> [1,]     0.21            0"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/news/index.html","id":"bla-101","dir":"Changelog","previous_headings":"","what":"BLA 1.0.1","title":"BLA 1.0.1","text":"CRAN release: 2024-05-28 first version newly released BLA package.","code":""}]
