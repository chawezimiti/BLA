[{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://chawezimiti.github.io/BLA/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Boundary Line Analysis","text":"biological response, y, observed function single factor interest, x, uncontrolled environment .e. influence factors controlled, scatter observations observed due many sources variation. , example, x along factors contributes additive way variation y bivariate normal distribution may expected. However, complex effects possible. example, data set large enough contain wide range combinations conditions, x factors influence y accordance non-linear process characterized law minimum, law optimum (see Miti et al, 2024a), data points observed favourable conditions response y fall upper edges data cloud, maximum possible response y given value x. data points fall maximum response result limiting effect factors controlled . Webb (1972) suggested methodology can used describe relationship data points upper edges data sets likely relationship y x factors limiting. referred relationship boundary line. initial boundary line method Webb (1972) involved selection data points upper edges data cloud visually. boundary line model fitted selected data points describe relationship. Currently, many procedures fitting boundary line model dataset developed improve procedure statistical heuristic. include binning, BOLIDES, quantile regression, makowski quantile regression censored bivariate normal methods. Similarly, data exploratory methods developed provide evidence boundary existence dataset therefore, justifies use boundary line analysis data set (Milne et al. 2006). Colleagues Webb (1972), provided initial data boundary line analysis first applied, convinced data realized boundary, hence need testing data sets presence boundary. boundary exists data set, expected distribution points upper edges data cloud clustered randomly distributed response can go beyond observed boundary. Evidence distribution provides grounds proceeding boundary line analysis, Miti et al. (2024b) describe method package provides evaluate evidence. noted powerful testing alternative bivariate normal distribution can done fitting boundary line model cbvn() function. BLA package provides group functions carryout boundary line analysis data set R software. includes functions explore data, test evidence boundary data set, fit boundary line post-hoc analysis fitting boundary line.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"load-the-bla-package","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Load the BLA package","title":"Boundary Line Analysis","text":"BLA package installed, first step load R session using library() command. package aplpack also loaded use outlier detection function bagplot().","code":"library(BLA) #> Warning: no DISPLAY variable so Tk is not available library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"data","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Data","title":"Boundary Line Analysis","text":"BLA package contains data set called soil consisting soil pH, phosphorus wheat yield measurements farms UK. use data set illustrate functions BLA package. view first six lines data, run code :","code":"head(soil) #>      yield   pH  P #> 1  9.55787 6.66 10 #> 2  8.88999 6.92  9 #> 3  8.38731 6.83 10 #> 4  9.19583 6.34  9 #> 5  9.83057 6.74  9 #> 6 11.88140 6.54 12"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"exploratory-analysis","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Exploratory analysis","title":"Boundary Line Analysis","text":"exploratory analysis important initial step boundary line analysis. step serves show data distributed using various indices also check outliers data set. variable dataset skewed, especially independent variable, transformation may required can assumed normal distribution. boundary line analysis sensitive outlying values, must identified removed required. boundary line model may expect see non-normal variation response variable, case P, possibly increased density upper bound rest data points must appear plausibly drawn normal distribution. Exploratory analysis, particularly using plots, robust statistics octile skewness, provides basis assess plausibility underlying normal variable, perhaps censoring effect whether transformation needed, well form model can fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"normality-test","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Normality test","title":"Boundary Line Analysis","text":"assess distribution data, summa() function provides different summary statistics. function summaplot() give graphical representation variable distribution. Let us set variables P wheat yield data set x y respectively applying summa() summaplot() functions results, wheat yield (y) variables can considered normally distributed soil P (x) skewed. variable assumed normal distribution, indices skewness -1 1 Octile skewness -0.2 0.2. graphical representation distribution can checked using soil P can log transformed check summary statistics plot results, variable log soil P can assumed normal distribution.","code":"x<-soil$P y<-soil$yield summastat(x) #>         Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.9647     22         16         32 207.0066 14.38772 1.840844 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429 5.765138           43 summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD   Skewness #> [1,] 9.254813 9.36468   8.203703   10.39477 3.456026 1.859039 -0.4819805 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05793291 1.292635            7 summastat(log(x)) #>          Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.126361 3.091042   2.772589   3.465736 0.2556936 0.5056615 0.1297406 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05372586            0 #summaplot(log(x))  x<-log(x) # transforms soil P to log"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"outlier-detection-and-removal","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Outlier detection and removal","title":"Boundary Line Analysis","text":"Outliers identified using bagplot method (Rousseeuw et al., 1999. bag plot multivariate equivalent box plot. utilise bagplo() function aplpack package produce bagplots.bagplot three main components. depth median represent center data cloud. equivalent median univariate box-plot Bag contains 50% data points. equivalent inter-quartile range univariate box-plot. Loop contains points outside bag outliers Outliers values outside loop variables x y now extracted results bag plot outliers removed","code":"vals_ur<-matrix(NA,length(x),2) #Create a matrix with x and y as required by the bag plot function vals_ur[,1]<-x  vals_ur[,2]<-y  bag<-bagplot(vals_ur, ylim=c(0,20), show.whiskers =F,create.plot = FALSE) # run the bagplot function # legend(\"topright\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),  #         pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"), #        cex=0.7)  vals<-rbind(bag$pxy.bag,bag$pxy.outer) # to remove outliers, select points in the bag and loop only x<-vals[,1] y<-vals[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"test-for-presence-of-boundary-in-dataset","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Test for presence of boundary in dataset","title":"Boundary Line Analysis","text":"function exp_boundary() can used evaluate evidence observations clustered near upper boundary data set, testing unbounded bivariate normal distribution null hypothesis. standard deviation (sd) Euclidean distance boundary points centre data set used measure density points upper edges data. smaller sd value, denser distribution. function uses convex hull select points upper boundary. default selecting first 10 consecutive convex hulls (shells=10). convex hulls splits two sections, right left sections, evidence boundary existence sections checked determining probability observed density points upper edges data bivariate normal null hypothesis. detail provided Miti et al. 2024b. reject null hypothesis p< 0.05. p-values left right sections less 0.05. results indicate evidence upper boundary left right sections scatter. suggests justification fitting boundary data. graphical representation scatter plot boundary points also given well density histograms showing observed standard deviation given 10000 simulated standard deviations normal unbounded data .","code":"bound_test<-expl_boundary(x,y,shells = 10, simulations = 100,                            pch=16, col=\"grey\") #  #> Note: This function may take a few minutes to run for large datasets.  bound_test #>     Index Section    value #> 1      sd    Left 1.045711 #> 2      sd   Right 1.115379 #> 3 Mean sd    Left 1.183579 #> 4 Mean sd   Right 1.268895 #> 5 p_value    Left 0.010000 #> 6 p_value   Right 0.010000"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"fitting-boundary-line-using-different-methods","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Fitting boundary line using different methods","title":"Boundary Line Analysis","text":"exploratory tests indicated data provides evidence upper boundary, outliers variables, x y, appear normally distributed. therefore, proceed fit boundary line model data set. several methods can used fit boundary line data set can classified heuristic (BOLIDES, Binning & quantile regression) statistical methods (censored bivariate normal). Miti et al. (2024a) give detail methods.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"bolides-algorithm","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"BOLIDES algorithm","title":"Boundary Line Analysis","text":"method fit boundary line following boundary line determination technique proposed Schnug et al. (1995). fit boundary line using BOLIDES algorithm , BOLIDES() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. “blm” linear model. xmax argument describes maximum value independent variable beyond relation x y longer theoretically feasible. arguments relate plot parameters plot() function. boundary fitting methods require initial starting values parameters proposed model. initial starting values optimized find parameters proposed model optim() function base R. get theta starting values, BOLIDES() function run argument model=\"explore\". allows us view selected boundary points using boundary line determination technique. plot, can seen “trapezium” model appropriate data set. function startValues() can used determine initial start theta values. information startValues() function see ?startValues(). scatter plot y x active plot window R, run function startValues(\"trapezium\"), use mouse click plot five boundary points follow trapezium model order increasing x values. proposed start values produced. Note can done models well. arguments set, function can run results show optimized parameters plot fitted model. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x. Say want predict maximum possible yield response soil P values 4.5, 7.4, 12.2, 20.1 54.5 mg/kg. Remember model fitted values log soil P therefore, values must first log transformed prediction made. can use function predictBL() purpose. information function, see ?predictBL() .","code":"?BOLIDES BOLIDES(x,y,model = \"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 ?startValues() startValues(\"trapezium\") # then select the five points at the edge of the dataset that make up the trapezium model in order of increasing x values. theta<-c(4,3,14,104,-22) # start values is a vector of five consists of intercept, slope, plateau yield, intercept2 and slope2.   model1<-BOLIDES(x,y, theta = theta,model = \"trapezium\",                 xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  ylab=expression(\"Yield/ t ha\"^-1), pch=16,                  col=\"grey\", bp_col=\"grey\")  model1 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>      Estimate #> β₁   4.765511 #> β₂   3.456652 #> β₀  13.573119 #> β₃ 108.346207 #> β₄ -21.263562 #>  #> $RMS #> [1] 0.2174186 P<-c(4.5, 7.4, 12.2, 20.1, 54.5) P_log<-log(P)  Max_Response<-predictBL(model1, P_log) # the argument inputs are the boundary line model and the independent values (in this case P_log)  Max_Response #> [1]  9.964583 11.683930 13.412104 13.573119 13.573119"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"binning-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Binning method","title":"Boundary Line Analysis","text":"binning methodology involves splitting data several sections x-axis selecting boundary point section based set criteria (mostly 95\\(^{\\rm th}\\) 99\\(^{\\rm th}\\) percentile) (Shatar McBratney, 2004). fit boundary line using binning method, blbin() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. model=\"blm\" linear model. bins argument describes size bins vector length 3 containing minimum maximum independent variable values, size bins used data respectively. assume 99\\(^{\\rm th}\\) percentile (tau=0.99) boundary. initial start theta values can determined previously shown previous section plot, can seen “trapezium” model appropriate data set. values theta can now obtained function can now run. results show optimized parameters plot. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blbin bins<-c(1.61,4.74,0.313)   blbin(x,y, bins,model = \"explore\", tau=0.99, pch=16, col=\"grey\") #>        x               y         #>  Min.   :1.766   Min.   :10.71   #>  1st Qu.:2.471   1st Qu.:11.98   #>  Median :3.175   Median :12.83   #>  Mean   :3.175   Mean   :12.55   #>  3rd Qu.:3.879   3rd Qu.:13.34   #>  Max.   :4.583   Max.   :13.37 startValues(\"trapezium\") theta<-c(4.75, 3.23, 13.3, 24.87,-2.95 )  model2<-blbin(x,y, bins,theta = theta,model = \"trapezium\",                tau=0.99,                xlab=expression(\"Phosphorus/ mg L\"^-1),                expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                pch=16, col=\"grey\", bp_col=\"grey\")  model2 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁+ β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  4.743275 #> β₂  3.381090 #> β₀ 13.342009 #> β₃ 22.163096 #> β₄ -2.320116 #>  #> $RMS #> [1] 0.01383437"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"quantile-regression-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Quantile regression method","title":"Boundary Line Analysis","text":"method fits boundary line using principle quantile regression (Cade Noon, 2003). fit boundary line using quantile regression method, blqr() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. “blm” linear model. argument tau describes quantile value described boundary. assume 99\\(^{\\rm th}\\) quantile (tau=0.99) value boundary. arbitrary assumption, reason treat method heuristic. initial start theta values can determined previously shown previous section. however, blqr() function explore option hence startValues() function used just plot x y directly according suggested model structure upper edge data. trapezium model used data. thetavalues can now used blqr() function. results show optimized parameters plot. quantile regression method produce measures uncertainty parameters, BLA report conditional arbitrary choice tau. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blqr plot(x,y)  startValues(\"trapezium\") theta<-c(4,3,13.5,31,-4.5)  model3<-blqr(x,y, theta = theta, model = \"trapezium\",              xlab=expression(\"Phosphorus/ mg L\"^-1),               ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),              pch=16,tau=0.99, col=\"grey\") # may take a few seconds to ran  model3 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  7.559968 #> β₂  2.142848 #> β₀ 13.363650 #> β₃ 30.667717 #> β₄ -4.192797 #>  #> $RSS #> [1] 252.7349"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"censored-bivariate-normal-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Censored bivariate normal model","title":"Boundary Line Analysis","text":"fit boundary line using Censored bivariate normal model method, see vignette(\"Censored_bivariate_normal_model\").","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"using-your-own-defined-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Using your own defined model","title":"Boundary Line Analysis","text":"illustrated methods fitting boundary line -built models. include linear, linear plateau, mitscherlich, schmidt, logistic, logistic model proposed Fermont et al. (2009), inverse logistic, double logistic, quadratic trapezium models. However, cases one wants fit another model part built models. following step illustrate fit custom model. Though illusterated using BOLIDES() function, also applies blbin() blqr() functions. Assuming initial data exploratory step done, first step check structure boundary points using argument model=\"explore\" BOLIDES() function. Lets say want fit model \\[ y=\\beta_0 - \\beta_1(x-\\beta_2)^2 \\] model written form R function. parameters always written alphabetical order , b c three parameter function, , b,c d four parameter function next step suggest initial start theta values. sensible values else function converge. arranges alphabetical order theta=c(,b,c). Replace , b c numeric values choice. arguments BOLIDES() function can now added. case, argument model set “”. arguments equation now set custom function (equation=custom_function) parameters models shown results. prediction boundary response values value x can done previously shown using predictBL() function.","code":"BOLIDES(x,y,model=\"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 custom_function<-function(x,a,b,c){   y<- a - b*(x-c)^2 } theta<-c(13.5,3,3.3)    model4<-BOLIDES(x,y, theta = theta,model = \"other\",                 equation=custom_function,                 xlab=expression(\"Phosphorus/mg L\"^-1),                  ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  pch=16, ylim=c(3.8,14.5), col=\"grey\",bp_col=\"grey\")  model4 #> $Model #> [1] \"other\" #>  #> $Equation #> function(x,a,b,c){ #>   y<- a - b*(x-c)^2 #> } #> <bytecode: 0x55c070fc9498> #>  #> $Parameters #>    Estimate #> a 14.498417 #> b  2.175998 #> c  3.128628 #>  #> $RMS #> [1] 0.5166668"},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"closing-remarks","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Closing remarks","title":"Boundary Line Analysis","text":"boundary line fitting methods illustrated use optimization function determine parameters proposed models. remove risk local optimum parameters, advised models ran several starting values results smallest error can selected. method produces error value output. residue mean square (RMS) blbin() BOLIDES() blqr() residue sum squares (RSS). cbvn(), use likelihood value.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/BLA.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Boundary Line Analysis","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. https://doi.org/10.1890/1540-9295(2003)001[0412:AGITQR]2.0.CO;2 Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms east africa. Field Crops Research, 112 (1), 24–36. https://doi.org/10.1016/j.fcr.2009.01.009 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794 Miti, C., Milne, ., Giller, K., & Lark, R. (2024). concepts quantification yield gap using boundary lines. review. Field Crops Research, 311. https://doi.org/10.1016/j.fcr.2024.109365. Rousseeuw, P. J., Ruts, ., & Tukey, J. W. (1999). bagplot: bivariate boxplot. American Statistician, 53, 382–387. https://doi.org/10.1080/00031305.1999.10474494 Shatar, T. M., & McBratney, . B. (2004). Boundary-line analysis field-scale yield response soil properties. Journal Agricultural Science, 142 , 553-560. https://doi:10.1017/S0021859604004642 Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Use of censored bivariate normal model function for yield gap analysis","text":"censored bivariate normal model (Lark Milne, 2016) statistical method fit boundary line data. fits boundary line using maximum likelihood approach censored bivariate distribution. removes subjectivity associated boundary line fitting methods ( BOLIDES, Binning quantile regression) selecting boundary points boundary line fitted specifying arbitrary quantile model. also gives evidence presence boundary data set bivariate normal null distribution. method previously used fit boundary lines data nitrous oxide emission function soil moisture (Lark Milne, 2016) , wheat yield function nutrient concentration (Lark et al. 2020). R package, BLA, contains exploratory boundary fitting functions can used process fitting boundary line data using censored bivariate normal model. vignette gives step step process fitting boundary line subsequent post-hoc analysis. demonstration, data set soil used boundary line analysis carried soil P pH.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"installing-dependent-packages","dir":"Articles","previous_headings":"","what":"Installing dependent packages","title":"Use of censored bivariate normal model function for yield gap analysis","text":"BLA package requires packages MASS, aplpack mvtnorm installed R. can install packages using following code BLA package can loaded","code":"# package names packages <- c(\"MASS\", \"mvtnorm\", \"aplpack\") # # install packages installed_packages <- packages %in% rownames(installed.packages()) if (any(installed_packages == FALSE)){    install.packages(packages[!installed_packages])} library(BLA) #> Warning: no DISPLAY variable so Tk is not available library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"yield-gap-analysis-using-boundary-lines","dir":"Articles","previous_headings":"","what":"Yield gap analysis using boundary lines","title":"Use of censored bivariate normal model function for yield gap analysis","text":"data going used called soilwhich part BLA package. contains measures wheat yield farms different parts UK associated soil properties pH phosphorus. process yield gap analysis involves two step include (1) fitting boundary line (2) determining limiting factor. first fit boundary line soil P pH limiting factor determined.","code":"data(\"soil\")"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"data-exploration","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil P boundary line fitting","what":"Data exploration","title":"Use of censored bivariate normal model function for yield gap analysis","text":"Exploratory analysis essential initial step fitting boundary line data. step ensures assumptions censored bivariate normal model met. Three exploratory procedures performed data include (1) Assessing plausibility normality variables, (2) Removal outliers, (3) Testing evidence boundary data. 1. Assessing normality independent dependent variable Boundary line model fitting using cbvn() requires independent (x) dependent (y) variables normally distributed albeit censoring variable y. summa() function gives summary statistics distribution variable. octile skewness robust measure skew, expect absolute value less 0.2 normally distributed variable. also assess plots data, bearing mind dependent variable may subject censoring large values target model. summaplot() function gives visual description distribution. 2. Removal outliers Boundary line analysis sensitive outlying values hence required identified removed. bag plot (bivariate box plot) used identify outliers. bag plot four main components, (1) depth median (equivalent median box plot) represents centre data set, (2) bag contains 50% data points (eqiuavalent interquartile range), (3) ‘fence’ separates probable outliers, (4) loop contains points outside bag outliers. 3. Testing data presence boundary boundary exists data set, expected clustering observations upper edges data cloud compared bivariate normally distributed data data points upper edges sparse small probability density . boundary can assumed data set evidence clustering upper edges. expl_boundary() function, based convex hull, can used access presence boundary (Miti et al, 2024). function checks probability observed clustering came bivariate normal distribution (p-value). results, probability (p-value) points close data came bivariate normally distributed data less 5%. Therefore, evidence bounding effects data right left sections data. Note , plot, data split right left sections get information clustering nature points.","code":"x<-soil$P y<-soil$yield  #Distribution of the x variable  summastat(x) # Gives indices for skewness. Normal distribution range of -1 to 1. If not normally distributed,a transformation is required  #>         Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.9647     22         16         32 207.0066 14.38772 1.840844 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429 5.765138           43 #summaplot(x) # histogram and qqplot for distribution of x  summastat(log(x))  #>          Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.126361 3.091042   2.772589   3.465736 0.2556936 0.5056615 0.1297406 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05372586            0 #summaplot(log(x))   #Distribution of the y variable  summastat(y)# Gives indices for skewness. Normal distribution range of -1 to 1. If not normally distributed,a transformation is required  #>          Mean  Median Quartile.1 Quartile.3 Variance       SD   Skewness #> [1,] 9.254813 9.36468   8.203703   10.39477 3.456026 1.859039 -0.4819805 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05793291 1.292635            7 #summaplot(y) # histogram and qqplot for distribution of y x<-log(x) # since we requred a transformation df<-data.frame(x,y)  bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = FALSE) # legend(\"topright\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),  #            pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"),cex=0.7)  # Combine data points from \"bag\" and within the loop  dat<-rbind(bag$pxy.bag,bag$pxy.outer)  # Output is a matrix, we can pull out x and y variables for next stage   x<-dat[,1]  y<-dat[,2] expl_boundary(x,y) # may take a few minutes to complete"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"fitting-the-boundary-line-to-data","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil P boundary line fitting","what":"Fitting the boundary line to data","title":"Use of censored bivariate normal model function for yield gap analysis","text":"exploratory tests indicated data provide evidence boundary, outliers identified removed, variables x y normally distributed. therefore proceed fit boundary line model data set using censored bivariate normal model. function cbvn() fits boundary line data. information arguments function, check Argument values function cbvn() need set . Firstly, create data-frame containing x y, called vals. Secondly, cbvn() requires initial starting values, theta, parameters boundary line (censor) bivariate normal distribution. Starting values boundary line depend model one wishes fit data (see options ?cbvn) . case, shall fit linear+plateau model (lp) hence parameters plateau value intercept slope linear component. boundary line start values can obtained using function startValues(). information startValues() function run code ?startValues. scatter plot y x active plot window R, run function start.values(\"lp\"), click plot, point expect lowest largest response linear model boundary. Note starting values models can determined changing model name “lp” desired models (see ?startValues help file). Next, determine parameters bivariate normal distribution include means x y variables, standard deviation x y variables, correlation x y. Another important argument standard deviation measurement error, sigh, response variable y. cases might estimated observations analytical duplicates, experiments determine measurement error variables crop yield (e.g. Kosmowski et al. 2021). However, cases available, can estimated using different options. One option estimation use variogram location data samples available. case, nugget variance unexplained short distance variations can taken estimate measurement error. possible, profiling procedure can done. done fitting proposed model using varied number sigh values keeping rest model parameters constant. log-likelihood values model sigh determined value maximizes likelihood can selected log-likelihood profile. can implemented using ble_profile() function. information function run possible sigh values can set 0.5, 0.7 0.8 can check likelihood profile. likelihood profile, sigh maximizes likelihood around 0.65. can use value sigh. Now arguments required cbvn() function set, boundary line can fitted boundary line fitted parameters together corresponding standard error values obtained. However, one question needs addressed proceed, boundary line ideal data? fitting BL model data, cbvn() also fits bivariate normal model boundary calculates AIC value. output, AIC value BL model lower bivariate normal model. Therefore, BL model appropriate. parameters boundary line can now used predict boundary yield given value P. function predictBL() BLA package can used . information function, see need predict largest expected yield point given soil P. replace missing values mean value P. can proceed next variable pH using procedure.","code":"?cbvn vals<-data.frame(x,y) #This is an input dataframe containing the variables plot(x,y)  startValues(\"lp\") mean(x)  #> [1] 3.125969 mean(y)  #> [1] 9.28862 sd(x)  #> [1] 0.5005755 sd(y)  #> [1] 1.728996 cor(x,y) #> [1] 0.0346758  #The parameters of the boundary line and the data can be combined in a #vector theta in the order  #theta<-c(intercept, slope, max response, mean(x), mean(y), sd(x), sd(y), cor(x,y))  theta<-c(4,3,13.6,3,9,0.5,1.9,0.05) ?ble_profile sigh=c(0.5,0.7,0.8) ble_profile(vals,theta,sigh,model = \"lp\") # may take a few minutes to run for large datasets model1<-cbvn(vals,theta,sigh=0.7,model = \"lp\", xlab=expression(\"P /log ppm\"), ylab=expression(\"Yield /t ha\"^{-1}), pch=16, col=\"grey\") #> Note: This function may take a few minutes to run for large datasets.  model1 #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>          Estimate Standard error #> β₁     4.06696828    1.066777243 #> β₂     3.33394002    0.485261997 #> β₀    13.11507868    0.118534298 #> mux    3.12596856    0.006451139 #> muy    9.29877789    0.022675263 #> sdx    0.50053521    0.004561613 #> sdy    1.60137488    0.018125430 #> rcorr  0.03013864    0.014331202 #>  #> $AIC #>              #> mvn 32429.55 #> BL  32399.25 ?predictBL xp<-log(soil$P) # let xp be the P content in our dataset xp[which(is.na(xp)==T)]<-mean(xp,na.rm=T) P<-predictBL(model1,xp)"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"data-exploration-1","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil pH boundary line fitting","what":"Data exploration","title":"Use of censored bivariate normal model function for yield gap analysis","text":"1. Testing normality independent dependent variable 2. Removal outliers 3. Testing data presence boundary already done using P boundary existence confirmed","code":"x<-soil$pH y<-soil$yield  #Distribution of the x variable  summastat(x) # Gives indices for skewness. Normal distribution range of -1 to 1. If not normally distributed,a transformation is required  #>          Mean Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 7.566133   7.74       7.12        8.1 0.4346898 0.6593101 -0.798602 #>      Octile skewness    Kurtosis No. outliers #> [1,]      -0.3594771 -0.07176715            0 #summaplot(x) # histogram and qqplot for distribution of x df<-data.frame(x,y)  bag<-bagplot(df,show.whiskers = FALSE, ylim=c(0,20),create.plot = FALSE) # legend(\"topleft\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),  #            pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"),cex=0.7)  # Combine data points from \"bag\" and within the loop  dat<-rbind(bag$pxy.bag,bag$pxy.outer)  # Output is a matrix, we can pull out x and y variables for next stage   x<-dat[,1]  y<-dat[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"fitting-the-boundary-line-to-data-1","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines > Soil pH boundary line fitting","what":"Fitting the boundary line to data","title":"Use of censored bivariate normal model function for yield gap analysis","text":"exploratory tests, indicated data provides evidence boundary existence, outliers identified removed, variables x y normally distributed. therefore, proceed fit boundary line model data set using censored bivariate normal model. function cbvn() fits boundary line data. determine argument values function cbvn() . Firstly, create data-frame containing x y, called vals. Secondly, cbvn() requires initial starting values, theta, parameters boundary line (censor) bivariate normal distribution. case, shall fit linear+Plateau model (lp) hence parameters plateau value intercept slope linear component. scatter plot y x active plot window R, run function start.values(\"lp\"), click plot, point expect lowest largest response linear model boundary. Note starting values models can determined changing model name “lp” desired models (see ?startValues help file) Next, determine parameters bivariate normal distribution include means x y variables, standard deviation x y variables, correlation x y. standard deviation measurement error, sigh already determine 0.7. Now arguments required cbvn() function set, boundary line can fitted boundary line fitted parameters together corresponding standard error values obtained. output, AIC value BL model lower bivariate normal model. Therefore, BL model appropriate. parameters boundary line can now used predict boundary yield given value pH using function predictBL(). need predict largest expected yield farm given soil pH. replace missing values mean value pH.","code":"vals<-data.frame(x,y) #This is an input dataframe containing the variables plot(x,y)  startValues(\"lp\") mean(x)  #> [1] 7.569203 mean(y)  #> [1] 9.277917 sd(x)  #> [1] 0.656315 sd(y)  #> [1] 1.755941 cor(x,y) #> [1] 0.1169399  #The parameters of the boundary line and the data can be combined in a #vector theta in the order  #theta<-c(intercept, slope, max response, mean(x), mean(y), sd(x), sd(y), cor(x,y))  theta<-c(-9,3, 13.5,7.5,9,0.68,2.3,0.12) model2<-cbvn(vals,theta,sigh=0.7,model = \"lp\", xlab=expression(\"pH\"), ylab=expression(\"Yield /t ha\"^{-1}), pch=16, col=\"grey\") #> Note: This function may take a few minutes to run for large datasets.  model2 #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>         Estimate Standard error #> β₁    -3.9496797    0.559515105 #> β₂     2.5933722    0.095374741 #> β₀    13.2047017    0.173490948 #> mux    7.5692055    0.008439496 #> muy    9.2840069    0.022826758 #> sdx    0.6562759    0.005967791 #> sdy    1.6239674    0.018079586 #> rcorr  0.1233205    0.014184408 #>  #> $AIC #>              #> mvn 35962.04 #> BL  35946.16 xpH<-soil$pH # let xpH be the P content in our dataset xpH[which(is.na(xpH)==T)]<-mean(xpH,na.rm=T) pH<-predictBL(model2,xpH)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"determination-of-most-limiting-factor","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines","what":"Determination of most limiting factor","title":"Use of censored bivariate normal model function for yield gap analysis","text":"boundary line analysis used determine limiting factor many yield gap analysis studies. according von Liebig (1840) law minimum \\[ y={\\rm min}(f_1(x_1),f_2(x_2),...,f_n(x_n)) \\] BLA package, function limfactor() can used determine limiting factor point. information function, see two soil properties dataset, limiting factor data point determined can check proportion cases soil properties limiting two factors evaluated, yield gap cause unidentified. many factors affecting yield consider case. can also plot predicted yield limiting factor actual yield. dashed blue line represents attainable yield particular setting. 1:1 describes situations actual yield equal predicted yield limiting factor. yield gap point equivalent vertical distance point 1:1 line. points 1:1 line considered zero yield gap position line due measurement error.","code":"?limfactor Limiting_factor<-limfactor(P,pH) # This produces a list of length 2 containg a vector limiting factors at each pont and the maximum predicted response in the dataset.  Limiting_factors<-Limiting_factor[[1]] Lim_factors<-Limiting_factors$Lim_factor  barplot(prop.table(table(Lim_factors))*100,         ylab = \"Percentage (%)\",         xlab = \"Soil property\",         col = \"grey\",         ylim=c(0,90))  axis(side = 1, at = seq(0, 4, by = 1), labels = FALSE, lwd = 1, col.ticks = \"white\")   axis(side = 2, lwd = 1) plot(Limiting_factors$Rs, soil$yield,      xlab=\"Predicted yield (ton/ha)\",      ylab=\"Actual yield (ton/ha)\", pch=16, col=\"grey\")  abline(h=Limiting_factor[[2]], col=\"blue\", lty=5, lwd=1) lines(c(min(Limiting_factors$Rs),max(Limiting_factors$Rs)),  c(min(Limiting_factors$Rs),max(Limiting_factors$Rs)),  col=\"red\", lwd=2)  legend(\"bottomleft\",legend = c(\"Att yield\", \"1:1 line\"),        lty=c(5,1), col=c(\"blue\", \"red\"), lwd=c(1, 2), cex = 0.8)"},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"concluding-remarks","dir":"Articles","previous_headings":"Yield gap analysis using boundary lines","what":"Concluding remarks","title":"Use of censored bivariate normal model function for yield gap analysis","text":"censored bivariate normal model used carry yield gap analysis. advantage using method boundary line fitting methods based statistical principles removes subjectivity associated selection bin sizes quantile consider boundary done binning methodology quantile regression. Furthermore, uncertainty around boundary line can also determined.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Censored_bivariate_normal_model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Use of censored bivariate normal model function for yield gap analysis","text":"Kosmowski, F., Chamberlin, J., Ayalew, H., Sida, T., Abay, K., & Craufurd, P. (2021). accurate yield estimates crop cuts? evidence small-holder maize farms ethiopia. Food Policy, 102 , 102122. https://doi.org/10.1016/j.foodpol.2021.102122 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets.European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. https://doi.org/10.1111/ejss.12318 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to boundary line analysis","text":"biological response, y, observed function single factor interest, x, uncontrolled environment .e. influence factors controlled, scatter observations observed due many sources variation. , example, x along factors contributes additive way variation y bivariate normal distribution may expected. However, complex effects possible. example, data set large enough contain wide range combinations conditions, x factors influence y accordance non-linear process characterized law minimum, law optimum (see Miti et al, 2024a), data points observed favourable conditions response y fall upper edges data cloud, maximum possible response y given value x. data points fall maximum response result limiting effect factors controlled . Webb (1972) suggested methodology can used describe relationship data points upper edges data sets likely relationship y x factors limiting. referred relationship boundary line. initial boundary line method Webb (1972) involved selection data points upper edges data cloud visually. boundary line model fitted selected data points describe relationship. Currently, many procedures fitting boundary line model dataset developed improve procedure statistical heuristic. include binning, BOLIDES, quantile regression, makowski quantile regression censored bivariate normal methods. Similarly, data exploratory methods developed provide evidence boundary existence dataset therefore, justifies use boundary line analysis data set (Milne et al. 2006). Colleagues Webb (1972), provided initial data boundary line analysis first applied, convinced data realized boundary, hence need testing data sets presence boundary. boundary exists data set, expected distribution points upper edges data cloud clustered randomly distributed response can go beyond observed boundary. Evidence distribution provides grounds proceeding boundary line analysis, Miti et al. (2024b) describe method package provides evaluate evidence. noted powerful testing alternative bivariate normal distribution can done fitting boundary line model cbvn() function. BLA package provides group functions carryout boundary line analysis data set R software. includes functions explore data, test evidence boundary data set, fit boundary line post-hoc analysis fitting boundary line.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"load-the-bla-package","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Load the BLA package","title":"Introduction to boundary line analysis","text":"BLA package installed, first step load R session using library() command. package aplpack also loaded use outlier detection function bagplot().","code":"library(BLA) #> Warning: no DISPLAY variable so Tk is not available library(aplpack)"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"data","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Data","title":"Introduction to boundary line analysis","text":"BLA package contains data set called soil consisting soil pH, phosphorus wheat yield measurements farms UK. use data set illustrate functions BLA package. view first six lines data, run code :","code":"head(soil) #>      yield   pH  P #> 1  9.55787 6.66 10 #> 2  8.88999 6.92  9 #> 3  8.38731 6.83 10 #> 4  9.19583 6.34  9 #> 5  9.83057 6.74  9 #> 6 11.88140 6.54 12"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"exploratory-analysis","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Exploratory analysis","title":"Introduction to boundary line analysis","text":"exploratory analysis important initial step boundary line analysis. step serves show data distributed using various indices also check outliers data set. variable dataset skewed, especially independent variable, transformation may required can assumed normal distribution. boundary line analysis sensitive outlying values, must identified removed required. boundary line model may expect see non-normal variation response variable, case P, possibly increased density upper bound rest data points must appear plausibly drawn normal distribution. Exploratory analysis, particularly using plots, robust statistics octile skewness, provides basis assess plausibility underlying normal variable, perhaps censoring effect whether transformation needed, well form model can fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"normality-test","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Normality test","title":"Introduction to boundary line analysis","text":"assess distribution data, summa() function provides different summary statistics. function summaplot() give graphical representation variable distribution. Let us set variables P wheat yield data set x y respectively applying summa() summaplot() functions results, wheat yield (y) variables can considered normally distributed soil P (x) skewed. variable assumed normal distribution, indices skewness -1 1 Octile skewness -0.2 0.2. graphical representation distribution can checked using soil P can log transformed check summary statistics plot results, variable log soil P can assumed normal distribution.","code":"x<-soil$P y<-soil$yield summastat(x) #>         Mean Median Quartile.1 Quartile.3 Variance       SD Skewness #> [1,] 25.9647     22         16         32 207.0066 14.38772 1.840844 #>      Octile skewness Kurtosis No. outliers #> [1,]       0.3571429 5.765138           43 summastat(y) #>          Mean  Median Quartile.1 Quartile.3 Variance       SD   Skewness #> [1,] 9.254813 9.36468   8.203703   10.39477 3.456026 1.859039 -0.4819805 #>      Octile skewness Kurtosis No. outliers #> [1,]     -0.05793291 1.292635            7 summastat(log(x)) #>          Mean   Median Quartile.1 Quartile.3  Variance        SD  Skewness #> [1,] 3.126361 3.091042   2.772589   3.465736 0.2556936 0.5056615 0.1297406 #>      Octile skewness    Kurtosis No. outliers #> [1,]      0.08395839 -0.05372586            0 #summaplot(log(x))  x<-log(x) # transforms soil P to log"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"outlier-detection-and-removal","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Outlier detection and removal","title":"Introduction to boundary line analysis","text":"Outliers identified using bagplot method (Rousseeuw et al., 1999. bag plot multivariate equivalent box plot. utilise bagplo() function aplpack package produce bagplots.bagplot three main components. depth median represent center data cloud. equivalent median univariate box-plot Bag contains 50% data points. equivalent inter-quartile range univariate box-plot. Loop contains points outside bag outliers Outliers values outside loop variables x y now extracted results bag plot outliers removed","code":"vals_ur<-matrix(NA,length(x),2) #Create a matrix with x and y as required by the bag plot function vals_ur[,1]<-x  vals_ur[,2]<-y  bag<-bagplot(vals_ur, ylim=c(0,20), show.whiskers =F,create.plot = FALSE) # run the bagplot function # legend(\"topright\", c(\"bag\",\"loop\",\"outliers\", \"d.median\"),  #         pch = c(15,15,16,8),col=c(\"blue\",\"lightblue\",\"red\",\"red\"), #        cex=0.7)  vals<-rbind(bag$pxy.bag,bag$pxy.outer) # to remove outliers, select points in the bag and loop only x<-vals[,1] y<-vals[,2]"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"test-for-presence-of-boundary-in-dataset","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Exploratory analysis","what":"Test for presence of boundary in dataset","title":"Introduction to boundary line analysis","text":"function exp_boundary() can used evaluate evidence observations clustered near upper boundary data set, testing unbounded bivariate normal distribution null hypothesis. standard deviation (sd) Euclidean distance boundary points centre data set used measure density points upper edges data. smaller sd value, denser distribution. function uses convex hull select points upper boundary. default selecting first 10 consecutive convex hulls (shells=10). convex hulls splits two sections, right left sections, evidence boundary existence sections checked determining probability observed density points upper edges data bivariate normal null hypothesis. detail provided Miti et al. 2024b. reject null hypothesis p< 0.05. p-values left right sections less 0.05. results indicate evidence upper boundary left right sections scatter. suggests justification fitting boundary data. graphical representation scatter plot boundary points also given well density histograms showing observed standard deviation given 10000 simulated standard deviations normal unbounded data .","code":"bound_test<-expl_boundary(x,y,shells = 10, simulations = 100,                            pch=16, col=\"grey\") #  #> Note: This function may take a few minutes to run for large datasets.  bound_test #>     Index Section    value #> 1      sd    Left 1.045711 #> 2      sd   Right 1.115379 #> 3 Mean sd    Left 1.183579 #> 4 Mean sd   Right 1.268895 #> 5 p_value    Left 0.010000 #> 6 p_value   Right 0.010000"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"fitting-boundary-line-using-different-methods","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Fitting boundary line using different methods","title":"Introduction to boundary line analysis","text":"exploratory tests indicated data provides evidence upper boundary, outliers variables, x y, appear normally distributed. therefore, proceed fit boundary line model data set. several methods can used fit boundary line data set can classified heuristic (BOLIDES, Binning & quantile regression) statistical methods (censored bivariate normal). Miti et al. (2024a) give detail methods.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"bolides-algorithm","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"BOLIDES algorithm","title":"Introduction to boundary line analysis","text":"method fit boundary line following boundary line determination technique proposed Schnug et al. (1995). fit boundary line using BOLIDES algorithm , BOLIDES() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. “blm” linear model. xmax argument describes maximum value independent variable beyond relation x y longer theoretically feasible. arguments relate plot parameters plot() function. boundary fitting methods require initial starting values parameters proposed model. initial starting values optimized find parameters proposed model optim() function base R. get theta starting values, BOLIDES() function run argument model=\"explore\". allows us view selected boundary points using boundary line determination technique. plot, can seen “trapezium” model appropriate data set. function startValues() can used determine initial start theta values. information startValues() function see ?startValues(). scatter plot y x active plot window R, run function startValues(\"trapezium\"), use mouse click plot five boundary points follow trapezium model order increasing x values. proposed start values produced. Note can done models well. arguments set, function can run results show optimized parameters plot fitted model. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x. Say want predict maximum possible yield response soil P values 4.5, 7.4, 12.2, 20.1 54.5 mg/kg. Remember model fitted values log soil P therefore, values must first log transformed prediction made. can use function predictBL() purpose. information function, see ?predictBL() .","code":"?BOLIDES BOLIDES(x,y,model = \"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 ?startValues() startValues(\"trapezium\") # then select the five points at the edge of the dataset that make up the trapezium model in order of increasing x values. theta<-c(4,3,14,104,-22) # start values is a vector of five consists of intercept, slope, plateau yield, intercept2 and slope2.   model1<-BOLIDES(x,y, theta = theta,model = \"trapezium\",                 xlab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  ylab=expression(\"Yield/ t ha\"^-1), pch=16,                  col=\"grey\", bp_col=\"grey\")  model1 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>      Estimate #> β₁   4.765511 #> β₂   3.456652 #> β₀  13.573119 #> β₃ 108.346207 #> β₄ -21.263562 #>  #> $RMS #> [1] 0.2174186 P<-c(4.5, 7.4, 12.2, 20.1, 54.5) P_log<-log(P)  Max_Response<-predictBL(model1, P_log) # the argument inputs are the boundary line model and the independent values (in this case P_log)  Max_Response #> [1]  9.964583 11.683930 13.412104 13.573119 13.573119"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"binning-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Binning method","title":"Introduction to boundary line analysis","text":"binning methodology involves splitting data several sections x-axis selecting boundary point section based set criteria (mostly 95\\(^{\\rm th}\\) 99\\(^{\\rm th}\\) percentile) (Shatar McBratney, 2004). fit boundary line using binning method, blbin() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. model=\"blm\" linear model. bins argument describes size bins vector length 3 containing minimum maximum independent variable values, size bins used data respectively. assume 99\\(^{\\rm th}\\) percentile (tau=0.99) boundary. initial start theta values can determined previously shown previous section plot, can seen “trapezium” model appropriate data set. values theta can now obtained function can now run. results show optimized parameters plot. uncertainty parameters heuristic method. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blbin bins<-c(1.61,4.74,0.313)   blbin(x,y, bins,model = \"explore\", tau=0.99, pch=16, col=\"grey\") #>        x               y         #>  Min.   :1.766   Min.   :10.71   #>  1st Qu.:2.471   1st Qu.:11.98   #>  Median :3.175   Median :12.83   #>  Mean   :3.175   Mean   :12.55   #>  3rd Qu.:3.879   3rd Qu.:13.34   #>  Max.   :4.583   Max.   :13.37 startValues(\"trapezium\") theta<-c(4.75, 3.23, 13.3, 24.87,-2.95 )  model2<-blbin(x,y, bins,theta = theta,model = \"trapezium\",                tau=0.99,                xlab=expression(\"Phosphorus/ mg L\"^-1),                expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                pch=16, col=\"grey\", bp_col=\"grey\")  model2 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁+ β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  4.743275 #> β₂  3.381090 #> β₀ 13.342009 #> β₃ 22.163096 #> β₄ -2.320116 #>  #> $RMS #> [1] 0.01383437"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"quantile-regression-method","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Quantile regression method","title":"Introduction to boundary line analysis","text":"method fits boundary line using principle quantile regression (Cade Noon, 2003). fit boundary line using quantile regression method, blqr() function can used. check required arguments function, help page can launched. arguments x y independent dependent variable respectively theta vector starting values . model argument used specify model boundary line e.g. “blm” linear model. argument tau describes quantile value described boundary. assume 99\\(^{\\rm th}\\) quantile (tau=0.99) value boundary. arbitrary assumption, reason treat method heuristic. initial start theta values can determined previously shown previous section. however, blqr() function explore option hence startValues() function used just plot x y directly according suggested model structure upper edge data. trapezium model used data. thetavalues can now used blqr() function. results show optimized parameters plot. quantile regression method produce measures uncertainty parameters, BLA report conditional arbitrary choice tau. parameters can used determine boundary line response given value x using predictBL() function.","code":"?blqr plot(x,y)  startValues(\"trapezium\") theta<-c(4,3,13.5,31,-4.5)  model3<-blqr(x,y, theta = theta, model = \"trapezium\",              xlab=expression(\"Phosphorus/ mg L\"^-1),               ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),              pch=16,tau=0.99, col=\"grey\") # may take a few seconds to ran  model3 #> $Model #> [1] \"trapezium\" #>  #> $Equation #> [1] y = min(β₁ + β₂x, β₀, β₃ + β₄x) #>  #> $Parameters #>     Estimate #> β₁  7.559968 #> β₂  2.142848 #> β₀ 13.363650 #> β₃ 30.667717 #> β₄ -4.192797 #>  #> $RSS #> [1] 252.7349"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"censored-bivariate-normal-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Censored bivariate normal model","title":"Introduction to boundary line analysis","text":"fit boundary line using Censored bivariate normal model method, see vignette(\"Censored_bivariate_normal_model\").","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"using-your-own-defined-model","dir":"Articles","previous_headings":"Boundary line analysis using BLA package > Fitting boundary line using different methods","what":"Using your own defined model","title":"Introduction to boundary line analysis","text":"illustrated methods fitting boundary line -built models. include linear, linear plateau, mitscherlich, schmidt, logistic, logistic model proposed Fermont et al. (2009), inverse logistic, double logistic, quadratic trapezium models. However, cases one wants fit another model part built models. following step illustrate fit custom model. Though illusterated using BOLIDES() function, also applies blbin() blqr() functions. Assuming initial data exploratory step done, first step check structure boundary points using argument model=\"explore\" BOLIDES() function. Lets say want fit model \\[ y=\\beta_0 - \\beta_1(x-\\beta_2)^2 \\] model written form R function. parameters always written alphabetical order , b c three parameter function, , b,c d four parameter function next step suggest initial start theta values. sensible values else function converge. arranges alphabetical order theta=c(,b,c). Replace , b c numeric values choice. arguments BOLIDES() function can now added. case, argument model set “”. arguments equation now set custom function (equation=custom_function) parameters models shown results. prediction boundary response values value x can done previously shown using predictBL() function.","code":"BOLIDES(x,y,model=\"explore\", pch=16, col=\"grey\") #>        x               y          #>  Min.   :1.609   Min.   : 7.513   #>  1st Qu.:2.583   1st Qu.:10.817   #>  Median :3.649   Median :12.566   #>  Mean   :3.464   Mean   :11.965   #>  3rd Qu.:4.520   3rd Qu.:13.575   #>  Max.   :4.736   Max.   :14.159 custom_function<-function(x,a,b,c){   y<- a - b*(x-c)^2 } theta<-c(13.5,3,3.3)    model4<-BOLIDES(x,y, theta = theta,model = \"other\",                 equation=custom_function,                 xlab=expression(\"Phosphorus/mg L\"^-1),                  ylab=expression(\"Phosphorus/ln(mg L\"^-1*\")\"),                  pch=16, ylim=c(3.8,14.5), col=\"grey\",bp_col=\"grey\")  model4 #> $Model #> [1] \"other\" #>  #> $Equation #> function(x,a,b,c){ #>   y<- a - b*(x-c)^2 #> } #> <bytecode: 0x559ee4a8edf8> #>  #> $Parameters #>    Estimate #> a 14.498417 #> b  2.175998 #> c  3.128628 #>  #> $RMS #> [1] 0.5166668"},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"closing-remarks","dir":"Articles","previous_headings":"Boundary line analysis using BLA package","what":"Closing remarks","title":"Introduction to boundary line analysis","text":"boundary line fitting methods illustrated use optimization function determine parameters proposed models. remove risk local optimum parameters, advised models ran several starting values results smallest error can selected. method produces error value output. residue mean square (RMS) blbin() BOLIDES() blqr() residue sum squares (RSS). cbvn(), use likelihood value.","code":""},{"path":"https://chawezimiti.github.io/BLA/articles/Introduction_to_BLA.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to boundary line analysis","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. https://doi.org/10.1890/1540-9295(2003)001[0412:AGITQR]2.0.CO;2 Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms east africa. Field Crops Research, 112 (1), 24–36. https://doi.org/10.1016/j.fcr.2009.01.009 Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. https://doi.org/10.1111/ejss.12891 Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Miti, C., Milne, ., Giller, K., Sadras, V., & Lark, R. (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture, 219. https://doi.org/10.1016/j.compag.2024.108794 Miti, C., Milne, ., Giller, K., & Lark, R. (2024). concepts quantification yield gap using boundary lines. review. Field Crops Research, 311. https://doi.org/10.1016/j.fcr.2024.109365. Rousseeuw, P. J., Ruts, ., & Tukey, J. W. (1999). bagplot: bivariate boxplot. American Statistician, 53, 382–387. https://doi.org/10.1080/00031305.1999.10474494 Shatar, T. M., & McBratney, . B. (2004). Boundary-line analysis field-scale yield response soil properties. Journal Agricultural Science, 142 , 553-560. https://doi:10.1017/S0021859604004642 Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chawezi Miti. Maintainer, author, copyright holder. Richard M Lark. Author. Alice E Milne. Author. Ken E Giller. Author. Victor O Sadras. Contributor. University Nottingham/Rothamsted Research. Funder.","code":""},{"path":"https://chawezimiti.github.io/BLA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Miti C, Lark R, Milne , Giller K (2024). BLA: Boundary Line Analysis. R package version 0.0.1, https://chawezimiti.github.io/BLA/.","code":"@Manual{,   title = {BLA: Boundary Line Analysis},   author = {Chawezi Miti and Richard M Lark and Alice E Milne and Ken E Giller},   year = {2024},   note = {R package version 0.0.1},   url = {https://chawezimiti.github.io/BLA/}, }"},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Boundary Line Analysis","text":"BLA R package provides set tools fit boundary line models data set proposed Webb (1972). includes suite methods introduced since original manually-drawn boundary lines proposed. include methods based binning independent variable, BOLIDES algorithm Schug et al. (1995), quantile regression censored bivariate normal model Milne et al. (2006). also provides data exploration methods check outliers provide initial evidence limiting boundary data sets initial steps boundary line analysis. includes functions determine suitable starting values boundary line parameters estimation numerical optimization procedures. Learn vignette(\"Introduction_to_BLA\").","code":""},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"how-can-i-install-the-package","dir":"","previous_headings":"","what":"How can I install the package?","title":"Boundary Line Analysis","text":"Install current version Github. need install package devtools installing BLA.","code":"library(devtools)  install_github(\"https://chawezimiti.github.io/BLA\")"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"what-can-i-use-the-bla-package-for","dir":"","previous_headings":"","what":"What can I use the BLA package for?","title":"Boundary Line Analysis","text":"classical situation BLA used model relationship response variable biological system (e.g. yield crop) variable potentially limiting response (e.g. soil pH). approach suitable large data sets surveys (.e. cases multiple potential limiting factors occur controlled experimentally. example crop yield pH, one can determine largest expected yield given pH value, also called boundary pH value. various methods fit boundary model BLA package, encoded functions blbin(), BOLIDES(), blqr() cbvn(). example uses BOLIDES() function:  boundary yield given pH farm can predicted using function predictBL() : critical pH value can determined model parameters. critical pH pH beyond yield increase response expected. boundary line post-hoc analysis procedures can conducted. information, See vignette(\"Censored_bivariate_normal_model\") vignette(\"Introduction_to_BLA\").","code":"library(BLA) library(aplpack)  # 1. Outlier detection using bagplot() function  nobs<-length(soil$pH)  vals_ur<-matrix(NA,nobs,2)#  create a matrix: bagplot inputs data as a matrix vals_ur[,1]<-soil$pH  vals_ur[,2]<-soil$yield  bag<-bagplot(vals_ur,create.plot = F ) # bagplot identifies outliers vals<-rbind(bag$pxy.bag,bag$pxy.outer) # new excludes bivariate outliers  # 2. Fit the boundary model in form of a linear plateau (\"lp\")  x<-vals[,1] y<-vals[,2] theta =c(-12.99,2,13 ) # initial start values for optimization  model<-BOLIDES(x,y, theta = theta,model = \"lp\",xlab=expression(\"pH\"),          ylab=expression(\"Yield/ t ha\"^-1), pch=16, plot=TRUE,        col=\"grey40\", cex=0.8) model #> $Model #> [1] \"lp\" #>  #> $Equation #> [1] y = min (β₁ + β₂x, β₀) #>  #> $Parameters #>     Estimate #> β₁ -4.981956 #> β₂  2.847364 #> β₀ 14.011192 #>  #> $RMS #> [1] 0.1733124 pH_values<-soil$pH pH_values[which(is.na(x)==T)]<-mean(x,na.rm=T) # replace missing values with mean of pH predicted_yield<-predictBL(model,pH_values)  head(predicted_yield) # predicted yield for the first six farms #> [1] 13.98149 14.01119 14.01119 13.07033 14.01119 13.63981 intercept<-model$Parameters[1] slope<-model$Parameters[2] plateau<-model$Parameters[3]  critical_pH<- (plateau-intercept)/slope  print(critical_pH) #> [1] 6.670432"},{"path":"https://chawezimiti.github.io/BLA/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Boundary Line Analysis","text":"Milne, . E., Wheeler, H. C., & Lark, R. M. (2006). testing biological data presence boundary. Annals Applied Biology, 149 , 213-222. https://doi.org/10.1111/j.1744-7348.2006.00085.x Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (bolides). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library. https://doi.org/10.2134/1995.site-specificmanagement.c66 Webb, R. . (1972). Use boundary line analysis biological data. Journal Horticultural Science, 47, 309–319. https://doi.org/10.1080/00221589.1972.11514472","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BLA: Boundary Line Analysis — BLA-package","title":"BLA: Boundary Line Analysis — BLA-package","text":"Tools fit boundary line model (Webb, 1972) data set make statistical inferences parameters. tests data set evidence boundary presence, fit boundary line model conduct post-hoc analysis e.g. prediction boundary values limiting factor. See Miti et al. (2024)<doi.org/10.1016/j.fcr.2024.109365>.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BLA: Boundary Line Analysis — BLA-package","text":"Lark, R. M., & Milne, . E. (2016). Boundary line analysis   effect water filled pore space nitrous oxide emission   cores arable soil. European Journal Soil Science, 67 ,   148-159. Milne, . E., Ferguson, R. B., & Lark, R. M. (2006). Estimating   boundary line model biological response maximum likelihood.   Annals Applied Biology, 149, 223–234. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line   determination technique (BOLIDES). P. C. Robert, R. H. Rust, &   W. E. Larson (Eds.), site specific management agricultural   systems (p. 899-908). Wiley Online Library. Webb, R. . (1972). Use boundary line analysis biological   data. Journal Horticultural Science, 47, 309-319.","code":""},{"path":[]},{"path":"https://chawezimiti.github.io/BLA/reference/BLA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BLA: Boundary Line Analysis — BLA-package","text":"Maintainer: Chawezi Miti chawezi.miti@nottingham.ac.uk (ORCID) [copyright holder] Authors: Richard M Lark (ORCID) Alice E Milne (ORCID) Ken E Giller (ORCID) contributors: Victor O Sadras [contributor] University Nottingham/Rothamsted Research [funder]","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_double_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Double logistic model — BL_double_logistic","title":"Double logistic model — BL_double_logistic","text":"function fits double logistic model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_double_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double logistic model — BL_double_logistic","text":"","code":"BL_double_logistic(x, beta01, beta02, beta1, beta2, beta3, beta4)"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_double_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double logistic model — BL_double_logistic","text":"x Numeric vector independent variable. beta01 Maximum response model parameter one. beta02 Maximum response model parameter two. beta1 Scaling model parameter. beta2 Shape model parameter. beta3 Scaling model parameter. beta4 Shape model parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_double_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double logistic model — BL_double_logistic","text":"Numeric vector response values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_double_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double logistic model — BL_double_logistic","text":"","code":"BL_double_logistic(20, 20, 2, 5, 5, 2, 2) #> [1] 18"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_inv_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse logistic model — BL_inv_logistic","title":"Inverse logistic model — BL_inv_logistic","text":"function fits inverse logistic model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_inv_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse logistic model — BL_inv_logistic","text":"","code":"BL_inv_logistic(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_inv_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse logistic model — BL_inv_logistic","text":"x Numeric vector independent variable. beta0 Parameter describing possible maximum response. beta1 Scaling parameter. beta2 Parameter describing shape model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_inv_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse logistic model — BL_inv_logistic","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_inv_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse logistic model — BL_inv_logistic","text":"","code":"BL_inv_logistic(2, 20, 2, 4) #> [1] 10"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic model — BL_logistic","title":"Logistic model — BL_logistic","text":"function fits logistic model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic model — BL_logistic","text":"","code":"BL_logistic(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic model — BL_logistic","text":"x Numeric vector independent variable. beta0 Parameter describing possible maximum response. beta1 Scaling parameter. beta2 Parameter describing shape model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic model — BL_logistic","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic model — BL_logistic","text":"","code":"BL_logistic(2, 20,2,0.5) #> [1] 10"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logisticfm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fermont logistic model — BL_logisticfm","title":"Fermont logistic model — BL_logisticfm","text":"function fits fermont logistic model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logisticfm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fermont logistic model — BL_logisticfm","text":"","code":"BL_logisticfm(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logisticfm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fermont logistic model — BL_logisticfm","text":"x Numeric vector independent variable. beta0 Parameter describing possible maximum response. beta1 Scaling parameter. beta2 Parameter describing shape model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logisticfm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fermont logistic model — BL_logisticfm","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BL_logisticfm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fermont logistic model — BL_logisticfm","text":"","code":"BL_logisticfm(2, 20, 5, 2) #> [1] 18.3221"},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary line determination technique — BOLIDES","title":"Boundary line determination technique — BOLIDES","text":"function selects upper bounding points scatter plot x y based boundary line determination technique proposed Schnug et al. (1995). model fitted resulting boundary points least squares method. done using optimization procedure hence requires starting values model parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary line determination technique — BOLIDES","text":"","code":"BOLIDES(x,y,model=\"explore\", equation=NULL, theta, optim.method=\"Nelder-Mead\",         xmin=min(bound$x), xmax=max(bound$x), plot=FALSE,bp_col=\"red\", bp_pch=16,         bl_col=\"red\" ,lwd=1,line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boundary line determination technique — BOLIDES","text":"x numeric vector values independent variable. y numeric vector values response variable. model Selects functional form boundary line. includes \"explore\" default, \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticfm\" logistic model proposed Fermont et al (2009), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. \"explore\" used check position boundary points bin correct model can applied. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. theta numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticfm\" model proposed Fermont et al. (2009), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). bp_col Selects color boundary points. bp_pch Point character pch plot() function. controls shape boundary points plot (bp_pch = 16 default). bl_col Colour boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boundary line determination technique — BOLIDES","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, residue mean square boundary points. Additionally,   graphical representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boundary line determination technique — BOLIDES","text":"inbuilt models available BOLIDES() function. \"explore\" option argument model generates plot showing location boundary points selected binning procedure. helps identify model type suitable fit boundary line. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticfm\")  (Fermont et al. 2009)  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 + \\beta_1(1-e^{\\frac{-x}{\\beta_2}})$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function BOLIDES() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (residue mean square ) can taken representation global optimum.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boundary line determination technique — BOLIDES","text":"Dhanoa, M. S., Sanderson, R., Cardenas, L. M., Shepherd, ., Chadwick, D. R., Powell, C. D., ... & France, J. (2022). Overview application Mitscherlich equation extensions estimate soil nitrogen pool fraction associated crop yield nitrous oxide emission. Advances Agronomy, 174, 269-295. Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms East Africa. Field Crops Research, 112 (1), 24–36. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129. Schnug, E., Heym, J. M., & Murphy, D. P. L. (1995). Boundary line determination technique (BOLIDES). P. C. Robert, R. H. Rust, & W. E. Larson (Eds.), site specific management agricultural systems (p. 899-908). Wiley Online Library.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boundary line determination technique — BOLIDES","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/BOLIDES.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boundary line determination technique — BOLIDES","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)`  BOLIDES(x,y, theta = c(0.5,0.02), model= \"blm\", xmax = 350) #> $Model #> [1] \"blm\" #>  #> $Equation #> [1] y = β₁ + β₂x #>  #> $Parameters #>       Estimate #> β₁ -1.82870029 #> β₂  0.02620793 #>  #> $RMS #> [1] 0.08891322 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":null,"dir":"Reference","previous_headings":"","what":"Binning method for determining the boundary line model — blbin","title":"Binning method for determining the boundary line model — blbin","text":"function fits boundary model upper bounds scatter plot x y based binning method. data first divided equal sized sections x-axis boundary point section selected based set criteria (e.g. 0.90, 0.95 0.99 percentile y among criteria). model fitted resulting boundary points least squares method. done using optimization procedure hence requires starting guess parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binning method for determining the boundary line model — blbin","text":"","code":"blbin(x,y,bins, model=\"explore\", equation=NULL, theta, tau=0.95,       optim.method=\"Nelder-Mead\", xmin=min(bound$x), xmax=max(bound$x),plot=FALSE,       bp_col=\"red\", bp_pch=16, bl_col=\"red\", lwd=1,line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binning method for determining the boundary line model — blbin","text":"x numeric vector values independent variable. y numeric vector values response variable. bins numeric vector length 3 determines size sections. first second values give range data binned third value give width bins. model Selects functional form boundary line. includes \"explore\" default, \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticfm\" logistic model proposed Fermont et al (2009), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. \"explore\" used check position boundary points bin correct model can applied. custom models, set model = \"\". equation custom model function writen form R function. Applies argument model=\"\", else NULL. theta numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticfm\" model proposed Fermont et al. (2009), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. tau percentile value (0-1) represents boundary point within bin (default tau = 0.95). optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). bp_col Selects color boundary points. bp_pch Point character pch plot() function. controls shape boundary points plot (bp_pch = 16 default). bl_col Colour boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binning method for determining the boundary line model — blbin","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, residue mean square boundary points. Additionally,   graphical representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binning method for determining the boundary line model — blbin","text":"inbuilt models available blbin() function. \"explore\" option argument model generates plot showing location boundary points selected binning procedure. helps identify model type suitable fit boundary line. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticfm\")  (Fermont et al. 2009)  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 + \\beta_1(1-e^{\\frac{-x}{\\beta_2}})$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function blbin() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (residue mean square ) can taken representation global optimum.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binning method for determining the boundary line model — blbin","text":"Casanova, D., Goudriaan, J., Bouma, J., & Epema, G. (1999). Yield gap analysis relation soil properties direct-seeded flooded rice. Dhanoa, M. S., Sanderson, R., Cardenas, L. M., Shepherd, ., Chadwick, D. R., Powell, C. D., ... & France, J. (2022). Overview application Mitscherlich equation extensions estimate soil nitrogen pool fraction associated crop yield nitrous oxide emission. Advances Agronomy, 174, 269-295. Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms East Africa. Field Crops Research, 112 (1), 24–36. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agro-ecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binning method for determining the boundary line model — blbin","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blbin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binning method for determining the boundary line model — blbin","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` bins = c(100,350,25)  blbin(x,y, bins=bins ,theta=c(0.5,0.02), model = \"blm\", xmax = 250) #> $Model #> [1] \"blm\" #>  #> $Equation #> [1] y = β₁ + β₂x #>  #> $Parameters #>       Estimate #> β₁ -0.72403164 #> β₂  0.01944979 #>  #> $RMS #> [1] 0.01445304 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood profile for various measurement error values — ble_profile","title":"Likelihood profile for various measurement error values — ble_profile","text":"Estimates standard deviation measurement error (sign) response variable, input cbvn() function, measured value available (Lark & Milne, 2016). sigh fixed set values turn, remaining parameters estimated conditional sigh maximum likelihood. maximized likelihoods sequence values constitutes likelihood profile. value sigh profile maximized selected.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood profile for various measurement error values — ble_profile","text":"","code":"ble_profile(vals,sigh,theta,model=\"lp\", UpLo=\"U\", optim.method=\"BFGS\",plot=FALSE, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood profile for various measurement error values — ble_profile","text":"vals dataframe two numeric columns, independent (x) dependent (y) variables respectively. sigh vector suggested standard deviations measurement error values. theta numeric vector initial starting values optimization   fitting boundary model. length arrangement depend   suggested model: \"blm\" model, vector length 7 arranged   intercept, slope, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. \"lp\" model, vector length 8 arranged   intercept, slope, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"mit\" model, vector length 8 arranged   intercept, shape parameter, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"BL_logistic\", BL_inv_logistic \"BL_logisticfm\" models,   vector length 8 arranged scaling parameter, shape parameter,   maximum plateau value, mean x, mean y,   standard deviation x, standard deviation y   correlation x y. \"BL_double_logistic\" model,vector length 11   arranged scaling parameter, shape parameter, maximum response, maximum response,   scaling parameter two, shape parameter two, mean x, mean y,   standard deviation x, standard deviation y correlation   x y. \"trapezium\" model, vector length 10 arranged   intercept one, slope one, maximum response, intercept two, slope two,   mean x, mean y, standard deviation x,   standard deviation y correlation x y. \"qd\" model, vector length 8 arranged   constant, linear coefficient, quadratic coefficient,mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"schmidt\" model, vector length 8 arranged   scaling parameter, shape parameter (x-value maximum response ),   maximum response, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"BL_logistic\" logistic model, \"BL_logisticfm\" logistic model proposed Fermont et al (2009), \"BL_inv-logistic\" inverse logistic model, \"BL_double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. UpLo Selects type boundary. \"U\" fits upper boundary \"L\" fits lower boundary. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". plot TRUE, plot part output. FALSE, plot part output (default TRUE). ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood profile for various measurement error values — ble_profile","text":"list length 2 containing suggested standard deviations   measurement error values corresponding log-likelihood values.   additionally, likelihood profile plot (log-likelihood standard   deviation measurement error) produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood profile for various measurement error values — ble_profile","text":"inbuilt models available cbvn() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"BL_logistic\") inverse logistic (\"BL_inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"BL_logisticfm\")  (Fermont et al. 2009)  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"BL_double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 + \\beta_1(1-e^{\\frac{-x}{\\beta_2}})$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . function ble_profile() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results largest likelihood can taken representation global optimum.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood profile for various measurement error values — ble_profile","text":"Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms East Africa. Field Crops Research, 112 (1), 24–36.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood profile for various measurement error values — ble_profile","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ble_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood profile for various measurement error values — ble_profile","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` vals<-data.frame(x,y) theta<-c(0.5,0.02,289.6,2.39,83.8,1.05,0.295) sigh<-c(0.08,0.1,0.11,0.13,0.15,0.2,0.3,0.4,0.5) ble_profile(vals,sigh=sigh,theta,model=\"blm\") #> Note: This function may take a few minutes to run for large datasets. #>  #> $likelihood #> [1] -5040.690 -5040.839 -5040.898 -5035.131 -5033.245 -5030.210 -5026.496 #> [8] -5022.661 -5019.944 #>  #> $Merror #> [1] 0.08 0.10 0.11 0.13 0.15 0.20 0.30 0.40 0.50 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/blm.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear model — blm","title":"Linear model — blm","text":"function fits linear model. function fits linear model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear model — blm","text":"","code":"blm(x, beta0, beta1)  blm(x, beta0, beta1)"},{"path":"https://chawezimiti.github.io/BLA/reference/blm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear model — blm","text":"x Numeric vector independent variable. beta0 Intercept parameter. beta1 Slope parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear model — blm","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear model — blm","text":"","code":"blm(2,10,5) #> [1] 20"},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundary line model determination using quantile regression — blqr","title":"Boundary line model determination using quantile regression — blqr","text":"function fits boundary model upper bounds scatter plot x y estimating conditional quantile (0-1) response variable, y, across values predictor variables, x. achieved using optimization procedure hence requires starting guess parameters proposed model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundary line model determination using quantile regression — blqr","text":"","code":"blqr(x,y,model, equation=NULL,theta,tau=0.95,optim.method=\"Nelder-Mead\",      xmin=min(bound$x),xmax=max(bound$x), plot=FALSE,line_col=\"red\",lwd=1,      line_smooth=1000,...)"},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boundary line model determination using quantile regression — blqr","text":"x numeric vector values independent variable. y numeric vector values response variable. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticfm\" logistic model proposed Fermont et al (2009), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. equation custom model function writen form R function. Applies argument model=\"\", else NULL. theta numeric vector initial starting values optimization fitting boundary model. length arrangement depend suggested model: \"blm\" model, vector length 2 arranged intercept slope. \"lp\" model, vector length 3 arranged intercept, slope maximum response. \"logistic\" \"inv-logistic\" models, vector length 3 arranged scaling parameter, shape parameter maximum response. \"logisticfm\" model proposed Fermont et al. (2009), vector length 3 arranged scaling parameter, shape parameter maximum response. \"double-logistic\" model, vector length 6 arranged scaling parameter one, shape parameter one, maximum response, maximum response, scaling parameter two shape parameter two. \"qd\" model, vector length 3 arranged constant, linear coefficient quadratic coefficient. \"trapezium\" model, vector length 3  arranged intercept one, slope one, maximum response, intercept two slope two. \"mit\" model, vector length 3 arranged intercept, shape parameter maximum response. \"schmidt\" model, vector length 3 arranged scaling parameter, shape parameter (x-value maximum response ) maximum response. tau quantile value (0- 1) represents boundary (default tau = 0.95). optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". xmin Numeric value describes minimum x value boundary line fitted (default min(x)). xmax numeric value describes maximum x value boundary line fitted (default max(x)). xmin xmax determine subset data set used fit boundary model. plot TRUE, plot part output. FALSE, plot part output (default TRUE). line_col Selects color boundary line. lwd Determines thickness boundary line plot (default 1). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. ... Additional graphical parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boundary line model determination using quantile regression — blqr","text":"list length 5 consisting fitted model, equation form, parameters   boundary line, weighted residue sum square. Additionally, graphical   representation boundary line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Boundary line model determination using quantile regression — blqr","text":"inbuilt models available blqr() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"logistic\") inverse logistic (\"inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"logisticfm\")  (Fermont et al. 2009)  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 + \\beta_1(1-e^{\\frac{-x}{\\beta_2}})$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . Custom model (\"\")  option allows create model form using function  function(). custom model assigned argument  equation. Note parameters custom model  b two parameter model; , b c  three parameter model; , b, c d  four parameter model . function blbin() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest error (weighted residue sum square) can taken representation global  optimum.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boundary line model determination using quantile regression — blqr","text":"Cade, B. S., & Noon, B. R. (2003). gentle introduction quantile regression ecologists. Frontiers Ecology Environment, 1(8), 412-420. Dhanoa, M. S., Sanderson, R., Cardenas, L. M., Shepherd, ., Chadwick, D. R., Powell, C. D., ... & France, J. (2022). Overview application Mitscherlich equation extensions estimate soil nitrogen pool fraction associated crop yield nitrous oxide emission. Advances Agronomy, 174, 269-295. Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009).Closing cassava yield gap: analysis smallholder farms East Africa. Field Crops Research, 112 (1), 24–36. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boundary line model determination using quantile regression — blqr","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/blqr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boundary line model determination using quantile regression — blqr","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)`  blqr(x,y,theta = c(0.5,0.02), model = \"blm\", tau = 0.95) #> $Model #> [1] \"blm\" #>  #> $Equation #> [1] y = β₁ + β₂x #>  #> $Parameters #>       Estimate #> β₁ 1.790477539 #> β₂ 0.008436162 #>  #> $RSS #> [1] 83.79633 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting boundary line using censored bivariate normal model — cbvn","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"function fits response model upper limits  scatter plot x y determine efficient response y function x (given measurement error y) based censored distribution (Milne et al., 2016). location censor data cloud determined based maximum likelihood approach. done using optimization procedure hence requires starting guess parameters proposed model. compares results uncensored normal bivariate distribution access appropriateness censored model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"","code":"cbvn(vals,model=\"lp\",theta, sigh, UpLo=\"U\", optim.method=\"BFGS\",Hessian=FALSE,      plot=FALSE, line_smooth=100, lwd=2, l_col=\"red\",...)"},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"vals dataframe two numeric columns, independent (x) dependent (y) variables respectively. model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"BL_logistic\" logistic model, \"BL_logisticfm\" logistic model proposed Fermont et al (2009), \"BL_inv-logistic\" inverse logistic model, \"BL_double-logistic\" double logistic model, \"qd\" quadratic model \"trapezium\" trapezium model. theta numeric vector initial starting values optimization   fitting boundary model. length arrangement depend   suggested model: \"blm\" model, vector length 7 arranged   intercept, slope, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. \"lp\" model, vector length 8 arranged   intercept, slope, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"mit\" model, vector length 8 arranged   intercept, shape parameter, maximum plateau response, mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"BL_logistic\", BL_inv_logistic \"BL_logisticfm\" models,   vector length 8 arranged scaling parameter, shape parameter,   maximum plateau value, mean x, mean y,   standard deviation x, standard deviation y   correlation x y. \"BL_double_logistic\" model,vector length 11   arranged scaling parameter, shape parameter, maximum response, maximum response,   scaling parameter two, shape parameter two, mean x, mean y,   standard deviation x, standard deviation y correlation   x y. \"trapezium\" model, vector length 10 arranged   intercept one, slope one, maximum response, intercept two, slope two,   mean x, mean y, standard deviation x,   standard deviation y correlation x y. \"qd\" model, vector length 8 arranged   constant, linear coefficient, quadratic coefficient,mean x,   mean y, standard deviation x, standard deviation y   correlation x y. \"schmidt\" model, vector length 8 arranged   scaling parameter, shape parameter (x-value maximum response ),   maximum response, mean x, mean y, standard deviation   x, standard deviation y correlation x   y. sigh Standard deviation measurement error. UpLo Selects type boundary. \"U\" fits upper boundary \"L\" fits lower boundary. optim.method Describes method used optimize model optim() function. methods include \"Nelder-Mead\", \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\" \"Brent\". Hessian True, hessian matrix part output (default FALSE`). plot TRUE, plot part output. FALSE, plot part output (default TRUE). line_smooth Parameter describes smoothness boundary line. (default 1000). higher value, smoother line. lwd Determines thickness boundary line plot (default 1). l_col Selects color boundary line. ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"list length 5 consisting fitted model, equation form,   parameters boundary line, AIC (boundary line model null model)   hessian matrix.  Additionally, graphical representation boundary   line scatter plot produced.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"inbuilt models available cbvn() function. suggest model forms follows: Linear model (\"blm\")  $$y=\\beta_1 + \\beta_2x$$  \\(\\beta_1\\) intercept \\(\\beta_2\\) slope. Linear plateau model (\"lp\")  $$y= {\\rm min}(\\beta_1+\\beta_2x, \\beta_0)$$  \\(\\beta_1\\) intercept , \\(\\beta_2\\) slope  \\(\\beta_0\\)  maximum response. logistic (\"BL_logistic\") inverse logistic (\"BL_inv-logistic\")  models  $$ y= \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  $$ y= \\beta_0 - \\frac{\\beta_0}{1+e^{\\beta_2(\\beta_1-x)}}$$  \\(\\beta_1\\) scaling parameter , \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Logistic model (\"BL_logisticfm\")  (Fermont et al. 2009)  $$ y= \\frac{\\beta_0}{1+(\\beta_1 \\times e^{-\\beta_2x})}$$   \\(\\beta_1\\) scaling parameter, \\(\\beta_2\\) shape   parameter \\(\\beta_0\\) maximum response. Double logistic model (\"BL_double-logistic\")  $$ y= \\frac{\\beta_{0,1}}{1+e^{\\beta_2(\\beta_1-x)}} -  \\frac{\\beta_{0,2}}{1+e^{\\beta_4(\\beta_3-x)}}$$  \\(\\beta_1\\) scaling parameter one, \\(\\beta_2\\) shape parameter one,  \\(\\beta_{0,1}\\) \\(\\beta_{0,2}\\) maximum response ,  \\(\\beta_3\\) scaling parameter two  \\(\\beta_4\\) shape parameter two. Quadratic model (\"qd\")  $$y=\\beta_1 + \\beta_2x + \\beta_3x^2$$  \\(\\beta_1\\) constant, \\(\\beta_2\\) linear coefficient   \\(\\beta_3\\) quadratic coefficient. Trapezium model (\"trapezium\")  $$y={\\rm min}(\\beta_1+\\beta_2x, \\beta_0, \\beta_3 + \\beta_4x)$$   \\(\\beta_1\\) intercept one, \\(\\beta_2\\) slope one,  \\(\\beta_0\\) maximum response, \\(\\beta_3\\) intercept two  \\(\\beta_3\\) slope two. Mitscherlich model (\"mit\")  $$y= \\beta_0 + \\beta_1(1-e^{\\frac{-x}{\\beta_2}})$$  \\(\\beta_1\\) intercept, \\(\\beta_2\\) shape parameter  \\(\\beta_0\\) maximum response. Schmidt model (\"schmidt\")  $$y= \\beta_0 + \\beta_1(x-\\beta_2)^2$$  \\(\\beta_1\\) ascaling parameter, \\(\\beta_2\\)  shape parameter (x-value maximum response ) \\(\\beta_0\\)  maximum response . function cbvn() utilities optimization procedure optim() function determine model parameters. tendency optimization algorithms settle local optimum. remove risk settling local optimum parameters, advised function run using several starting values results smallest likelihood (AIC) can taken representation global optimum.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"Dhanoa, M. S., Sanderson, R., Cardenas, L. M., Shepherd, ., Chadwick, D. R., Powell, C. D., ... & France, J. (2022). Overview application Mitscherlich equation extensions estimate soil nitrogen pool fraction associated crop yield nitrous oxide emission. Advances Agronomy, 174, 269-295. Fermont, . M., Van Asten, P. J., Tittonell, P., Van Wijk, M. T., & Giller, K. E. (2009). Closing cassava yield gap: analysis smallholder farms East Africa. Field Crops Research, 112 (1), 24–36. Lark, R. M., & Milne, . E. (2016). Boundary line analysis effect water filled pore space nitrous oxide emission cores arable soil. European Journal Soil Science, 67 , 148-159. Lark, R. M., Gillingham, V., Langton, D., & Marchant, B. P. (2020). Boundary line models soil nutrient concentrations wheat yield national-scale datasets. European Journal Soil Science, 71 , 334-351. Milne, . E., Ferguson, R. B., & Lark, R. M. (2006). Estimating boundary line model biological response maximum likelihood.Annals Applied Biology, 149, 223–234. Schmidt, U., Thöni, H., & Kaupenjohann, M. (2000). Using boundary line approach analyze N2O flux data agricultural soils. Nutrient Cycling Agroecosystems, 57, 119-129.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"Chawezi Miti chawezi.miti@nottingham.ac.uk Richard Murray Lark murray.lark@nottingham.ac.uk","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/cbvn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting boundary line using censored bivariate normal model — cbvn","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` vals<-data.frame(x,y) guess<-c(0.5,0.02,mean(x),mean(y),sd(x),sd(y),cor(x,y))  cbvn(vals,theta = guess, sigh = 0.4,model= \"blm\") #> Note: This function may take a few minutes to run for large datasets. #>  #> $Model #> [1] \"blm\" #>  #> $Equation #> [1] y = β₁ + β₂x #>  #> $Parameters #>           Estimate Standard error #> β₁     -2.63677433    0.320352441 #> β₂      0.02894669    0.001941884 #> mux   289.61691682    3.182171197 #> muy     2.45434262    0.042614465 #> sdx    83.64934874    2.250455692 #> sdy     1.00286969    0.032251599 #> rcorr   0.23680290    0.045360164 #>  #> $AIC #>              #> mvn 10092.78 #> BL  10061.36 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb.html","id":null,"dir":"Reference","previous_headings":"","what":"Coffcturb — coffcturb","title":"Coffcturb — coffcturb","text":"function determines coffcturb parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coffcturb — coffcturb","text":"","code":"coffcturb(x, mu, sig, a, c, sigh)"},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coffcturb — coffcturb","text":"x Numeric vector independent variable. mu Mean x. sig Fitting parameter. Fitting parameter. c Fitting parameter. sigh Measurement error.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coffcturb — coffcturb","text":"Parameters input coffcturb function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb3.html","id":null,"dir":"Reference","previous_headings":"","what":"Coffcturb — coffcturb3","title":"Coffcturb — coffcturb3","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coffcturb — coffcturb3","text":"","code":"coffcturb3(x, mu, sig, a, c, sigh)"},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coffcturb — coffcturb3","text":"x Numeric vector independent variable. mu Mean x. sig Fitting parameter. Fitting parameter. c Fitting parameter. sigh Measurement error.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coffcturb — coffcturb3","text":"Parameters coffcturb.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb4.html","id":null,"dir":"Reference","previous_headings":"","what":"Coffcturb — coffcturb4","title":"Coffcturb — coffcturb4","text":"function determines parameters  coffcturb function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coffcturb — coffcturb4","text":"","code":"coffcturb4(x, mu, sig, a, c, sigh)"},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coffcturb — coffcturb4","text":"x Numeric vector independent variable. mu Mean x. sig Fitting parameter. Fitting parameter. c Fitting parameter. sigh Measurement error.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/coffcturb4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coffcturb — coffcturb4","text":"Parameters coffcturb.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw the boundary line — drawBL","title":"Draw the boundary line — drawBL","text":"function draws boundary line plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw the boundary line — drawBL","text":"","code":"drawBL(x, beta0, beta1, beta2, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw the boundary line — drawBL","text":"x Numeric vector independent variable. beta0 Model parameter. beta1 Model parameter. beta2 Model parameter. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw the boundary line — drawBL","text":"Draws model plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL2.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws boundary line — drawBL2","title":"Draws boundary line — drawBL2","text":"function draws boundary line plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws boundary line — drawBL2","text":"","code":"drawBL2(x, beta0, beta1, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws boundary line — drawBL2","text":"x Numeric vector independent variable. beta0 Intercept parameter. beta1 Slope parameter. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws boundary line — drawBL2","text":"Draws model line plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL3.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw trapezium model — drawBL3","title":"Draw trapezium model — drawBL3","text":"function draws trapezium model plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw trapezium model — drawBL3","text":"","code":"drawBL3(x, beta0, beta1, beta2, beta3, beta4, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw trapezium model — drawBL3","text":"x Numeric vector independent variable. beta0 Model parameter. beta1 Model parameter. beta2 Model parameter. beta3 Model parameter. beta4 Model parameter. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw trapezium model — drawBL3","text":"Draws model plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL4.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw double logistic model — drawBL4","title":"Draw double logistic model — drawBL4","text":"function draws double logistic boundary line plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw double logistic model — drawBL4","text":"","code":"drawBL4(x, beta01, beta02, beta1, beta2, beta3, beta4, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw double logistic model — drawBL4","text":"x Numeric vector independent variable. beta01 Model parameter. beta02 Model parameter. beta1 Model parameter. beta2 Model parameter. beta3 Model parameter. beta4 Model parameter. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/drawBL4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw double logistic model — drawBL4","text":"Draws model plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":null,"dir":"Reference","previous_headings":"","what":"Evapotranspiration data — evapotranspiration","title":"Evapotranspiration data — evapotranspiration","text":"dataset compiled Sadras & Angus (2006) comprises measures wheat yield estimated evapotranspiration (ET) sites China, Mediterranean regions Europe, North America, Australia. details dataset refer Sadras & Angus (2006).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evapotranspiration data — evapotranspiration","text":"","code":"evapotranspiration"},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evapotranspiration data — evapotranspiration","text":"data.frame 691 rows 3 columns: Region Location measurement ET (mm) Evapotranspiration measurement(mm) measured Yield (t/ha) Wheat yield (ton/ha) measured","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Evapotranspiration data — evapotranspiration","text":"Sadras, V. O., & Angus, J. F. (2006). Benchmarking water-use efficiency rainfed wheat dry environments. Australian Journal Agricultural Research, 57 , 847-856.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evapotranspiration data — evapotranspiration","text":"data set used illustration purposes package used form publication without permission owners.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/evapotranspiration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evapotranspiration data — evapotranspiration","text":"","code":"data(evapotranspiration)"},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing evidence of boundary existence in dataset — expl_boundary","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"function determines probability bounding effects scatter plot x y based clustering points upper edge scatter plot (Miti et al.2024). tests hypothesis larger clustering upper bounds scatter plot null bivariate normal distribution bounding effect (random scatter upper edges). returns probability (p-value) observed clustering given realization unbounded bivariate normal distribution.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"","code":"expl_boundary(x, y, shells = 10, simulations = 1000, plot = FALSE, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"x numeric vector values independent variable. y numeric vector values response variable. shells numeric value indicating number boundary peels (default 10). simulations number simulations null bivariate normally distributed data sets used test hypothesis (default 1000). plot TRUE, plot part output. FALSE, plot part output (default FALSE). ... Additional graphical parameters par() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"dataframe p-values obtaining observed standard deviation   euclidean distances vertices upper peels center   dataset left right sections dataset.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"recommended outlying observations, identified bagplot() function aplpack package removed data. also implemented simulation step expl_boundary() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"Eddy, W. F. (1982). Convex hull peeling, COMPSTAT 1982-Part : Proceedings Computational Statistics, 42-47. Physica-Verlag, Vienna. Miti. c., Milne. . E., Giller. K. E. Lark. R. M (2024). Exploration data analysis using boundary line methodology. Computers Electronics Agriculture 219 (2024) 108794.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/expl_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing evidence of boundary existence in dataset — expl_boundary","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` expl_boundary(x,y,10,1000) #> Note: This function may take a few minutes to run for large datasets. #>  #>     Index Section    value #> 1      sd    Left 52.26857 #> 2      sd   Right 83.15138 #> 3 Mean sd    Left 64.45119 #> 4 Mean sd   Right 57.99177 #> 5 p_value    Left  0.01100 #> 6 p_value   Right  1.00000"},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values for flat model — jdens_maxyield","title":"Joint density of observed values for flat model — jdens_maxyield","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values for flat model — jdens_maxyield","text":"","code":"jdens_maxyield(X, ymax, sigh, mux, muy, sdx, sdy, rcorr)"},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values for flat model — jdens_maxyield","text":"X Numeric vector independent variable. ymax Maximum response value sigh Measurement error. mux Mean x muy Mean y sdx Standard deviation x sdy Standard deviation y rcorr Correlation x y","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values for flat model — jdens_maxyield","text":"Joint density observed values x y","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield3.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values — jdens_maxyield3","title":"Joint density of observed values — jdens_maxyield3","text":"function determines joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values — jdens_maxyield3","text":"","code":"jdens_maxyield3(X, ymax, sigh, mux, muy, sdx, sdy, rcorr)"},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values — jdens_maxyield3","text":"X Numeric vector independent variable. ymax Maximum response. sigh Measurement error. mux Mean x. muy Mean y. sdx Standard deviation x. sdy Standard deviation y. rcorr Correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values — jdens_maxyield3","text":"Joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield4.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values — jdens_maxyield4","title":"Joint density of observed values — jdens_maxyield4","text":"function determines joint density observed values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values — jdens_maxyield4","text":"","code":"jdens_maxyield4(X, ymax, sigh, mux, muy, sdx, sdy, rcorr)"},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values — jdens_maxyield4","text":"X Numeric vector independent variable. ymax maximum response. sigh Measurement error. mux mean x. muy mean y. sdx standard deviation x. sdy standard deviation y. rcorr correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdens_maxyield4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values — jdens_maxyield4","text":"Joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values — jdensup","title":"Joint density of observed values — jdensup","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values — jdensup","text":"","code":"jdensup(X, BLMod, beta0, beta1, beta2, sigh, mux, muy, sdx, sdy, rcorr)"},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values — jdensup","text":"X Numeric vector containing x y values. BLMod Determines boundary line model fitted. beta0 Model parameter. beta1 Model parameter. beta2 Model parameter. sigh Measurement error. mux Mean x. muy Mean y. sdx Standard deviation x. sdy Standard deviation y. rcorr Correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values — jdensup","text":"Parameters jdensup.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup2.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed — jdensup2","title":"Joint density of observed — jdensup2","text":"function determines joint density observed values x y given beta0,beta1,beta2 boundary line parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed — jdensup2","text":"","code":"jdensup2(X, BLMod, beta0, beta1, sigh, mux, muy, sdx, sdy, rcorr)"},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed — jdensup2","text":"X Numeric vector independent variable. BLMod Determines boundary line model fitted. beta0 Model parameter. beta1 Model parameter. sigh Measurement error. mux Mean x. muy Mean y. sdx Standard deviation x. sdy Standard deviation y. rcorr Correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed — jdensup2","text":"Joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup3.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values — jdensup3","title":"Joint density of observed values — jdensup3","text":"function determines joint density observed values x y given beta0,beta1,beta2 bl","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values — jdensup3","text":"","code":"jdensup3(   X,   BLMod,   beta0,   beta1,   beta2,   beta3,   beta4,   sigh,   mux,   muy,   sdx,   sdy,   rcorr )"},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values — jdensup3","text":"X Numeric vector independent variable. BLMod Determines boundary line model fitted. beta0 Model parameter. beta1 Model parameter. beta2 Model parameter. beta3 Model parameter. beta4 Model parameter. sigh Measurement error. mux Mean x. muy Mean y. sdx Standard deviation x. sdy Standard deviation y. rcorr Correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values — jdensup3","text":"Joint density observed values x y .","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup4.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint density of observed values — jdensup4","title":"Joint density of observed values — jdensup4","text":"function determines joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint density of observed values — jdensup4","text":"","code":"jdensup4(   X,   BLMod,   beta01,   beta02,   beta1,   beta2,   beta3,   beta4,   sigh,   mux,   muy,   sdx,   sdy,   rcorr )"},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint density of observed values — jdensup4","text":"X Numeric vector independent variable. BLMod Determines boundary line model fitted. beta01 Model parameter. beta02 Model parameter. beta1 Model parameter. beta2 Model parameter. beta3 Model parameter. beta4 Model parameter. sigh Measurement error. mux Mean x. muy Mean y. sdx Standard deviation x. sdy Standard deviation y. rcorr Correlation x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/jdensup4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint density of observed values — jdensup4","text":"Joint density observed values x y.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":null,"dir":"Reference","previous_headings":"","what":"kurtosis — kurt","title":"kurtosis — kurt","text":"function calculate estimate coefficient kurtosis set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kurtosis — kurt","text":"","code":"kurt(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kurtosis — kurt","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kurtosis — kurt","text":"reduced coefficient kurtosis.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"kurtosis — kurt","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/kurt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"kurtosis — kurt","text":"","code":"x<-evapotranspiration$`ET(mm)` kurt(x) #> [1] 0.2089355"},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Determination of the most limiting factor to biological response — limfactor","title":"Determination of the most limiting factor to biological response — limfactor","text":"function determines limiting factor based von Liebig law minimum given results predicted boundary line values different factors interest. Boundary lines various factors fitted factor predicts minimum response particular point considered limiting factor (Casanova et al. 1995).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determination of the most limiting factor to biological response — limfactor","text":"","code":"limfactor(...)"},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determination of the most limiting factor to biological response — limfactor","text":"... vectors predicted values boundary line models factor evaluated.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determination of the most limiting factor to biological response — limfactor","text":"dataframe consisting limiting factor minimum   predicted response","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determination of the most limiting factor to biological response — limfactor","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/limfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determination of the most limiting factor to biological response — limfactor","text":"","code":"N<-rnorm(10,50,5) #assuming these are predicted responses using the fitted BL for N,P,K K<-rnorm(10,50,4) P<-rnorm(10,50,6)  limfactor(N,K,P) #> [[1]] #>          Rs Lim_factor #> 1  44.51065          N #> 2  44.58357          P #> 3  40.97562          P #> 4  36.15900          P #> 5  45.35519          P #> 6  47.36602          K #> 7  43.22327          K #> 8  45.07431          K #> 9  55.01983          K #> 10 43.35657          P #>  #> [[2]] #> [1] 63.16171 #>"},{"path":"https://chawezimiti.github.io/BLA/reference/lp.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear plateau model — lp","title":"Linear plateau model — lp","text":"function fits linear plateau model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/lp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear plateau model — lp","text":"","code":"lp(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/lp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear plateau model — lp","text":"x Numeric vector independent variable. beta0 Plateau parameter. beta1 Slope parameter. beta2 Intercept parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/lp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear plateau model — lp","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/lp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear plateau model — lp","text":"","code":"lp(2, 20, 5, 2) #> [1] 9"},{"path":"https://chawezimiti.github.io/BLA/reference/mit.html","id":null,"dir":"Reference","previous_headings":"","what":"Mitscherlich function — mit","title":"Mitscherlich function — mit","text":"function fits mitscherlich model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/mit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mitscherlich function — mit","text":"","code":"mit(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/mit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mitscherlich function — mit","text":"x Numeric vector independent variable. beta0 Scaling parameter. beta1 Model parameter maximum response. beta2 Shape parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/mit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mitscherlich function — mit","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/mit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mitscherlich function — mit","text":"","code":"mit(2, 20,1,5) #> [1] 7.593599"},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove NA values — na.drop","title":"Remove NA values — na.drop","text":"Removes missing values dataset.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove NA values — na.drop","text":"","code":"na.drop(xin)"},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove NA values — na.drop","text":"xin numeric vector.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove NA values — na.drop","text":"vector without missing values","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove NA values — na.drop","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/na.drop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove NA values — na.drop","text":"","code":"x<-evapotranspiration$`ET(mm)` na.drop(x) #>   [1] 390.000 445.000 471.000 414.000 376.000 414.000 431.000 401.000 267.000 #>  [10] 213.000 220.000 361.000 399.000 401.000 401.000 364.474 391.176 384.536 #>  [19] 409.524 164.773 177.698 207.937 158.156 400.952 389.744 404.040 416.667 #>  [28] 220.339 201.408 195.683 254.783 398.000 281.000 271.000 408.000 404.000 #>  [37] 256.000 277.000 430.000 422.000 278.000 276.000 432.000 402.000 284.000 #>  [46] 281.000 415.000 396.000 256.000 292.000 411.000 424.000 291.000 289.000 #>  [55] 401.000 424.000 266.000 275.000 285.000 309.000 309.000 328.000 278.000 #>  [64] 296.000 291.000 292.000 246.000 269.000 291.000 284.000 215.000 191.000 #>  [73] 255.000 207.000 216.000 183.000 167.000 220.000 180.000 189.000 336.000 #>  [82] 357.000 246.000 256.000 253.571 175.472 181.046 361.053 374.194 329.412 #>  [91] 328.261 270.833 230.435 215.152 227.027 186.567 218.947 139.474 166.071 #> [100] 301.000 306.000 309.000 309.000 311.000 306.000 312.000 310.000 358.000 #> [109] 354.000 352.000 365.000 359.000 357.000 366.000 362.000 437.000 438.000 #> [118] 444.000 461.000 387.000 392.000 391.000 385.000 333.000 336.000 333.000 #> [127] 331.000 335.000 327.000 329.000 330.000 317.000 316.000 160.000 155.000 #> [136] 202.500 230.000 370.000 335.000 290.000 301.667 186.667 185.714 343.333 #> [145] 310.000 216.667 197.500 205.000 166.667 210.000 235.000 292.500 288.182 #> [154] 120.000 123.750 186.667 191.667 356.250 320.000 331.000 352.222 190.833 #> [163] 191.000 330.769 326.875 229.167 235.833 158.333 142.857 177.500 174.286 #> [172] 275.714 266.000 341.000 334.000 339.000 344.000 331.000 335.000 347.000 #> [181] 340.000 342.000 339.000 320.000 396.000 380.000 295.000 304.000 296.000 #> [190] 312.000 269.000 275.000 282.000 291.000 263.000 269.000 243.000 266.000 #> [199] 315.000 369.000 329.000 310.000 300.000 343.000 289.000 331.000 340.000 #> [208] 366.000 536.000 521.000 549.000 522.000 524.000 381.000 407.000 375.000 #> [217] 381.000 393.000 351.000 376.000 380.000 377.000 367.000 450.000 408.000 #> [226] 400.000 361.000 368.000 159.000 153.000 164.000 159.000 197.000 355.000 #> [235] 258.000 458.000 365.000 309.000 282.000 412.000 317.000 199.000 363.000 #> [244] 307.000 490.000 363.000 293.000 242.000 462.000 356.000 234.000 398.000 #> [253] 246.000 552.000 439.000 298.000 406.000 520.000 370.000 226.000 402.000 #> [262] 200.000 543.000 350.000 322.000 442.000 531.000 382.000 241.000 393.000 #> [271] 301.000 517.000 410.000 315.000 373.000 525.000 372.000 202.000 424.000 #> [280] 297.000 581.000 391.000 317.000 376.000 540.000 375.000 284.555 300.987 #> [289] 330.713 327.894 333.844 222.862 282.015 274.311 286.415 287.660 281.432 #> [298] 287.782 299.212 329.946 250.952 348.488 280.924 375.412 263.398 416.052 #> [307] 355.854 409.956 289.814 429.768 422.656 352.044 220.218 297.434 294.386 #> [316] 310.184 315.347 299.287 287.341 286.738 302.249 251.229 256.532 254.000 #> [325] 391.537 398.684 381.984 203.000 244.000 180.000 226.000 268.000 325.000 #> [334] 348.000 278.000 189.000 327.000 304.000 352.000 388.000 375.000 470.000 #> [343] 465.000 377.000 229.000 456.000 441.000 503.000 489.000 356.000 415.000 #> [352] 387.000 402.000 418.000 247.000 348.000 151.000 395.000 283.000 152.000 #> [361] 220.000 306.000 313.000 395.000 220.000 289.000 370.000 326.000 400.000 #> [370] 334.000 314.000 245.000 435.000 422.000 396.000 340.000 357.000 444.000 #> [379] 295.000 210.000 255.546 139.074 135.703 231.986 218.847 252.373 144.678 #> [388] 179.462 260.487 249.330 266.355 302.245 235.533 331.809 311.892 243.874 #> [397] 207.195 291.135 188.440 369.658 209.551 246.302 184.232 218.055 251.548 #> [406] 242.430 250.274 234.004 239.055 194.031 239.684 312.950 270.302 201.173 #> [415] 279.160 240.735 171.065 108.619 174.062 222.062 129.827 132.095 228.401 #> [424] 192.752 287.973 323.353 249.968 209.027 253.921 127.445 162.437 225.087 #> [433] 180.170 216.250 192.310 195.660 223.380 239.620 184.810 176.100 263.650 #> [442] 213.970 226.990 195.700 270.420 226.760 190.390 219.900 211.390 185.720 #> [451] 137.150 181.190 243.310 334.000 414.000 429.000 408.000 362.000 351.000 #> [460] 435.000 411.000 388.000 375.000 247.000 371.000 379.000 346.000 341.000 #> [469] 338.000 352.000 386.000 391.000 328.000 260.000 277.000 289.000 276.000 #> [478] 285.000 277.000 317.000 305.000 293.000 313.000 173.000 215.000 200.000 #> [487] 188.000 195.000 213.000 262.000 242.000 240.000 255.000 206.000 203.000 #> [496] 185.000 323.000 303.000 296.000 256.000 260.000 233.000 242.000 237.000 #> [505] 213.000 250.000 243.000 238.000 230.000 236.000 211.000 203.000 196.000 #> [514] 178.000 281.000 310.000 293.000 269.000 292.000 255.000 155.000 146.000 #> [523] 139.000 215.000 246.000 234.000 242.000 244.000 227.000 186.000 175.000 #> [532] 150.000 116.000 141.000 133.000 144.000 151.000 114.000 214.000 223.000 #> [541] 204.000 251.704 276.871 263.581 269.122 254.939 255.216 247.045 264.751 #> [550] 269.607 258.962 281.270 273.266 285.943 304.888 293.307 311.579 343.679 #> [559] 306.502 371.925 281.540 300.810 290.752 282.554 292.992 288.525 320.944 #> [568] 294.759 304.555 304.164 266.594 214.733 263.937 201.344 226.040 212.946 #> [577] 228.264 218.788 218.624 223.794 280.543 247.713 236.518 252.197 233.474 #> [586] 229.303 236.408 223.029 216.316 212.128 204.174 271.708 266.631 235.606 #> [595] 260.873 264.824 287.354 250.231 245.947 228.925 249.135 185.796 204.835 #> [604] 250.559 153.828 205.466 206.334 262.445 277.125 251.011 202.923 257.721 #> [613] 265.293 271.716 289.048 233.607 273.375 274.652 240.594 260.686 256.744 #> [622] 240.809 266.741 305.258 344.806 290.345 229.636 256.956 302.059 290.987 #> [631] 288.744 282.924 302.636 305.991 273.153 296.106 283.742 261.681 280.221 #> [640] 263.021 258.874 223.715 216.162 240.173 247.799 218.428 289.700 182.858 #> [649] 223.954 217.229 221.884 221.026 228.449 221.239 214.563 223.777 233.059 #> [658] 199.591 211.544 226.430 278.293 307.093 245.713 335.316 300.940 295.141 #> [667] 312.140 281.378 333.161 300.953 293.922 287.051 256.611 297.950 232.798 #> [676] 283.209 284.446 260.076 243.530 263.293 264.057 232.768 257.969 278.486 #> [685] 301.220 303.518 251.300 258.123 220.688 225.965 269.746"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function — nll_mef","title":"Internal function — nll_mef","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function — nll_mef","text":"","code":"nll_mef(pars, uplo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function — nll_mef","text":"pars Object  jdensup function. uplo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function — nll_mef","text":"nll 3-parameter BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef2.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions — nll_mef2","title":"Internal functions — nll_mef2","text":"function produces nll 3-parameter BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions — nll_mef2","text":"","code":"nll_mef2(pars, uplo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions — nll_mef2","text":"pars Object  jdensup function. uplo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal functions — nll_mef2","text":"nll 2-parameter BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef3.html","id":null,"dir":"Reference","previous_headings":"","what":"The nll for 5-parameter BL model — nll_mef3","title":"The nll for 5-parameter BL model — nll_mef3","text":"function determines nll 5-parameter BL models.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The nll for 5-parameter BL model — nll_mef3","text":"","code":"nll_mef3(pars, uplo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The nll for 5-parameter BL model — nll_mef3","text":"pars Object  jdensup function. uplo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The nll for 5-parameter BL model — nll_mef3","text":"Parameters nll model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef4.html","id":null,"dir":"Reference","previous_headings":"","what":"The nll for 6-parameter BL model — nll_mef4","title":"The nll for 6-parameter BL model — nll_mef4","text":"function determines nll 6-parameter BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The nll for 6-parameter BL model — nll_mef4","text":"","code":"nll_mef4(pars, uplo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The nll for 6-parameter BL model — nll_mef4","text":"pars Object  jdensup function. uplo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The nll for 6-parameter BL model — nll_mef4","text":"Parameters nll_mef.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat upper BL model — nll_mef_maxyield","title":"Flat upper BL model — nll_mef_maxyield","text":"function fits simple flat upper BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat upper BL model — nll_mef_maxyield","text":"","code":"nll_mef_maxyield(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat upper BL model — nll_mef_maxyield","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flat upper BL model — nll_mef_maxyield","text":"Parameters max response model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield3.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat upper BL model — nll_mef_maxyield3","title":"Flat upper BL model — nll_mef_maxyield3","text":"function determines null model simple flat upper BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat upper BL model — nll_mef_maxyield3","text":"","code":"nll_mef_maxyield3(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat upper BL model — nll_mef_maxyield3","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flat upper BL model — nll_mef_maxyield3","text":"Parameters max response model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield4.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat upper BL model — nll_mef_maxyield4","title":"Flat upper BL model — nll_mef_maxyield4","text":"function returns nll simple flat upper BL model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat upper BL model — nll_mef_maxyield4","text":"","code":"nll_mef_maxyield4(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat upper BL model — nll_mef_maxyield4","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nll_mef_maxyield4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flat upper BL model — nll_mef_maxyield4","text":"Parameters max response model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate normal — nllmvn","title":"Multivariate normal — nllmvn","text":"function fits multivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate normal — nllmvn","text":"","code":"nllmvn(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate normal — nllmvn","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate normal — nllmvn","text":"Parameters null model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn3.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate normal model — nllmvn3","title":"Multivariate normal model — nllmvn3","text":"function determines parameters multivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate normal model — nllmvn3","text":"","code":"nllmvn3(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate normal model — nllmvn3","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate normal model — nllmvn3","text":"Parameters null multivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn4.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate normal model — nllmvn4","title":"Multivariate normal model — nllmvn4","text":"function determines parameters bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate normal model — nllmvn4","text":"","code":"nllmvn4(pars)"},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate normal model — nllmvn4","text":"pars Object  jdensup function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/nllmvn4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate normal model — nllmvn4","text":"Parameters null model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":null,"dir":"Reference","previous_headings":"","what":"Octile Skewness — ocskew","title":"Octile Skewness — ocskew","text":"function calculate estimate octile skewness set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Octile Skewness — ocskew","text":"","code":"ocskew(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Octile Skewness — ocskew","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Octile Skewness — ocskew","text":"octile skewness.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Octile Skewness — ocskew","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/ocskew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Octile Skewness — ocskew","text":"","code":"x<-evapotranspiration$`ET(mm)` ocskew(x) #>     87.5%  #> 0.1520965"},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef.html","id":null,"dir":"Reference","previous_headings":"","what":"Rough partial derivative — par_nll_mef","title":"Rough partial derivative — par_nll_mef","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rough partial derivative — par_nll_mef","text":"","code":"par_nll_mef(x, UpLo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rough partial derivative — par_nll_mef","text":"x Numeric vector. UpLo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rough partial derivative — par_nll_mef","text":"Rough partial derivative x nll.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef2.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial derivative — par_nll_mef2","title":"Partial derivative — par_nll_mef2","text":"function determines rough partial derivative x.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial derivative — par_nll_mef2","text":"","code":"par_nll_mef2(x, UpLo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial derivative — par_nll_mef2","text":"x Numeric vector independent variable. UpLo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial derivative — par_nll_mef2","text":"Parameters par_nll_mef2","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef3.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial derivative — par_nll_mef3","title":"Partial derivative — par_nll_mef3","text":"function determines rough partial derivative x nll.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial derivative — par_nll_mef3","text":"","code":"par_nll_mef3(x, UpLo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial derivative — par_nll_mef3","text":"x Numeric vector independent variable. UpLo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial derivative — par_nll_mef3","text":"Rough partial derivative x nll.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef4.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial derivative — par_nll_mef4","title":"Partial derivative — par_nll_mef4","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial derivative — par_nll_mef4","text":"","code":"par_nll_mef4(x, UpLo, BLMod)"},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial derivative — par_nll_mef4","text":"x Numeric vector independent variable. UpLo Determines whether upper lower boundary. BLMod Determines boundary line model fitted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/par_nll_mef4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial derivative — par_nll_mef4","text":"Rough partial derivative x.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict boundary response — predictBL","title":"Predict boundary response — predictBL","text":"function predicts efficient response level factor, x, given parameters fitted boundary line.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict boundary response — predictBL","text":"","code":"predictBL(object, x)"},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict boundary response — predictBL","text":"object output form list boundary line fitting using blqr(), blbin(), BOLIDES() cbvn() functions. x numeric vector values factor response predicted.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict boundary response — predictBL","text":"vector predicted value response.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict boundary response — predictBL","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/predictBL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict boundary response — predictBL","text":"","code":"x<-evapotranspiration$`ET(mm)` y<-evapotranspiration$`yield(t/ha)` z<-BOLIDES(x,y, theta = c(0.5,0.02), model= \"blm\", xmax = 350)  predictBL(z,x) #>   [1]  8.392391  9.833827 10.515234  9.021382  8.025480  9.021382  9.466916 #>   [8]  8.680679  5.168816  3.753588  3.937044  7.632362  8.628263  8.680679 #>  [15]  8.680679  7.723408  8.423212  8.249191  8.904075  2.489659  2.828396 #>  [22]  3.620898  2.316241  8.679421  8.385682  8.760351  9.091278  3.945928 #>  [29]  3.449786  3.299746  4.848634  8.602055  5.535727  5.273648  8.864134 #>  [36]  8.759302  4.880529  5.430896  9.440709  9.231045  5.457104  5.404688 #>  [43]  9.493124  8.706887  5.614351  5.535727  9.047590  8.549639  4.880529 #>  [50]  5.824015  8.942758  9.283461  5.797807  5.745391  8.680679  9.283461 #>  [57]  5.142608  5.378480  5.640559  6.269549  6.269549  6.767500  5.457104 #>  [64]  5.928846  5.797807  5.824015  4.618450  5.221232  5.797807  5.614351 #>  [71]  3.806004  3.177014  4.854321  3.596341  3.832212  2.967350  2.548024 #>  [78]  3.937044  2.888727  3.124598  6.977163  7.527530  4.618450  4.880529 #>  [85]  4.816870  2.770057  2.916140  7.633751  7.978149  6.804506  6.774340 #>  [92]  5.269271  4.210523  3.809988  4.121207  3.060834  3.909447  1.826624 #>  [99]  2.523676  6.059886  6.190926  6.269549  6.269549  6.321965  6.190926 #> [106]  6.348173  6.295757  7.553738  7.448906  7.396490  7.737193  7.579946 #> [113]  7.527530  7.763401  7.658569  9.624164  9.650372  9.807620 10.253154 #> [120]  8.313768  8.444807  8.418599  8.261352  6.898540  6.977163  6.898540 #> [127]  6.846124  6.950955  6.741292  6.793708  6.819916  6.479213  6.453005 #> [134]  2.364568  2.233528  3.478405  4.199123  7.868233  6.950955  5.771599 #> [141]  6.077367  3.063455  3.038479  7.169346  6.295757  3.849693  3.347365 #> [148]  3.543925  2.539296  3.674964  4.330163  5.837119  5.723953  1.316251 #> [155]  1.414531  3.063455  3.194495  7.507874  6.557837  6.846124  7.402308 #> [162]  3.172637  3.177014  6.840070  6.738016  4.177292  4.351994  2.320879 #> [169]  1.915286  2.823207  2.738975  5.397192  5.142608  7.108203  6.924748 #> [176]  7.055787  7.186827  6.846124  6.950955  7.265451  7.081995  7.134411 #> [183]  7.055787  6.557837  8.549639  8.130312  5.902638  6.138510  5.928846 #> [190]  6.348173  5.221232  5.378480  5.561935  5.797807  5.063985  5.221232 #> [197]  4.539826  5.142608  6.426797  7.842025  6.793708  6.295757  6.033678 #> [204]  7.160619  5.745391  6.846124  7.081995  7.763401 12.218749 11.825630 #> [211] 12.559452 11.851838 11.904254  8.156520  8.837926  7.999273  8.156520 #> [218]  8.471015  7.370282  8.025480  8.130312  8.051688  7.789609  9.964867 #> [225]  8.864134  8.654471  7.632362  7.815817  2.338360  2.181113  2.469400 #> [232]  2.338360  3.334261  7.475114  4.932945 10.174531  7.737193  6.269549 #> [239]  5.561935  8.968966  6.479213  3.386677  7.684777  6.217133 11.013184 #> [246]  7.684777  5.850222  4.513618 10.279362  7.501322  4.303955  8.602055 #> [253]  4.618450 12.638076  9.676580  5.981262  8.811718 11.799422  7.868233 #> [260]  4.094291  8.706887  3.412885 12.402204  7.344074  6.610252  9.755204 #> [267] 12.087709  8.182728  4.487410  8.471015  6.059886 11.720798  8.916550 #> [274]  6.426797  7.946857 11.930462  7.920649  3.465301  9.283461  5.955054 #> [281] 13.398106  8.418599  6.479213  8.025480 12.323581  7.999273  5.628897 #> [288]  6.059545  6.838602  6.764722  6.920659  4.012051  5.562328  5.360423 #> [295]  5.677643  5.710272  5.547049  5.713470  6.013026  6.818501  4.748232 #> [302]  7.304448  5.533736  8.010070  5.074415  9.075160  7.497496  8.915397 #> [309]  5.766724  9.434628  9.248238  7.397643  3.942757  5.966428  5.886547 #> [316]  6.300580  6.435891  6.014992  5.701912  5.686108  6.092620  4.755491 #> [323]  4.894472  4.828113  8.432673  8.619981  8.182309  3.491509  4.566034 #> [330]  2.888727  4.094291  5.195024  6.688876  7.291658  5.457104  3.124598 #> [337]  6.741292  6.138510  7.396490  8.339976  7.999273 10.489026 10.357986 #> [344]  8.051688  4.172915 10.122115  9.728996 11.353887 10.986976  7.501322 #> [351]  9.047590  8.313768  8.706887  9.126213  4.644658  7.291658  2.128697 #> [358]  8.523431  5.588143  2.154905  3.937044  6.190926  6.374381  8.523431 #> [365]  3.937044  5.745391  7.868233  6.715084  8.654471  6.924748  6.400589 #> [372]  4.592242  9.571748  9.231045  8.549639  7.081995  7.527530  9.807620 #> [379]  5.902638  3.674964  4.868631  1.816141  1.727794  4.251172  3.906826 #> [386]  4.785473  1.963010  2.874627  4.998124  4.705722  5.151912  6.092515 #> [393]  4.344132  6.867326  6.345343  4.562732  3.601451  5.801345  3.109922 #> [400]  7.859270  3.663197  4.626365  2.999639  3.886069  4.763851  4.524888 #> [407]  4.730463  4.304060  4.436436  3.256450  4.452921  6.373071  5.255355 #> [414]  3.443627  5.487505  4.480465  2.654559  1.017979  2.733104  3.991085 #> [421]  1.573796  1.633236  4.157217  3.222930  5.718475  6.645712  4.722443 #> [428]  3.649464  4.826043  1.511369  2.428437  4.070363  2.893182  3.838764 #> [435]  3.211346  3.299143  4.025627  4.451243  3.014787  2.786516  5.081020 #> [442]  3.779010  4.120237  3.300191  5.258447  4.114209  3.161027  3.934423 #> [449]  3.711394  3.038636  1.765717  2.919914  4.547951  6.924748  9.021382 #> [456]  9.414501  8.864134  7.658569  7.370282  9.571748  8.942758  8.339976 #> [463]  7.999273  4.644658  7.894441  8.104104  7.239243  7.108203  7.029579 #> [470]  7.396490  8.287560  8.418599  6.767500  4.985361  5.430896  5.745391 #> [477]  5.404688  5.640559  5.430896  6.479213  6.164718  5.850222  6.374381 #> [484]  2.705271  3.806004  3.412885  3.098390  3.281846  3.753588  5.037777 #> [491]  4.513618  4.461202  4.854321  3.570133  3.491509  3.019766  6.636460 #> [498]  6.112302  5.928846  4.880529  4.985361  4.277747  4.513618  4.382579 #> [505]  3.753588  4.723282  4.539826  4.408786  4.199123  4.356371  3.701172 #> [512]  3.491509  3.308054  2.836311  5.535727  6.295757  5.850222  5.221232 #> [519]  5.824015  4.854321  2.233528  1.997657  1.814202  3.806004  4.618450 #> [526]  4.303955  4.513618  4.566034  4.120499  3.045974  2.757687  2.102489 #> [533]  1.211419  1.866617  1.656954  1.945241  2.128697  1.159003  3.779796 #> [540]  4.015668  3.517717  4.767940  5.427515  5.079211  5.224430  4.852723 #> [547]  4.859982  4.645837  5.109875  5.237140  4.958157  5.542803  5.333035 #> [554]  5.665273  6.161782  5.858268  6.337140  7.178414  6.204082  7.918683 #> [561]  5.549880  6.054906  5.791307  5.576454  5.850013  5.732942  6.582577 #> [568]  5.896322  6.153055  6.142808  5.158176  3.799007  5.088541  3.448109 #> [575]  4.095340  3.752173  4.153626  3.905280  3.900982  4.036477  5.523750 #> [582]  4.663344  4.369946  4.780860  4.290169  4.180856  4.367063  4.016428 #> [589]  3.840494  3.730735  3.522277  5.292203  5.159146  4.346045  5.008240 #> [596]  5.111788  5.702253  4.729336  4.617061  4.170950  4.700612  3.040628 #> [603]  3.539601  4.737932  2.202813  3.556138  3.578886  5.049439  5.434172 #> [610]  4.749778  3.489491  4.925633  5.124079  5.292413  5.746649  4.293655 #> [617]  5.335892  5.369359  4.476770  5.003340  4.900028  4.482405  5.162029 #> [624]  6.171479  7.207950  5.780640  4.189583  4.905584  6.087640  5.797466 #> [631]  5.738682  5.586151  6.102762  6.190690  5.330074  5.931624  5.607589 #> [638]  5.029416  5.515311  5.064535  4.955851  4.034406  3.836458  4.465736 #> [645]  4.665598  3.895845  5.763736  2.963629  4.040670  3.864422  3.986420 #> [652]  3.963933  4.158475  3.969515  3.794551  4.036031  4.279293  3.402166 #> [659]  3.715430  4.105561  5.464782  6.219571  4.610928  6.959237  6.058313 #> [666]  5.906334  6.351842  5.545634  6.902759  6.058654  5.874386  5.694312 #> [673]  4.896542  5.979952  4.272453  5.593621  5.626040  4.987353  4.553716 #> [680]  5.071664  5.091686  4.271667  4.932133  5.469841  6.065652  6.125877 #> [687]  4.757352  4.936169  3.955075  4.093374  5.240783"},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print class cm — print.cm","title":"Print class cm — print.cm","text":"S3 print function Prints first 4 elements cm class objects.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print class cm — print.cm","text":"","code":"# S3 method for cm print(x, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print class cm — print.cm","text":"x Print object. ... parameters associated print() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print class cm — print.cm","text":"object containing first four items.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.cm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print class cm — print.cm","text":"","code":"numbers<- 1:10 class(numbers)<-\"cm\" numbers #> [1] 1 2 3 4"},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print class wm — print.wm","title":"Print class wm — print.wm","text":"S3 print function Prints first 4 elements wm class objects.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print class wm — print.wm","text":"","code":"# S3 method for wm print(x, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print class wm — print.wm","text":"x Print object. ... parameters associated print() function.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print class wm — print.wm","text":"object containing first four items.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/print.wm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print class wm — print.wm","text":"","code":"numbers<- 1:10 class(numbers)<-\"wm\" numbers #> [1] 1 2 3 4"},{"path":"https://chawezimiti.github.io/BLA/reference/qd.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic functions — qd","title":"Quadratic functions — qd","text":"function fits quadratic model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/qd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic functions — qd","text":"","code":"qd(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/qd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic functions — qd","text":"x Numeric vector independent variable. beta0 Parameter describing constant. beta1 Linear parameter. beta2 Quadratic parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/qd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quadratic functions — qd","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/qd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quadratic functions — qd","text":"","code":"qd(2, 0.5,2,1) #> [1] 6"},{"path":"https://chawezimiti.github.io/BLA/reference/schmidt.html","id":null,"dir":"Reference","previous_headings":"","what":"Schmidt model — schmidt","title":"Schmidt model — schmidt","text":"function fits Schmidt model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/schmidt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schmidt model — schmidt","text":"","code":"schmidt(x, beta0, beta1, beta2)"},{"path":"https://chawezimiti.github.io/BLA/reference/schmidt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schmidt model — schmidt","text":"x Numeric vector independent variable. beta0 Parameter describing possible maximum response. beta1 Value x response maximum. beta2 scaling parameter, zero boundary constant.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/schmidt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Schmidt model — schmidt","text":"Numeric vector response value.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/schmidt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Schmidt model — schmidt","text":"","code":"schmidt(2, 20, 5, 2) #> [1] 20"},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":null,"dir":"Reference","previous_headings":"","what":"Hessian matrix — seHessian","title":"Hessian matrix — seHessian","text":"set functions support censored bivariate normal model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hessian matrix — seHessian","text":"","code":"seHessian(a, hessian = FALSE, silent = FALSE)"},{"path":"https://chawezimiti.github.io/BLA/reference/seHessian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hessian matrix — seHessian","text":"hessian matrix. hessian `True`, hessian matrix used. silent Condition matrix.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":null,"dir":"Reference","previous_headings":"","what":"Skewness — skew","title":"Skewness — skew","text":"Function calculate estimate coefficient skewness set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skewness — skew","text":"","code":"skew(x)"},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skewness — skew","text":"x vector numeric values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skewness — skew","text":"coefficient skewness.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Skewness — skew","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/skew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skewness — skew","text":"","code":"x<-evapotranspiration$`ET(mm)` skew(x) #> [1] 0.5380429"},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil survey data — soil","title":"Soil survey data — soil","text":"data set subset data set assembled AgSpace Agriculture Ltd soil survey conducted farms various management units across England. survey included measurements wheat yield well various soil parameters. particular dataset contains soil properties pH  phosphorus (P).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil survey data — soil","text":"","code":"soil"},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil survey data — soil","text":"data.frame 6110 rows 3 columns: yield Wheat yield (ton/ha) measured pH pH measurement P soil p (mg/kg)","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soil survey data — soil","text":"data set used illustration purposes package used form publication without permission owners.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/soil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soil survey data — soil","text":"","code":"data(soil)"},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Starting values for optimization functions — startValues","title":"Starting values for optimization functions — startValues","text":"functions helps determine initial values selected boundary line model using functions blbin(), blqr(), BOLIDES(), cbvn() ble_profile() determine model parameters.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starting values for optimization functions — startValues","text":"","code":"startValues(model = \"explore\", p = NULL, digits = 2, ...)"},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Starting values for optimization functions — startValues","text":"model Selects functional form boundary line. includes \"blm\" linear model, \"lp\" linear plateau model, \"mit\" Mitscherlich model, \"schmidt\" Schmidt model, \"logistic\" logistic model, \"logisticfm\" logistic model proposed Fermont et al (2009), \"inv-logistic\" inverse logistic model, \"double-logistic\" double logistic model, \"qd\" quadratic model, \"trapezium\" trapezium model \"explore\" function use exploration. default \"explore\". p number selected points used obtain start values logistic type models. NULL models. digits Number decimal points logistic type models (default 2). ... Additional graphical parameters. Applies logistic models control text plot.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Starting values for optimization functions — startValues","text":"list containing parameters suggested model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Starting values for optimization functions — startValues","text":"function uses locator() function. model selected, points make boundary points selected using mouse click plots.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Starting values for optimization functions — startValues","text":"Chawezi Miti <chawezi.miti@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/startValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Starting values for optimization functions — startValues","text":"","code":"startValues(model=\"explore\") #> y = f(P₁,P₂|x) #>  #> $Param1 #> P₁  #>  0  #>  #> $Param2 #> P₂  #>  0  #>"},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics — summastat","title":"Summary statistics — summastat","text":"function calculate summary statistics set data.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics — summastat","text":"","code":"summastat(x, sigf, varname, plot = FALSE)"},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics — summastat","text":"x vector numeric values. sigf number significant figures report (optional). varname name variable (optional), character quotes e.g. \"Clay content\". used variable called x plots. plot TRUE, plot part output. FALSE, plot part output (default FALSE).","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics — summastat","text":"matrix containing mean value, median value,   first third quartiles, sample variance, sample standard deviation,   coefficient skewness, octile skewness, coefficient kurtosis   number probable outliers data set. histogram boxplot   QQ plot variable x plot=TRUE.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary statistics — summastat","text":"Richard Murray Lark <murray.lark@nottingham.ac.uk>","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/summastat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics — summastat","text":"","code":"x<-evapotranspiration$`ET(mm)` summastat(x,2) #>      Mean Median Quartile.1 Quartile.3 Variance SD Skewness Octile skewness #> [1,]  290    280        230        340     7000 84     0.54            0.15 #>      Kurtosis No. outliers #> [1,]     0.21            0"},{"path":"https://chawezimiti.github.io/BLA/reference/trapezium.html","id":null,"dir":"Reference","previous_headings":"","what":"Trapezium model — trapezium","title":"Trapezium model — trapezium","text":"function fits trapezium model.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/trapezium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trapezium model — trapezium","text":"","code":"trapezium(x, beta0, beta1, beta2, beta3, beta4)"},{"path":"https://chawezimiti.github.io/BLA/reference/trapezium.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trapezium model — trapezium","text":"x Numeric vector independent variable. beta0 Maximum response model parameter. beta1 Intercept one model parameter. beta2 Slope one model parameter. beta3 Intercept two model parameter. beta4 Slope two model parameter.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/trapezium.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trapezium model — trapezium","text":"numeric vector response values.","code":""},{"path":"https://chawezimiti.github.io/BLA/reference/trapezium.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trapezium model — trapezium","text":"","code":"trapezium(3, 20, 5, 2, 5,2) #> [1] 11"},{"path":"https://chawezimiti.github.io/BLA/news/index.html","id":"bla-001","dir":"Changelog","previous_headings":"","what":"BLA 0.0.1","title":"BLA 0.0.1","text":"first version newly released BLA package.","code":""}]
